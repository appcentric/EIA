<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:ns0="http://schemas.oracle.com/service/bpel/common"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:ns1="http://xmlns.eia.com/AO/EBiz/O2C/TripsAM/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Update_Stop"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                exclude-result-prefixes="xsi oracle-xsl-mapper xsl xsd ns0 ns1 tns xp20 oraxsl mhdr oraext dvm xref socket"
                xmlns:ns3="http://xmlns.eia.com/AO/EBiz/O2C/TripsAO/1.0"
                xmlns:ns4="http://xmlns.eia.com/EO/common/Common/1.0"
                xmlns:ns6="http://xmlns.eia.com/EO/Standard/External/ISO/Country/3166-1/2006/Country"
                xmlns:pc="http://xmlns.oracle.com/pcbpel/" xmlns:ns7="http://xmlns.eia.com/EO/common/Header/1.0"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/jms/I028NewDesign/NUC_SubscribeTrips_CP_ABS/JMS_SubscribeTrips"
                xmlns:ns5="http://xmlns.eia.com/EO/Standard/External/ISO/Language/639-3/2007/Language"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns8="http://xmlns.eia.com/EO/Standard/External/ISO/Currency/4217/2001/Currency"
                xmlns:ns9="http://xmlns.oracle.com/pcbpel/adapter/db/I028NewDesign/NUC_SubscribeTrips_CP_ABS/DB_Update_Stop">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/JMS_SubscribeTrips.wsdl"/>
        <oracle-xsl-mapper:rootElement name="parameters" namespace="http://schemas.oracle.com/service/bpel/common"/>
      </oracle-xsl-mapper:source>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/JMS_SubscribeTrips.wsdl"/>
        <oracle-xsl-mapper:rootElement name="TripsAddRq" namespace="http://xmlns.eia.com/AO/EBiz/O2C/TripsAM/1.0"/>
        <oracle-xsl-mapper:param name="ReceiveTrips_Consume_Message_InputVariable.body"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/DB_Update_Stop.wsdl"/>
        <oracle-xsl-mapper:rootElement name="StopCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Update_Stop"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [THU MAY 05 04:30:53 CDT 2016].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="ReceiveTrips_Consume_Message_InputVariable.body"/>
  <xsl:template match="/">
    <tns:StopCollection>
      <xsl:for-each select="/ns0:parameters/ns0:item[ns0:value = 200 and ns0:msg = 0]">
        <xsl:variable name="operationID">
          <xsl:value-of select="ns0:name"/>
        </xsl:variable>
        <!--<a>
      <xsl:value-of select="$operationID"/>
      </a>-->
        <xsl:for-each select="$ReceiveTrips_Consume_Message_InputVariable.body/ns1:TripsAddRq/ns3:Trips/ns3:Trips/ns3:WshTripStps/ns3:Wsh_TripStps">
          <tns:Stop>
            <tns:operationId>
              <xsl:value-of select="$operationID"/>
            </tns:operationId>
            <tns:sequenceNumber>
              <xsl:value-of select="ns3:stopSequenceNumber"/>
            </tns:sequenceNumber>
            <xsl:choose>
              <xsl:when test="ns3:stopType =  'Drop-off'">
                <tns:isPickup>0</tns:isPickup>
              </xsl:when>
              <xsl:when test="ns3:stopType = 'Pick-up'">
                <tns:isPickup>1</tns:isPickup>
              </xsl:when>
            </xsl:choose>
            <tns:earlyStopDate>
              <xsl:value-of select="ns3:earlyStopDate"/>
            </tns:earlyStopDate>

         <xsl:choose>
             <xsl:when test="ns3:earlyStopTime !=''">
              <tns:earlyStopTime>
                <xsl:value-of select="ns3:earlyStopDate"/>
              </tns:earlyStopTime>
           </xsl:when>
           <xsl:otherwise>
              <tns:earlyStopTime/>
           </xsl:otherwise>
         </xsl:choose>

            <tns:lateStopDate>
              <xsl:value-of select="ns3:lateStopDate"/>
            </tns:lateStopDate>

          <xsl:choose>
             <xsl:when test="ns3:lateStopTime !=''">
          <tns:lateStopTime>
            <xsl:value-of select="ns3:lateStopDate"/>
          </tns:lateStopTime>
        </xsl:when>
           <xsl:otherwise>
              <tns:lateStopTime/>
           </xsl:otherwise>
         </xsl:choose>

            <tns:bolNumber>
              <xsl:value-of select="ns3:bolNumber"/>
            </tns:bolNumber>
            <tns:shipperPoNumber>
              <xsl:value-of select="ns3:custPoNumber"/>
            </tns:shipperPoNumber>
         
              <tns:addrBookName>
                <xsl:value-of select="ns3:addrBookName"/>
              </tns:addrBookName>
           
            <tns:addrCompanyName>
              <xsl:value-of select="ns3:companyName"/>
            </tns:addrCompanyName>
            <tns:addrLine1>
              <xsl:value-of select="ns3:addrLine1"/>
            </tns:addrLine1>
            <tns:addrLine2>
              <xsl:value-of select="ns3:addrLine2"/>
            </tns:addrLine2>
            <tns:addrLine3>
              <xsl:value-of select="ns3:addrLine3"/>
            </tns:addrLine3>
            <tns:addrCity>
              <xsl:value-of select="ns3:city"/>
            </tns:addrCity>
            <tns:addrStateProvince>
              <xsl:value-of select="ns3:stateProvince"/>
            </tns:addrStateProvince>
            <tns:addrPostalCode>
              <xsl:value-of select="ns3:postalCode"/>
            </tns:addrPostalCode>
            <tns:addrCountryCode>
              <xsl:value-of select="ns3:countryCode"/>
            </tns:addrCountryCode>
            <xsl:if test='ns3:stopType =  "Pick-up"'>
              <tns:rateBaseName>
                <xsl:value-of select="ns3:rateBaseName"/>
              </tns:rateBaseName>
            </xsl:if>
            <tns:ratingDate>
              <xsl:value-of select="ns3:plannedArrivalDate"/>
            </tns:ratingDate>
            <tns:pointName>
              <xsl:value-of select="ns3:pointName"/>
            </tns:pointName>
            <tns:pointType>70</tns:pointType>
            <tns:distance>
              <xsl:value-of select="ns3:attribute12"/>
            </tns:distance>
            <xsl:if test='ns3:stopType = "Drop-off"'>
              <tns:addrCustomerNumber>
                <xsl:value-of select="ns3:addrCustomerNumber"/>
              </tns:addrCustomerNumber>
            </xsl:if>
            <xsl:choose>
              <xsl:when test="(ns3:orderDateTypeCode = 'ARRIVAL') and (ns3:stopType = 'Drop-off') ">
                <tns:requiredDate>
                  <xsl:value-of select="ns3:lateStopDate"/>
                </tns:requiredDate>
              </xsl:when>
              <xsl:when test="(ns3:orderDateTypeCode = 'SHIP') and (ns3:stopType = 'Picked-up' or ns3:stopType = 'Pick-up') ">
                <tns:requiredDate>
                  <xsl:value-of select="ns3:earlyStopDate"/>
                </tns:requiredDate>
              </xsl:when>
            </xsl:choose>
            <tns:customLookup1>
              <xsl:value-of select="ns3:salesRep"/>
            </tns:customLookup1>
          </tns:Stop>
        </xsl:for-each>
      </xsl:for-each>
    </tns:StopCollection>
  </xsl:template>
</xsl:stylesheet>
