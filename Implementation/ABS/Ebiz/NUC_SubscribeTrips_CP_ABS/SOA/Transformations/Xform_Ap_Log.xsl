<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Insert_Appointment_Logging"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:ns0="http://xmlns.eia.com/AO/EBiz/O2C/TripsAM/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                exclude-result-prefixes="xsi oracle-xsl-mapper xsl xsd ns0 tns xp20 oraxsl mhdr oraext dvm xref socket"
                xmlns:ns3="http://xmlns.eia.com/AO/EBiz/O2C/TripsAO/1.0"
                xmlns:ns4="http://xmlns.eia.com/EO/common/Common/1.0"
                xmlns:ns2="http://schemas.oracle.com/service/bpel/common"
                xmlns:ns6="http://xmlns.eia.com/EO/Standard/External/ISO/Country/3166-1/2006/Country"
                xmlns:pc="http://xmlns.oracle.com/pcbpel/" xmlns:ns7="http://xmlns.eia.com/EO/common/Header/1.0"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/jms/I028NewDesign/NUC_SubscribeTrips_CP_ABS/JMS_SubscribeTrips"
                xmlns:ns5="http://xmlns.eia.com/EO/Standard/External/ISO/Language/639-3/2007/Language"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns8="http://xmlns.eia.com/EO/Standard/External/ISO/Currency/4217/2001/Currency"
                xmlns:ns9="http://xmlns.oracle.com/pcbpel/adapter/db/I028NewDesign/NUC_SubscribeTrips_CP_ABS/DB_Insert_Appointment_Logging">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/JMS_SubscribeTrips.wsdl"/>
        <oracle-xsl-mapper:rootElement name="TripsAddRq" namespace="http://xmlns.eia.com/AO/EBiz/O2C/TripsAM/1.0"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/DB_Insert_Appointment_Logging.wsdl"/>
        <oracle-xsl-mapper:rootElement name="OperationCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Insert_Appointment_Logging"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [WED DEC 09 07:39:57 CST 2015].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:OperationCollection>
      <xsl:for-each select="/ns0:TripsAddRq/ns3:Trips/ns3:Trips/ns3:WshTripStps/ns3:Wsh_TripStps[ns3:stopType = 'Pick-up' or ns3:stopType = 'Picked-up']">
        <tns:Operation>
          <tns:operationId>
            <xsl:value-of select="oraext:sequence-next-val('OPERATION_SEQ','jdbc/omsi')"/>
          </tns:operationId>
          <tns:operation>
            <xsl:value-of select="/ns0:TripsAddRq/ns3:Trips/ns3:Trips/ns3:attribute2"/>
          </tns:operation>
          <tns:isReady>1</tns:isReady>
          <tns:isRead>0</tns:isRead>
          <tns:resultCode>0</tns:resultCode>
          <tns:creationTimestamp>
            <xsl:value-of select="xp20:current-dateTime ( )"/>
          </tns:creationTimestamp>
          <tns:appointmentLoggingCollection>
            <tns:AppointmentLogging>
              <tns:clientKey1>
                <xsl:value-of select="/ns0:TripsAddRq/ns3:Trips/ns3:Trips/ns3:clientKey1"/>
              </tns:clientKey1>
              <tns:clientKey2>
                <xsl:value-of select="/ns0:TripsAddRq/ns3:Trips/ns3:Trips/ns3:tripId"/>
              </tns:clientKey2>
              <tns:clientKey3>
                <xsl:value-of select="/ns0:TripsAddRq/ns3:Trips/ns3:Trips/ns3:name"/>
              </tns:clientKey3>
              <tns:clientKey4>EBS</tns:clientKey4>
              <tns:stopSequenceNumber>
                <xsl:value-of select="ns3:stopSequenceNumber"/>
              </tns:stopSequenceNumber>
              <!-- <xsl:choose>
                <xsl:when test='(ns3:attribute8 = "Gate In") or (ns3:attribute8 = "Gate Out")'>-->
              <tns:logType>
                <xsl:text>G</xsl:text>
              </tns:logType>
              <!--</xsl:when>
                <xsl:when test='(ns3:attribute8 = "Dock In") or (ns3:attribute8 = "Dock Out")'>
                  <tns:logType>
                    <xsl:text>L</xsl:text>
                  </tns:logType>
                </xsl:when>
              </xsl:choose>-->
              <!-- <xsl:choose>
                <xsl:when test='(ns3:attribute8 = "Dock In") or (ns3:attribute8 = "Gate In")'>-->
              <tns:isIn>
                <xsl:text>1</xsl:text>
              </tns:isIn>
              <!-- </xsl:when>
                <xsl:when test='(ns3:attribute8 = "Gate Out") or (ns3:attribute8 = "Dock Out")'>
                  <tns:isIn>
                    <xsl:text>0</xsl:text>
                  </tns:isIn>
                </xsl:when>
              </xsl:choose>-->
              <!-- <tns:logType>
                  <xsl:text>G</xsl:text>
                </tns:logType>
                <tns:isIn>
                  <xsl:text>1</xsl:text>
                </tns:isIn>-->
              <xsl:choose>
                <xsl:when test='ns3:attribute8 = "Dock In"'>
                  <tns:timestamp>
                    <xsl:value-of select="concat(substring(ns3:attribute3,1,4),'-',substring(ns3:attribute3,6,2),'-',substring(ns3:attribute3,9,2),'T',substring(ns3:attribute3,12,8))"/>
                  </tns:timestamp>
                </xsl:when>
                <xsl:when test='ns3:attribute8 = "Gate In"'>
                  <tns:timestamp>
                    <xsl:value-of select="concat(substring(ns3:attribute1,1,4),'-',substring(ns3:attribute1,6,2),'-',substring(ns3:attribute1,9,2),'T',substring(ns3:attribute1,12,8))"/>
                  </tns:timestamp>
                </xsl:when>
                <xsl:when test='ns3:attribute8 = "Gate Out"'>
                  <tns:timestamp>
                    <xsl:value-of select="concat(substring(ns3:attribute6,1,4),'-',substring(ns3:attribute6,6,2),'-',substring(ns3:attribute6,9,2),'T',substring(ns3:attribute6,12,8))"/>
                  </tns:timestamp>
                </xsl:when>
                <xsl:when test='ns3:attribute8 = "Dock Out"'>
                  <tns:timestamp>
                    <xsl:value-of select="concat(substring(ns3:attribute5,1,4),'-',substring(ns3:attribute1,6,2),'-',substring(ns3:attribute5,9,2),'T',substring(ns3:attribute5,12,8))"/>
                  </tns:timestamp>
                </xsl:when>
              </xsl:choose>
              <!-- <tns:timestamp>2015-10-06T07:54:04.078-05:00</tns:timestamp>-->
              <tns:trailerNumber>
                <xsl:value-of select="/ns0:TripsAddRq/ns3:Trips/ns3:Trips/ns3:vehicleNumber"/>
              </tns:trailerNumber>
              <tns:tareWeight>
                <xsl:value-of select="ns3:attribute2"/>
              </tns:tareWeight>
              <tns:loadedWeight>
                <xsl:value-of select="ns3:attribute7"/>
              </tns:loadedWeight>
            </tns:AppointmentLogging>
          </tns:appointmentLoggingCollection>
        </tns:Operation>
      </xsl:for-each>
    </tns:OperationCollection>
  </xsl:template>
</xsl:stylesheet>
