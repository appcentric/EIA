<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Sep 16 00:32:56 CDT 2015
  Author:  nirav.sanghavi
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="CreateSalesOrderABS"
               targetNamespace="http://xmlns.eia.com/Implementation/ABS/EBiz/O2C/SalesOrderABS/1.0"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.eia.com/Implementation/ABS/EBiz/O2C/SalesOrderABS/1.0"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:ui="http://xmlns.oracle.com/soa/designer"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/I101FreightPayment/NUC_CreateEBSSalesOrderABS/DbInsert_XXNUC_OE_HEADERS_IFACE_TAB"
         xmlns:ns2="http://xmlns.eia.com/CommonLogging"
         xmlns:ns5="http://xmlns.eia.com/AO/EBiz/O2C/SalesOrderAO/1.0"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns3="http://xmlns.eia.com/AO/EBiz/O2C/SalesOrderAM/1.0"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ns4="http://xmlns.eia.com/EO/common/Header/1.0"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:eia="http://xmlns.eia.com/extensions/1.0"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns6="http://xmlns.oracle.com/pcbpel/adapter/db/I101FreightPayment/NUC_CreateEBSSalesOrderABS/DbInsertXXNUC_ONT_HEADERS_IFACE_STG">

    <import ui:processWSDL="true" namespace="http://xmlns.eia.com/Implementation/ABS/EBiz/O2C/SalesOrderABS/1.0" location="../WSDLs/CreateSalesOrderABS.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="createsalesorderabs_client" partnerLinkType="client:CreateSalesOrderABS" myRole="CreateSalesOrderABSProvider"/>
    <partnerLink name="CommonLogging_pl" partnerLinkType="ns2:CommonLogging" partnerRole="CommonLoggingProvider"/>
    <partnerLink name="DbInsertXXNUC_ONT_HEADERS_IFACE_STG"
                 partnerLinkType="ns6:DbInsertXXNUC_ONT_HEADERS_IFACE_STG_plt"
                 partnerRole="DbInsertXXNUC_ONT_HEADERS_IFACE_STG_role"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:CreateSalesOrderABSRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:CreateSalesOrderABSResponseMessage"/>
    <variable name="g_Invoke_StartLog_process_InputVariable" messageType="ns2:CommonLoggingRequestMessage"/>
    <variable name="g_Invoke_EndLog_process_InputVariable" messageType="ns2:CommonLoggingRequestMessage"/>
    <variable name="g_Reply_ErrorOutput_process_OutputVariable"
              messageType="client:CreateSalesOrderABSResponseMessage"/>
    <variable name="g_Invoke_ErrorLog_process_InputVariable" messageType="ns2:CommonLoggingRequestMessage"/>
    <variable name="g_InvokeDbInsertXXNUC_ONT_HEADERS_IFACE_STG_insert_InputVariable"
              messageType="ns6:XxnucOntHeadersIfaceStgCollection_msg"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence1">
        <assign name="Assign_ErrorLog">
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:TransactionIDREF</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:TransactionId</to>
          </copy>
          <copy>
            <from>'NextGen'</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:ProjectName</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:ComponentID</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:ComponentId</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:TransactionName</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:TransactionName</to>
          </copy>
          <copy>
            <from>ora:getCompositeName()</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:ProcessName</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:LoggingSystem</to>
          </copy>
          <copy>
            <from>'2'</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:TargetSystem</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:Source</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:SourceSystem</to>
          </copy>
          <copy>
            <from>'4'</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:LogType</to>
          </copy>
          <copy>
            <from>concat('FlowId:',ora:getFlowId(),':',ora:getFaultAsString())</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:MessageDescription</to>
          </copy>
          <copy>
            <from>'2'</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:TransactionStatus</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:CreatedBy</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$g_Invoke_ErrorLog_process_InputVariable.CommonLogging/ns2:UpdatedBy</to>
          </copy>
        </assign>
        <invoke name="Invoke_ErrorLog" partnerLink="CommonLogging_pl"
                portType="ns2:CommonLogging" operation="process"
                inputVariable="g_Invoke_ErrorLog_process_InputVariable" bpelx:invokeAsDetail="no">
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
        <assign name="Assign_ErrorOutput">
          <copy>
            <from>'ERROR'</from>
            <to>$g_Reply_ErrorOutput_process_OutputVariable.payload/ns4:HeaderRs/ns4:Status/ns4:Status</to>
          </copy>
          <copy>
            <from>'ERROR'</from>
            <to>$g_Reply_ErrorOutput_process_OutputVariable.payload/ns5:SalesOrderResponse/ns5:Result</to>
          </copy>
          <copy>
            <from>concat(ora:getFaultName(),'::',ora:getFaultAsString())</from>
            <to>$g_Reply_ErrorOutput_process_OutputVariable.payload/ns5:SalesOrderResponse/ns5:ErrorMsg</to>
          </copy>
        </assign>
        <reply name="Reply_ErrorOutput" variable="g_Reply_ErrorOutput_process_OutputVariable"
               partnerLink="createsalesorderabs_client" portType="client:CreateSalesOrderABS" operation="process"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in CreateSalesOrderABS.wsdl) -->
    <receive name="receiveInput" partnerLink="createsalesorderabs_client" portType="client:CreateSalesOrderABS" operation="process" variable="inputVariable" createInstance="yes"/>
    <!--if name="Check_OrderType">
      <documentation>
        <![CDATA[EDIOrder]]>
      </documentation>
      <condition>$inputVariable.payload/ns5:SalesOrderDetails/ns5:ORDER_TYPE='850'  or $inputVariable.payload/ns5:SalesOrderDetails/ns5:ORDER_TYPE='852'</condition>
      <assign name="Assign_EDIOrder">
        <copy>
          <from>'EDIOrder'</from>
          <to>$TempOrderTye</to>
        </copy>
      </assign>
      <else>
        <documentation>
          <![CDATA[WebOrder]]>
        </documentation>
        <assign name="Assign_WebOrder">
          <copy>
            <from>'WebOrder'</from>
            <to>$TempOrderTye</to>
          </copy>
        </assign>
      </else>
    </if-->
    <scope name="ScopeStartLogging">
      <faultHandlers>
        <catchAll>
          <empty name="Do_Nothing"/>
        </catchAll>
      </faultHandlers>
      <sequence name="Sequence_StartLog">
        <assign name="Assign_StartLog">
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:TransactionIDREF</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:TransactionId</to>
          </copy>
          <copy>
            <from>'NextGen'</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:ProjectName</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:ComponentID</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:ComponentId</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:TransactionName</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:TransactionName</to>
          </copy>
          <copy>
            <from>ora:getCompositeName()</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:ProcessName</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:LoggingSystem</to>
          </copy>
          <copy>
            <from>'2'</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:TargetSystem</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:Source</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:SourceSystem</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:LogType</to>
          </copy>
          <copy>
            <from>'BMG-003'</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:MessageCode</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:TransactionStatus</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:CreatedBy</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$g_Invoke_StartLog_process_InputVariable.CommonLogging/ns2:UpdatedBy</to>
          </copy>
        </assign>
        <invoke name="Invoke_StartLog" partnerLink="CommonLogging_pl"
                portType="ns2:CommonLogging" operation="process"
                inputVariable="g_Invoke_StartLog_process_InputVariable" bpelx:invokeAsDetail="no">
          <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
      </sequence>
    </scope>
    <assign name="Transformation_Input_To_DbInput">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from>ora:doXSLTransformForDoc("../Transformations/Transformation_Input_To_DbInput.xsl", $inputVariable.payload)</from>
        <to variable="g_InvokeDbInsertXXNUC_ONT_HEADERS_IFACE_STG_insert_InputVariable"
            part="XxnucOntHeadersIfaceStgCollection"/>
      </copy>
    </assign>
    <invoke name="InvokeDbInsertXXNUC_ONT_HEADERS_IFACE_STG" bpelx:invokeAsDetail="no"
            partnerLink="DbInsertXXNUC_ONT_HEADERS_IFACE_STG" portType="ns6:DbInsertXXNUC_ONT_HEADERS_IFACE_STG_ptt"
            operation="insert" inputVariable="g_InvokeDbInsertXXNUC_ONT_HEADERS_IFACE_STG_insert_InputVariable"/>
    <!--assign name="Transformation_Input_To_DbInput">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from>ora:doXSLTransformForDoc("../Transformations/Transformation_Input_To_DbInput.xsl", $inputVariable.payload)</from>
        <to variable="g_Invoke_DbInsert_XXNUC_OE_HEADERS_IFACE_TAB_insert_InputVariable"
            part="XxnucOeHeadersIfaceTabCollection"/>
      </copy>
    </assign>
    <invoke name="Invoke_DbInsert_XXNUC_OE_HEADERS_IFACE_TAB" bpelx:invokeAsDetail="no"
            partnerLink="DbInsert_XXNUC_OE_HEADERS_IFACE_TAB" portType="ns1:DbInsert_XXNUC_OE_HEADERS_IFACE_TAB_ptt"
            operation="insert" inputVariable="g_Invoke_DbInsert_XXNUC_OE_HEADERS_IFACE_TAB_insert_InputVariable"/-->
    <scope name="Scope2">
      <faultHandlers>
        <catchAll>
          <empty name="Do_Nothing"/>
        </catchAll>
      </faultHandlers>
      <sequence name="Sequence_EndLog">
        <assign name="Assign_EndLog">
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:TransactionIDREF</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:TransactionId</to>
          </copy>
          <copy>
            <from>'NextGen'</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:ProjectName</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:ComponentID</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:ComponentId</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:TransactionName</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:TransactionName</to>
          </copy>
          <copy>
            <from>ora:getCompositeName()</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:ProcessName</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:LoggingSystem</to>
          </copy>
          <copy>
            <from>'2'</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:TargetSystem</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns4:HeaderRq/ns4:Source</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:SourceSystem</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:LogType</to>
          </copy>
          <copy>
            <from>'BMG-021'</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:MessageCode</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns5:SalesOrderDetails/ns5:ORIG_SYS_DOCUMENT_REF</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:MessageDescription</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:TransactionStatus</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:CreatedBy</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$g_Invoke_EndLog_process_InputVariable.CommonLogging/ns2:UpdatedBy</to>
          </copy>
        </assign>
        <invoke name="Invoke_EndLog" partnerLink="CommonLogging_pl"
                portType="ns2:CommonLogging" operation="process" inputVariable="g_Invoke_EndLog_process_InputVariable"
                bpelx:invokeAsDetail="no">
          <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
      </sequence>
    </scope>
    <assign name="Assign_Output">
      <copy>
        <from>'SUCCESS'</from>
        <to>$outputVariable.payload/ns4:HeaderRs/ns4:Status/ns4:Status</to>
      </copy>
      <copy>
        <from>'SUCCESS'</from>
        <to>$outputVariable.payload/ns5:SalesOrderResponse/ns5:Result</to>
      </copy>
    </assign>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="createsalesorderabs_client" portType="client:CreateSalesOrderABS" operation="process" variable="outputVariable"/>
  </sequence>
</process>