<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:ns1="http://schemas.oracle.com/service/bpel/common"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:ns0="http://www.example.org"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns1 ns0 oraxsl xp20 xref mhdr oraext dvm socket"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:ns="http://xmlns.eia.com/ABS/EBiz/ReceiptABS/1.0"
                xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop" xmlns:pc="http://xmlns.oracle.com/pcbpel/"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:cor="http:/xmlns.eia.com/Implementation/ABF/NSNE_ASNQualityResults_Suppliers_EBS_ABF/ASNQualityResults_Suppliers/1.0/correlationset"
                xmlns:ns2="http://xmlns.eia.com/EDN/1.0/Event"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/ftp/I109byManish/NSNE_ASNQualityResults_Suppliers_EBS_ABF/FTP_ReadASNSupplier"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns3="http:/xmlns.eia.com/Implementation/ABS/NUC_EBizLot_ABS/EBizLotABS/1.0"
                xmlns:ns4="http:/xmlns.eia.com/Implementation/ABS/NUC_NUC_EBizQualityResults_ABS/QualityResults/1.0">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/FTP_ReadASNSupplier.wsdl"/>
        <oracle-xsl-mapper:rootElement name="Envelope" namespace="http://www.example.org"/>
      </oracle-xsl-mapper:source>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/FTP_ReadASNSupplier.wsdl"/>
        <oracle-xsl-mapper:rootElement name="parameters" namespace="http://schemas.oracle.com/service/bpel/common"/>
        <oracle-xsl-mapper:param name="l_params"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/FTP_ReadASNSupplier.wsdl"/>
        <oracle-xsl-mapper:rootElement name="Envelope" namespace="http://www.example.org"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [WED MAY 18 06:00:46 CDT 2016].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="l_params"/>
  <xsl:template match="/">
    <Envelope>
      <SupplierInfo>
        <MillDUNS>
          <xsl:value-of select="/Envelope/SupplierInfo/MillDUNS"/>
        </MillDUNS>
        <Name>
          <xsl:value-of select="/Envelope/SupplierInfo/Name"/>
        </Name>
        <Addr>
          <xsl:value-of select="/Envelope/SupplierInfo/Addr"/>
        </Addr>
        <City>
          <xsl:value-of select="/Envelope/SupplierInfo/City"/>
        </City>
        <State>
          <xsl:value-of select="/Envelope/SupplierInfo/State"/>
        </State>
        <PostalCode>
          <xsl:value-of select="/Envelope/SupplierInfo/PostalCode"/>
        </PostalCode>
      </SupplierInfo>
      <CustomerInfo>
        <SoldTo>
          <Name>
            <xsl:value-of select="/Envelope/CustomerInfo/SoldTo/Name"/>
          </Name>
          <SupplierCustID>
            <xsl:value-of select="/Envelope/CustomerInfo/SoldTo/SupplierCustID"/>
          </SupplierCustID>
          <Addr>
            <xsl:value-of select="/Envelope/CustomerInfo/SoldTo/Addr"/>
          </Addr>
          <City>
            <xsl:value-of select="/Envelope/CustomerInfo/SoldTo/City"/>
          </City>
          <State>
            <xsl:value-of select="/Envelope/CustomerInfo/SoldTo/State"/>
          </State>
          <PostalCode>
            <xsl:value-of select="/Envelope/CustomerInfo/SoldTo/PostalCode"/>
          </PostalCode>
        </SoldTo>
        <BillTo>
          <Name>
            <xsl:value-of select="/Envelope/CustomerInfo/BillTo/Name"/>
          </Name>
          <SupplierCustID>
            <xsl:value-of select="/Envelope/CustomerInfo/BillTo/SupplierCustID"/>
          </SupplierCustID>
          <Addr>
            <xsl:value-of select="/Envelope/CustomerInfo/BillTo/Addr"/>
          </Addr>
          <City>
            <xsl:value-of select="/Envelope/CustomerInfo/BillTo/City"/>
          </City>
          <State>
            <xsl:value-of select="/Envelope/CustomerInfo/BillTo/State"/>
          </State>
          <PostalCode>
            <xsl:value-of select="/Envelope/CustomerInfo/BillTo/PostalCode"/>
          </PostalCode>
        </BillTo>
      </CustomerInfo>
      <FreightInfo>
        <ShipMode>
          <xsl:value-of select="/Envelope/FreightInfo/ShipMode"/>
        </ShipMode>
        <ShipDate>
          <xsl:value-of select="/Envelope/FreightInfo/ShipDate"/>
        </ShipDate>
        <FreightTerm>
          <xsl:value-of select="/Envelope/FreightInfo/FreightTerm"/>
        </FreightTerm>
        <Carrier>
          <Name>
            <xsl:value-of select="/Envelope/FreightInfo/Carrier/Name"/>
          </Name>
          <VehicleID>
            <xsl:value-of select="/Envelope/FreightInfo/Carrier/VehicleID"/>
          </VehicleID>
        </Carrier>
        <ShipTo>
          <Name>
            <xsl:value-of select="/Envelope/FreightInfo/ShipTo/Name"/>
          </Name>
          <SupplierCustID>
            <xsl:value-of select="/Envelope/FreightInfo/ShipTo/SupplierCustID"/>
          </SupplierCustID>
          <Addr>
            <xsl:value-of select="/Envelope/FreightInfo/ShipTo/Addr"/>
          </Addr>
          <City>
            <xsl:value-of select="/Envelope/FreightInfo/ShipTo/City"/>
          </City>
          <State>
            <xsl:value-of select="/Envelope/FreightInfo/ShipTo/State"/>
          </State>
          <PostalCode>
            <xsl:value-of select="/Envelope/FreightInfo/ShipTo/PostalCode"/>
          </PostalCode>
        </ShipTo>
      </FreightInfo>
      <Waybills>
        <Waybill>
          <WaybillNum>
            <xsl:value-of select="/Envelope/Waybills/Waybill/WaybillNum"/>
          </WaybillNum>
          <WaybillDateTime>
            <xsl:value-of select="/Envelope/Waybills/Waybill/WaybillDateTime"/>
          </WaybillDateTime>
          <WaybillLines>
            <xsl:for-each select="/Envelope/Waybills/Waybill/WaybillLines/WaybillLine">
              <xsl:variable name="posVar">
                <xsl:value-of select="position()"/>
              </xsl:variable>
              <WaybillLine>
                <LineNum>
                  <xsl:value-of select="LineNum"/>
                </LineNum>
                <CustPO>
                  <xsl:value-of select="CustPO"/>
                </CustPO>
                <CustPartNum>
                  <xsl:value-of select="$l_params/ns1:parameters/ns1:item[ns1:name = $posVar]/ns1:value"/>
                </CustPartNum>
                <SupplierOrderNum>
                  <xsl:value-of select="SupplierOrderNum"/>
                </SupplierOrderNum>
                <QtyBundles>
                  <xsl:value-of select="QtyBundles"/>
                </QtyBundles>
                <LineWgtTtl>
                  <xsl:value-of select="LineWgtTtl"/>
                </LineWgtTtl>
                <Bundles>
                  <xsl:for-each select="Bundles/Bundle">
                    <Bundle>
                      <BundleNum>
                        <xsl:value-of select="BundleNum"/>
                      </BundleNum>
                      <RollDateTime>
                        <xsl:value-of select="RollDateTime"/>
                      </RollDateTime>
                      <SupplierProductCode>
                        <xsl:value-of select="SupplierProductCode"/>
                      </SupplierProductCode>
                      <SupplierProductDesc>
                        <xsl:value-of select="SupplierProductDesc"/>
                      </SupplierProductDesc>
                      <Grade>
                        <xsl:value-of select="Grade"/>
                      </Grade>
                      <GradeDesc>
                        <xsl:value-of select="GradeDesc"/>
                      </GradeDesc>
                      <Shape>
                        <xsl:value-of select="Shape"/>
                      </Shape>
                      <Size>
                        <xsl:value-of select="Size"/>
                      </Size>
                      <Dims>
                        <Dim>
                          <xsl:if test="Dims/Dim/@Axis">
                            <xsl:attribute name="Axis">
                              <xsl:value-of select="Dims/Dim/@Axis"/>
                            </xsl:attribute>
                          </xsl:if>
                          <xsl:value-of select="Dims/Dim"/>
                        </Dim>
                      </Dims>
                      <TagNum>
                        <xsl:value-of select="TagNum"/>
                      </TagNum>
                      <Length>
                        <xsl:value-of select="Length"/>
                      </Length>
                      <QtyPcs>
                        <xsl:value-of select="QtyPcs"/>
                      </QtyPcs>
                      <TtlWgt>
                        <xsl:value-of select="TtlWgt"/>
                      </TtlWgt>
                      <HeatNum>
                        <xsl:value-of select="HeatNum"/>
                      </HeatNum>
                      <ReheatNum>
                        <xsl:value-of select="ReheatNum"/>
                      </ReheatNum>
                    </Bundle>
                  </xsl:for-each>
                </Bundles>
              </WaybillLine>
            </xsl:for-each>
          </WaybillLines>
        </Waybill>
      </Waybills>
      <Heats>
        <xsl:for-each select="/Envelope/Heats/Heat">
          <Heat>
            <HeatNum>
              <xsl:value-of select="HeatNum"/>
            </HeatNum>
            <ReheatNum>
              <xsl:value-of select="ReheatNum"/>
            </ReheatNum>
            <MillDUNS>
              <xsl:value-of select="MillDUNS"/>
            </MillDUNS>
            <MeltCountry>
              <xsl:value-of select="MeltCountry"/>
            </MeltCountry>
             <MeltDate>
              <xsl:value-of select="MeltDate"/>
            </MeltDate>
            <Chemistry>
              <xsl:for-each select="Chemistry/ChemMeasure">
                <ChemMeasure>
                  <xsl:if test="@Symbol">
                    <xsl:attribute name="Symbol">
                      <xsl:value-of select="@Symbol"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:value-of select="."/>
                </ChemMeasure>
              </xsl:for-each>
            </Chemistry>
          </Heat>
        </xsl:for-each>
      </Heats>
      <PropertyTestSets>
        <xsl:for-each select="/Envelope/PropertyTestSets/PropertyTestSet">
          <PropertyTestSet>
            <Yield>
              <xsl:value-of select="Yield"/>
            </Yield>
            <Tensile>
              <xsl:value-of select="Tensile"/>
            </Tensile>
            <Elongation>
              <xsl:if test="Elongation/@GageLen">
                <xsl:attribute name="GageLen">
                  <xsl:value-of select="Elongation/@GageLen"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="Elongation"/>
            </Elongation>
            <xsl:if test="ReductionInArea">
              <ReductionInArea>
                <xsl:value-of select="ReductionInArea"/>
              </ReductionInArea>
            </xsl:if>
            <xsl:if test="Hardness">
              <Hardness>
                <xsl:if test="Hardness/@Scale">
                  <xsl:attribute name="Scale">
                    <xsl:value-of select="Hardness/@Scale"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="Hardness"/>
              </Hardness>
            </xsl:if>
            <RollCountry>
              <xsl:value-of select="RollCountry"/>
            </RollCountry>
            <ReductionRatio>
              <xsl:value-of select="ReductionRatio"/>
            </ReductionRatio>
            <CFCountry>
              <xsl:value-of select="CFCountry"/>
            </CFCountry>
            <ReheatNum>
              <xsl:value-of select="ReheatNum"/>
            </ReheatNum>
            <Bundles>
              <xsl:for-each select="Bundles/BundleNum">
                <BundleNum>
                  <xsl:value-of select="."/>
                </BundleNum>
              </xsl:for-each>
            </Bundles>
          </PropertyTestSet>
        </xsl:for-each>
      </PropertyTestSets>
    </Envelope>
  </xsl:template>
</xsl:stylesheet>
