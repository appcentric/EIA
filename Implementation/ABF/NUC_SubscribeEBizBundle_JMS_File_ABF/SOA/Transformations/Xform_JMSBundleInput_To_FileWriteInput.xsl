<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="2.0" xmlns:ns0="http://nucor.eia.com/AO/Ebiz/L2C/BundleAM/1.0"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:tns="writeBundles" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns0 tns oraxsl xp20 xref mhdr oraext dvm socket"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/jms/DV1Application/NUC_SubscribeEBizBundle_JMS_File_ABF/JMSConsumeBundle"
                xmlns:pc="http://xmlns.oracle.com/pcbpel/"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns6="http://nucor.eia.com/AO/Ebiz/L2C/BundleAO/1.0"
                xmlns:ns2="http://xmlns.eia.com/AO/EBiz/common/OperationResultAO/1.0"
                xmlns:ns3="http://xmlns.eia.com/EO/common/Common/1.0"
                xmlns:ns5="http://xmlns.eia.com/EO/Standard/External/ISO/Country/3166-1/2006/Country"
                xmlns:ns8="http://xmlns.eia.com/EO/common/Header/1.0"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ns4="http://xmlns.eia.com/EO/Standard/External/ISO/Language/639-3/2007/Language"
                xmlns:ns7="http://xmlns.eia.com/EO/Standard/External/ISO/Currency/4217/2001/Currency"
                xmlns:ns9="http://xmlns.oracle.com/pcbpel/adapter/ftp/DV1Application/NUC_SubscribeEBizBundle_JMS_File_ABF/FTP_WriteBundles"
                xmlns:ns10="http://xmlns.eia.com/AO/Ebiz/D2S/QualityResultsAO/1.0">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/JMSConsumeBundle.wsdl"/>
        <oracle-xsl-mapper:rootElement name="QueryBundleByBolNoResponseMessage"
                                       namespace="http://nucor.eia.com/AO/Ebiz/L2C/BundleAM/1.0"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/FTP_WriteBundles.wsdl"/>
        <oracle-xsl-mapper:rootElement name="BOL" namespace="writeBundles"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [WED APR 27 10:28:44 CDT 2016].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:BOL>
      <tns:BillOfLadingHeaderInfo>
        <tns:BillOfLading>
          <xsl:value-of select="substring-after (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:BolNumber, '-' )"/>
        </tns:BillOfLading>
        <tns:RecordType>1</tns:RecordType>
        <tns:Sequence>
          <xsl:value-of select="position ( )"/>
        </tns:Sequence>
        <!--tns:RecordType>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:RecType"/>
        </tns:RecordType>
        <tns:Sequence>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:Sequence"/>
        </tns:Sequence-->
        <tns:BillOfLadingDate>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:BolDate"/>
        </tns:BillOfLadingDate>
        <tns:BillOfLadingTime>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:BolTime"/>
        </tns:BillOfLadingTime>
        <tns:ShippedBy>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ShippedBy"/>
        </tns:ShippedBy>
        <tns:CustomerPickUp>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:CustPickUp"/>
        </tns:CustomerPickUp>
        <tns:ScaleTicket>0000000</tns:ScaleTicket>
        <!-- Defect# 2429 START-->
        <xsl:choose>
          <xsl:when test="contains (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:TareWeight, '.' )">
            <tns:TareWeight>
              <xsl:value-of select="substring-before (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:TareWeight, '.' )"/>
            </tns:TareWeight>
          </xsl:when>
          <xsl:otherwise>
            <tns:TareWeight>
              <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:TareWeight"/>
            </tns:TareWeight>
          </xsl:otherwise>
        </xsl:choose>
        <!--tns:TareWeight>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:TareWeight"/>
        </tns:TareWeight-->
        <xsl:choose>
          <xsl:when test="contains (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:GrossWeight, '.' )">
            <tns:GrossWeight>
              <xsl:value-of select="substring-before (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:GrossWeight, '.' )"/>
            </tns:GrossWeight>
          </xsl:when>
          <xsl:otherwise>
            <tns:GrossWeight>
              <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:GrossWeight"/>
            </tns:GrossWeight>
          </xsl:otherwise>
        </xsl:choose>
        <!--tns:GrossWeight>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:GrossWeight"/>
        </tns:GrossWeight-->
        <xsl:choose>
          <xsl:when test="contains (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:NetWeight, '.' )">
            <tns:NetWeight>
              <xsl:value-of select="substring-before (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:NetWeight, '.' )"/>
            </tns:NetWeight>
          </xsl:when>
          <xsl:otherwise>
            <tns:NetWeight>
              <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:NetWeight"/>
            </tns:NetWeight>
          </xsl:otherwise>
        </xsl:choose>
        <!--tns:NetWeight>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:NetWeight"/>
        </tns:NetWeight-->
        <!-- Defect# 2429 END-->
        <tns:Carrier>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:Carrier"/>
        </tns:Carrier>
        <tns:CarNumber>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:CarNumber"/>
        </tns:CarNumber>
        <tns:PrepaidFreight>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:PrepaidFreight"/>
        </tns:PrepaidFreight>
        <tns:FreightRate>0000000</tns:FreightRate>
        <tns:FreightBy/>
        <tns:Miles>00000</tns:Miles>
        <tns:FreightAmount>0000000</tns:FreightAmount>
        <tns:StopCharge>0000000</tns:StopCharge>
        <tns:OtherChargeDescription>00000000000000000000</tns:OtherChargeDescription>
        <tns:OtherCharge>0000000</tns:OtherCharge>
        <tns:LoadOrderNumber>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:LoadOrder"/>
        </tns:LoadOrderNumber>
        <tns:SalesDivision>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:SalesDiv"/>
        </tns:SalesDivision>
        <xsl:choose>
          <xsl:when test="(/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBolDetails/ns6:BolDetail[1]/ns6:OrderType) and (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBolDetails/ns6:BolDetail[1]/ns6:OrderType = 'NSNE OSP Ship Only Order' or /ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBolDetails/ns6:BolDetail[1]/ns6:OrderType = 'NCFWI OSP Ship Only Order')">
            <tns:OSP>OSP</tns:OSP>
          </xsl:when>
          <xsl:otherwise>
            <tns:OSP></tns:OSP>
          </xsl:otherwise>
        </xsl:choose>
        <tns:Filler/>
      </tns:BillOfLadingHeaderInfo>
      <tns:RailInformation>
        <tns:BillOfLading>
          <!--xsl:value-of select="substring-after (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:RailInfo/ns6:BolNumber, '-' )"/-->
          <xsl:value-of select="substring-after (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:BolNumber, '-' )"/>
        </tns:BillOfLading>
        <tns:RecordType>2</tns:RecordType>
        <tns:Sequence>
          <xsl:value-of select="position ( )"/>
        </tns:Sequence>
        <!--tns:RecordType>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:RailInfo/ns6:RecType"/>
        </tns:RecordType-->
        <!--tns:Sequence>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:RailInfo/ns6:Sequence"/>
        </tns:Sequence-->
        <tns:RailContract/>
        <tns:RailRouting>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:RailRouting"/>
        </tns:RailRouting>
        <!--tns:RailRouting>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:RailInfo/ns6:RailRouting"/>
        </tns:RailRouting-->
        <tns:RailRouting1/>
        <tns:Filler/>
      </tns:RailInformation>
      <tns:BillToAddress>
        <tns:BillOfLading>
          <!--xsl:value-of select="substring-after (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:BillInfo/ns6:BolNumber, '-' )"/-->
          <xsl:value-of select="substring-after (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:BolNumber, '-' )"/>
        </tns:BillOfLading>
        <tns:RecordType>3</tns:RecordType>
        <tns:Sequence>
          <xsl:value-of select="position ( )"/>
        </tns:Sequence>
        <tns:CustomerName>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBillInfo/ns6:BillInfo/ns6:Name"/>
        </tns:CustomerName>
        <tns:CustomerAddress1>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBillInfo/ns6:BillInfo/ns6:AddressLine1"/>
        </tns:CustomerAddress1>
        <tns:CustomerAddress2>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBillInfo/ns6:BillInfo/ns6:AddressLine2"/>
        </tns:CustomerAddress2>
        <tns:CustomerAddress3>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBillInfo/ns6:BillInfo/ns6:AddressLine3"/>
        </tns:CustomerAddress3>
        <tns:CustomerCity>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBillInfo/ns6:BillInfo/ns6:City"/>
        </tns:CustomerCity>
        <tns:CustomerState>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBillInfo/ns6:BillInfo/ns6:State"/>
        </tns:CustomerState>
        <tns:CustomerZip>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBillInfo/ns6:BillInfo/ns6:Zip"/>
        </tns:CustomerZip>
        <tns:CustomerNation>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBillInfo/ns6:BillInfo/ns6:Country"/>
        </tns:CustomerNation>
        <tns:CustomerForeignZip>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBillInfo/ns6:BillInfo/ns6:ForeignZip"/>
        </tns:CustomerForeignZip>
        <tns:Filler/>
      </tns:BillToAddress>
      <tns:ShipToAddress>
        <tns:BillOfLading>
          <!--xsl:value-of select="substring-after (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ShipInfo/ns6:BolNumber, '-' )"/-->
          <xsl:value-of select="substring-after (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:BolNumber, '-' )"/>
        </tns:BillOfLading>
        <tns:RecordType>4</tns:RecordType>
        <tns:Sequence>
          <xsl:value-of select="position ( )"/>
        </tns:Sequence>
        <tns:CustomerName>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfShipInfo/ns6:ShipInfo/ns6:Name"/>
        </tns:CustomerName>
        <tns:CustomerAddress1>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfShipInfo/ns6:ShipInfo/ns6:AddressLine1"/>
        </tns:CustomerAddress1>
        <tns:CustomerAddress2>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfShipInfo/ns6:ShipInfo/ns6:AddressLine2"/>
        </tns:CustomerAddress2>
        <tns:CustomerAddress3>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfShipInfo/ns6:ShipInfo/ns6:AddressLine3"/>
        </tns:CustomerAddress3>
        <tns:CustomerCity>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfShipInfo/ns6:ShipInfo/ns6:City"/>
        </tns:CustomerCity>
        <tns:CustomerState>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfShipInfo/ns6:ShipInfo/ns6:State"/>
        </tns:CustomerState>
        <tns:CustomerZip>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfShipInfo/ns6:ShipInfo/ns6:Zip"/>
        </tns:CustomerZip>
        <tns:CustomerNation>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfShipInfo/ns6:ShipInfo/ns6:Country"/>
        </tns:CustomerNation>
        <tns:CustomerForeignZip>
          <xsl:value-of select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfShipInfo/ns6:ShipInfo/ns6:ForeignZip"/>
        </tns:CustomerForeignZip>
        <tns:Filler/>
      </tns:ShipToAddress>
      <!--xsl:for-each select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBolDetails/ns6:BolDetail" NS-->
      <xsl:for-each-group select="/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:ListOfBolDetails/ns6:BolDetail"
                          group-by="ns6:OrderNumber">
        <!--a>
                            <xsl:copy-of select="current-group()"/>
                            </a-->
        <xsl:for-each-group select="current-group()" group-by="ns6:OrderLine">
          <xsl:for-each-group select="current-group()" group-by="ns6:ParentLot">
            <tns:BillOfLadingDetails>
              <tns:BillOfLading>
                <xsl:value-of select="substring-after (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:BolNumber, '-' )"/>
              </tns:BillOfLading>
              <!--tns:BillOfLading>
            <xsl:value-of select="substring-after (ns6:BolNumber, '-' )"/>
          </tns:BillOfLading-->
              <tns:RecordType>5</tns:RecordType>
              <!--xsl:variable name="varDelLineNum" select="ns6:OrderLine"/-->
              <tns:BOLLineNumber>
                <xsl:value-of select="ns6:OrderLine"/>
              </tns:BOLLineNumber>
              <tns:CustomerPurchaseOrder>
                <xsl:value-of select="concat(ns6:CustPoNum,'-',ns6:CustPoLineNum)"/>
              </tns:CustomerPurchaseOrder>
              <tns:CustomeRProductNumber>
                <xsl:value-of select="ns6:CustProdNum"/>
              </tns:CustomeRProductNumber>
              <tns:ReheatLot>
                <xsl:value-of select="ns6:ParentLot"/>
              </tns:ReheatLot>
              <!-- Defect# 2429 START-->
              <xsl:choose>
                <xsl:when test="contains (string(sum(current-group()/ns6:NoOfBundle)), '.' )">
                  <tns:NumberOfBundlesOrCoils>
                    <xsl:value-of select="substring-before (string(sum(current-group()/ns6:NoOfBundle)), '.' )"/>
                  </tns:NumberOfBundlesOrCoils>
                </xsl:when>
                <xsl:otherwise>
                  <tns:NumberOfBundlesOrCoils>
                    <xsl:value-of select="sum(current-group()/ns6:NoOfBundle)"/>
                  </tns:NumberOfBundlesOrCoils>
                </xsl:otherwise>
              </xsl:choose>
              <!--tns:NumberOfBundlesOrCoils>
                <xsl:value-of select="sum(current-group()/ns6:NoOfBundle)"/>
              </tns:NumberOfBundlesOrCoils-->
              <xsl:choose>
                <xsl:when test="contains (string(sum(current-group()/ns6:NoOfPieces)), '.' )">
                  <tns:TotalNumberOfPieces>
                    <xsl:value-of select="substring-before (string(sum(current-group()/ns6:NoOfPieces)), '.' )"/>
                  </tns:TotalNumberOfPieces>
                </xsl:when>
                <xsl:otherwise>
                  <tns:TotalNumberOfPieces>
                    <xsl:value-of select="sum(current-group()/ns6:NoOfPieces)"/>
                  </tns:TotalNumberOfPieces>
                </xsl:otherwise>
              </xsl:choose>
              <!--tns:TotalNumberOfPieces>
                <xsl:value-of select="sum(current-group()/ns6:NoOfPieces)"/>
              </tns:TotalNumberOfPieces-->
              <xsl:choose>
                <xsl:when test="contains (string(sum(current-group()/ns6:Weight)), '.' )">
                  <tns:TheoreticalWeight>
                    <xsl:value-of select="substring-before (string(sum(current-group()/ns6:Weight)), '.' )"/>
                  </tns:TheoreticalWeight>
                </xsl:when>
                <xsl:otherwise>
                  <tns:TheoreticalWeight>
                    <xsl:value-of select="sum(current-group()/ns6:Weight)"/>
                  </tns:TheoreticalWeight>
                </xsl:otherwise>
              </xsl:choose>
              <!--tns:TheoreticalWeight>
                <xsl:value-of select="sum(current-group()/ns6:Weight)"/>
              </tns:TheoreticalWeight-->
              <!-- Defect# 2429 END-->
              <tns:ProductDescription>
                <xsl:value-of select="ns6:ItemDesc"/>
              </tns:ProductDescription>
              <tns:Grade>
                <xsl:value-of select="ns6:Grade"/>
              </tns:Grade>
              <!-- Defect# 2429 START-->
              <xsl:choose>
                <xsl:when test="contains (ns6:LenghtFeet, '.' )">
                  <tns:LengthInFeet>
                    <xsl:value-of select="substring-before (ns6:LenghtFeet, '.' )"/>
                  </tns:LengthInFeet>
                </xsl:when>
                <xsl:otherwise>
                  <tns:LengthInFeet>
                    <xsl:value-of select="ns6:LenghtFeet"/>
                  </tns:LengthInFeet>
                </xsl:otherwise>
              </xsl:choose>
              <!--tns:LengthInFeet>
                <xsl:value-of select="ns6:LenghtFeet"/>
              </tns:LengthInFeet-->
              <xsl:choose>
                <xsl:when test="contains (ns6:LenghtInch, '.' )">
                  <tns:Inches>
                    <xsl:value-of select="substring-before (ns6:LenghtInch, '.' )"/>
                  </tns:Inches>
                </xsl:when>
                <xsl:otherwise>
                  <tns:Inches>
                    <xsl:value-of select="ns6:LenghtInch"/>
                  </tns:Inches>
                </xsl:otherwise>
              </xsl:choose>
              <!--tns:Inches>
                <xsl:value-of select="ns6:LenghtInch"/>
              </tns:Inches-->
              <xsl:choose>
                <xsl:when test="contains (ns6:FracInch, '.' )">
                  <tns:FractionOfanInch>
                    <xsl:value-of select="substring-after (ns6:FracInch, '.' )"/>
                  </tns:FractionOfanInch>
                </xsl:when>
                <xsl:otherwise>
                  <tns:FractionOfanInch>
                    <xsl:value-of select="ns6:FracInch"/>
                  </tns:FractionOfanInch>
                </xsl:otherwise>
              </xsl:choose>
              <!--tns:FractionOfanInch>
                <xsl:value-of select="ns6:FracInch"/>
              </tns:FractionOfanInch-->
              <!-- Defect# 2429 END-->
              <tns:SalesOrderNumber>
                <xsl:value-of select="ns6:OrderNumber"/>
              </tns:SalesOrderNumber>
              <tns:SalesOrderLineNumber>
                <xsl:value-of select="ns6:OrderLine"/>
              </tns:SalesOrderLineNumber>
              <tns:ProductType>
                <xsl:value-of select="ns6:ProductType"/>
              </tns:ProductType>
              <!-- Defect# 2429 START-->
              <xsl:choose>
                <xsl:when test="contains (ns6:NumericSize, '.' )">
                  <tns:NumericSize>
                    <xsl:value-of select="substring-before (ns6:NumericSize, '.' )"/>
                  </tns:NumericSize>
                </xsl:when>
                <xsl:otherwise>
                  <tns:NumericSize>
                    <xsl:value-of select="ns6:NumericSize"/>
                  </tns:NumericSize>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="contains (ns6:NumericSize, '.' )">
                  <tns:NumericSizeDecimal>
                    <xsl:value-of select="substring-after (ns6:NumericSize, '.' )"/>
                  </tns:NumericSizeDecimal>
                </xsl:when>
                <xsl:otherwise>
                  <tns:NumericSizeDecimal>0</tns:NumericSizeDecimal>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="contains (ns6:FlatSize, '.' )">
                  <tns:FlatSize>
                    <xsl:value-of select="substring-before (ns6:FlatSize, '.' )"/>
                  </tns:FlatSize>
                  <tns:FlatSizeDecimal>
                    <xsl:value-of select="substring-after (ns6:FlatSize, '.' )"/>
                  </tns:FlatSizeDecimal>
                </xsl:when>
                <xsl:otherwise>
                  <tns:FlatSize>
                    <xsl:value-of select="ns6:FlatSize"/>
                  </tns:FlatSize>
                  <tns:FlatSizeDecimal>0</tns:FlatSizeDecimal>
                </xsl:otherwise>
              </xsl:choose>
              <!--tns:NumericSize>
                <xsl:value-of select="substring-before (ns6:NumericSize, '.' )"/>
              </tns:NumericSize>
              <tns:NumericSizeDecimal>
                <xsl:value-of select="substring-after (ns6:NumericSize, '.' )"/>
              </tns:NumericSizeDecimal>
              <tns:FlatSize>
                <xsl:value-of select="substring-before (ns6:FlatSize, '.' )"/>
              </tns:FlatSize>
              <tns:FlatSizeDecimal>
                <xsl:value-of select="substring-after (ns6:FlatSize, '.' )"/>
              </tns:FlatSizeDecimal-->
              <!-- Defect# 2429 END-->
              <tns:Filler/>
              <tns:cellSeperator/>
              <xsl:for-each-group select="current-group()/ns6:ListOfBolTag/ns6:BolTag" group-by="ns6:TagNum">
                <xsl:for-each-group select="current-group()" group-by="ns6:ParentLot">
                  <!--xsl:for-each select="ns6:ListOfBolTag/ns6:BolTag"-->
                  <tns:TagInformation>
                    <tns:BillOfLading>
                      <xsl:value-of select="substring-after (/ns0:QueryBundleByBolNoResponseMessage/ns0:ListOfBundles/ns6:Bundle/ns6:BolNumber, '-' )"/>
                    </tns:BillOfLading>
                    <tns:RecordType>6</tns:RecordType>
                    <tns:BOLLineNumber>
                      <xsl:value-of select="../../ns6:OrderLine"/>
                    </tns:BOLLineNumber>
                    <tns:TagNumber>
                      <xsl:value-of select="ns6:TagNum"/>
                    </tns:TagNumber>
                    <tns:ReheatLot>
                      <xsl:value-of select="ns6:ParentLot"/>
                    </tns:ReheatLot>
                    <!-- Defect# 2429 START-->
                    <xsl:choose>
                      <xsl:when test="contains (string(sum(current-group()/ns6:NoOfPieces)), '.' )">
                        <tns:NumberOfPieces>
                          <xsl:value-of select="substring-before (string(sum(current-group()/ns6:NoOfPieces)), '.' )"/>
                        </tns:NumberOfPieces>
                      </xsl:when>
                      <xsl:otherwise>
                        <tns:NumberOfPieces>
                          <xsl:value-of select="sum(current-group()/ns6:NoOfPieces)"/>
                        </tns:NumberOfPieces>
                      </xsl:otherwise>
                    </xsl:choose>
                    <!--tns:NumberOfPieces>
                      <xsl:value-of select="sum(current-group()/ns6:NoOfPieces)"/>
                    </tns:NumberOfPieces-->
                    <!-- SysAid Ticket# 48155 17-nov-2016 By NS Start -->
                    <!--xsl:choose>
                      <xsl:when test="contains (string(sum(current-group()/ns6:Weight)), '.' )">
                        <tns:BundleWeight>
                          <xsl:value-of select="substring-before (string(sum(current-group()/ns6:Weight)), '.' )"/>
                        </tns:BundleWeight>
                      </xsl:when>
                      <xsl:otherwise>
                        <tns:BundleWeight>
                          <xsl:value-of select="sum(current-group()/ns6:Weight)"/>
                        </tns:BundleWeight>
                      </xsl:otherwise>
                    </xsl:choose-->
                    <!--xsl:choose>
                      <xsl:when test="contains (string(ns6:Weight), '.' )">
                        <tns:BundleWeight>
                          <xsl:value-of select="substring-before (string(ns6:Weight), '.' )"/>
                        </tns:BundleWeight>
                      </xsl:when>
                      <xsl:otherwise-->
                        <tns:BundleWeight>
                          <xsl:value-of select="distinct-values(ns6:Weight)"/>
                        </tns:BundleWeight>
                      <!--/xsl:otherwise>
                    </xsl:choose-->
                    <!-- SysAid Ticket# 48155 17-nov-2016 By NS End -->
                    <!--tns:BundleWeight>
                      <xsl:value-of select="sum(current-group()/ns6:Weight)"/>
                    </tns:BundleWeight-->
                    <!-- Defect# 2429 END-->
                    <tns:Filler/>
                    <tns:cellSeperator/>
                  </tns:TagInformation>
                  <!--/xsl:for-each-->
                </xsl:for-each-group>
              </xsl:for-each-group>
            </tns:BillOfLadingDetails>
          </xsl:for-each-group>
        </xsl:for-each-group>
      </xsl:for-each-group>
      <!--/xsl:for-each-->
    </tns:BOL>
  </xsl:template>
</xsl:stylesheet>
