<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon May 09 09:25:33 CDT 2016
  Author:  nirav.sanghavi
  Type: BPEL 2.0 Process
  Purpose: Empty BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="SubscribeEBizTestResults_JMS_File_ABF"
               targetNamespace="http://xmlns.eia.com/Implementation/ABF/NUC_SubscribeEBizTestResults_JMS_File_ABF/SubscribeEBizTestResults_JMS_File_ABF"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.eia.com/Implementation/ABF/NUC_SubscribeEBizTestResults_JMS_File_ABF/SubscribeEBizTestResults_JMS_File_ABF"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/jms/DV1Application/NUC_SubscribeEBizTestResults_JMS_File_ABF/JMSConsumeTestResults"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ns2="http://xmlns.eia.com/CommonLogging"
         xmlns:ns5="http://xmlns.eia.com/AO/EBiz/common/OperationResultAO/1.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns6="http://xmlns.eia.com/AO/Ebiz/D2S/QualityResultsAO/1.0"
         xmlns:ns4="http://xmlns.eia.com/EO/common/Header/1.0"
         xmlns:ns3="http://xmlns.eia.com/AO/Ebiz/D2S/QualityResultsAM/1.0"
         xmlns:eia="http://xmlns.eia.com/extensions/1.0"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns7="http://xmlns.oracle.com/pcbpel/adapter/ftp/DV1Application/NUC_SubscribeEBizTestResults_JMS_File_ABF/FTP_WriteTestResults"
         xmlns:ui="http://xmlns.oracle.com/soa/designer" xmlns:ns8="TestResults"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://xmlns.oracle.com/pcbpel/adapter/jms/DV1Application/NUC_SubscribeEBizTestResults_JMS_File_ABF/JMSConsumeTestResults"
          location="../WSDLs/JMSConsumeTestResults.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"
          ui:processWSDL="true"/>
          <import location="oracle.xml.parser.v2.*" importType="http://schemas.oracle.com/bpel/extension/java"/>
     <import location="org.w3c.dom.*" importType="http://schemas.oracle.com/bpel/extension/java"/>
     
  <partnerLinks>
    <partnerLink name="JMSConsumeTestResults" partnerLinkType="ns1:Consume_Message_plt" myRole="Consume_Message_role"/>
    <partnerLink name="CommonLogging" partnerLinkType="ns2:CommonLogging" partnerRole="CommonLoggingProvider"/>
    <partnerLink name="FTP_WriteTestResults" partnerLinkType="ns7:Put_plt" partnerRole="Put_role"/>
  </partnerLinks>
  <variables>
    <variable name="Receive_JMSConsumeTestResults_Consume_Message_InputVariable" messageType="ns1:Consume_Message_msg"/>
    <variable name="Invoke_FTP_WriteTestResults_Put_InputVariable" messageType="ns7:Put_msg"/>
    <variable name="gFileName" type="xsd:string"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence1">
        <scope name="Scope1">
          <variables>
            <variable name="Invoke_CommonLogging_process_InputVariable" messageType="ns2:CommonLoggingRequestMessage"/>
          </variables>
          <sequence>
            <assign name="AssignCatchAll">
              <copy>
                <from>$Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns4:HeaderRs/ns4:RequestDetails/ns4:TransactionIDREF</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TransactionId</to>
              </copy>
              <copy>
                <from>'NextGen'</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:ProjectName</to>
              </copy>
              <copy>
                <from>$Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns4:HeaderRs/ns4:RequestDetails/ns4:ComponentID</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:ComponentId</to>
              </copy>
              <copy>
                <from>$Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns4:HeaderRs/ns4:RequestDetails/ns4:TransactionName</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TransactionName</to>
              </copy>
              <copy>
                <from>ora:getCompositeName()</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:ProcessName</to>
              </copy>
              <copy>
                <from>1</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:LoggingSystem</to>
              </copy>
              <copy>
                <from>1</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:SourceSystem</to>
              </copy>
              <copy>
                <from>37</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TargetSystem</to>
              </copy>
              <copy>
                <from>4</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:LogType</to>
              </copy>
              <copy>
                <from>concat('FlowId:',ora:getFlowId(),':',$Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns6:GmdResultsPub/ns6:GmdResultPub[1]/ns6:BolNo,'::',ora:getFaultAsString())</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:MessageDescription</to>
              </copy>
              <copy>
                <from>2</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TransactionStatus</to>
              </copy>
              <copy>
                <from>'SOA'</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:CreatedBy</to>
              </copy>
              <copy>
                <from>'SOA'</from>
                <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:UpdatedBy</to>
              </copy>
            </assign>
            <invoke name="Invoke_CommonLogging" partnerLink="CommonLogging"
                    portType="ns2:CommonLogging" operation="process"
                    inputVariable="Invoke_CommonLogging_process_InputVariable" bpelx:invokeAsDetail="no">
              <bpelx:toProperties>
                <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
              </bpelx:toProperties>
            </invoke>
          </sequence>
        </scope>
      </sequence>
    </catchAll>
  </faultHandlers>
  <sequence name="main">
    <receive name="Receive_JMSConsumeTestResults" createInstance="yes" partnerLink="JMSConsumeTestResults"
             portType="ns1:Consume_Message_ptt" operation="Consume_Message"
             variable="Receive_JMSConsumeTestResults_Consume_Message_InputVariable"/>
    <scope name="Scope_StartLogging">
      <variables>
        <variable name="Invoke_CommonLogging_process_InputVariable" messageType="ns2:CommonLoggingRequestMessage"/>
      </variables>
      <faultHandlers>
        <catchAll>
          <empty name="DoNothing"/>
        </catchAll>
      </faultHandlers>
      <sequence name="Sequence2">
        <assign name="Assign_StartLogging">
          <copy>
            <from>$Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns4:HeaderRs/ns4:RequestDetails/ns4:TransactionIDREF</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TransactionId</to>
          </copy>
          <copy>
            <from>'NextGen'</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:ProjectName</to>
          </copy>
          <copy>
            <from>$Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns4:HeaderRs/ns4:RequestDetails/ns4:ComponentID</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:ComponentId</to>
          </copy>
          <copy>
            <from>$Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns4:HeaderRs/ns4:RequestDetails/ns4:TransactionName</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TransactionName</to>
          </copy>
          <copy>
            <from>ora:getCompositeName()</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:ProcessName</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:LoggingSystem</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:SourceSystem</to>
          </copy>
          <copy>
            <from>37</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TargetSystem</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:LogType</to>
          </copy>
          <copy>
            <from>'BMG-003'</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:MessageCode</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TransactionStatus</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:CreatedBy</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:UpdatedBy</to>
          </copy>
        </assign>
        <invoke name="Invoke_CommonLogging" partnerLink="CommonLogging"
                portType="ns2:CommonLogging" operation="process"
                inputVariable="Invoke_CommonLogging_process_InputVariable" bpelx:invokeAsDetail="no">
          <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
      </sequence>
    </scope>
    <assign name="Xform_JMSTestResultsInput_To_FileWriteInput">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from>ora:doXSLTransformForDoc("../Transformations/Xform_JMSTestResultsInput_To_FileWriteInput.xsl", $Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body)</from>
        <to variable="Invoke_FTP_WriteTestResults_Put_InputVariable" part="body"/>
      </copy>
    </assign>
    <if name="If_Mill_NSNE_">
      <documentation>
        <![CDATA[NSNE]]>
      </documentation>
      <condition>contains($Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns6:GmdResultsPub/ns6:GmdResultPub/ns6:TestResultsMill,'NSNE')</condition>
      <assign name="Assign_NSNE_FileName">
        <copy>
          <from>'ccn_'</from>
          <to>$gFileName</to>
        </copy>
      </assign>
      <else>
        <documentation>
          <![CDATA[NCFWI]]>
        </documentation>
        <assign name="Assign_NCFWI_FileName">
          <copy>
            <from>'ccnw'</from>
            <to>$gFileName</to>
          </copy>
        </assign>
      </else>
    </if>
    <!--extensionActivity>
      <bpelx:exec name="Java_Embedding1" language="java">
        <![CDATA[addAuditTrailEntry("Entered Java Embedding");      
                 
            XMLElement nodeElement =   (XMLElement)getVariableData("Receive_JMSConsumeTestResults_Consume_Message_InputVariable", "body","/ns3:QueryQAResultsByBolNoRs");         
            addAuditTrailEntry("Entered Java Embedding");       
            XMLElement results =     (XMLElement) getVariableData("Invoke_FTP_WriteTestResults_Put_InputVariable","body","/ns8:TestResults");        
            addAuditTrailEntry("Loaded IN Parameters...");      
      
      
		int splitBy = 6;       
		NodeList nodeList           = nodeElement.getElementsByTagNameNS("http://xmlns.eia.com/AO/Ebiz/D2S/QualityResultsAO/1.0","Set6");     //Source  
                  
                NodeList ResultsNodeList    = results.getElementsByTagNameNS("TestResults","MillCertPhysicalProperties");    //Target  
                  
		int counter = 0 ;      
		Node resultNode = null;      
                Document dom = null;      
                addAuditTrailEntry("NodeList.getLength():" + nodeList.getLength() );    
                addAuditTrailEntry("NodeElement.getTagName():" + nodeElement.getTagName() );    
		for (int v=0; v < nodeList.getLength();v++)      
		{      
//	    	    System.out.println(v + "\t" + nodeList.item(v).getTextContent() );      
                    Node setNode = nodeList.item(v);      
                    if (setNode.getNodeType() == Node.ELEMENT_NODE)        
                    {      
                            Element eElement = (Element) setNode;      
                            StringBuffer Name = new StringBuffer(eElement.getElementsByTagName("Name").item(0).getTextContent() );      
                            StringBuffer Value = new StringBuffer(eElement.getElementsByTagName("Value").item(0).getTextContent() );      
                            addAuditTrailEntry(Name.toString() + "\t" + Value.toString() + "\t" + (v % splitBy) );      
                          
                                          
                            if ( v % splitBy == 0)      
                            {      
                                    dom = ResultsNodeList.item(ResultsNodeList.getLength()-1).getOwnerDocument();      
                                    resultNode = dom.createElement("MillCertChemicalAnalysis");	      
                            }	      
                                    if (counter == 0)      
                                    {				      
                                            Node Name1Node = dom.createElement("Set1Code");	      
                                            Name1Node.appendChild(dom.createTextNode(Name.toString()));      
                                            resultNode.appendChild(Name1Node);      
                                            Node Value1Node = dom.createElement("Set1Value");	      
                                            Value1Node.appendChild(dom.createTextNode(Value.toString()));      
                                            resultNode.appendChild(Value1Node);   
                                    }      
                                    if (counter == 1)      
                                    {      
                                       Node Name2Node = dom.createElement("Set2Code");	      
                                       Name2Node.appendChild(dom.createTextNode(Name.toString()));      
                                       resultNode.appendChild(Name2Node); 
                                        Node Value2Node = dom.createElement("Set2Value");	      
                                       Value2Node.appendChild(dom.createTextNode(Value.toString()));      
                                       resultNode.appendChild(Value2Node); 
                                    }      
                                    if (counter == 2)      
                                    {      
                                            Node Name3Node = dom.createElement("Set3Code");	      
                                            Name3Node.appendChild(dom.createTextNode(Name.toString()));      
                                            resultNode.appendChild(Name3Node);    
                                            Node Value3Node = dom.createElement("Set3Value");	      
                                            Value3Node.appendChild(dom.createTextNode(Value.toString()));      
                                            resultNode.appendChild(Value3Node);   
                                            //counter =0;      
                                            //ResultsNodeList.item(ResultsNodeList.getLength()-1).appendChild(resultNode);      
                                    }     
                                    if (counter == 3)      
                                    {      
                                            Node Name4Node = dom.createElement("Set4Code");	      
                                            Name4Node.appendChild(dom.createTextNode(Name.toString()));      
                                            resultNode.appendChild(Name4Node);     
                                            Node Value4Node = dom.createElement("Set4Value");	      
                                            Value4Node.appendChild(dom.createTextNode(Value.toString()));      
                                            resultNode.appendChild(Value4Node); 
 
                                            //counter =0;      
                                            //ResultsNodeList.item(ResultsNodeList.getLength()-1).appendChild(resultNode);      
                                    }     
                                    if (counter == 4)      
                                    {      
                                            Node Name5Node = dom.createElement("Set5Code");	      
                                            Name5Node.appendChild(dom.createTextNode(Name.toString()));      
                                            resultNode.appendChild(Name5Node);      
                                            Node Value5Node = dom.createElement("Set5Value");	      
                                            Value5Node.appendChild(dom.createTextNode(Value.toString()));      
                                            resultNode.appendChild(Value5Node);     
 
                                            //counter =0;      
                                            //ResultsNodeList.item(ResultsNodeList.getLength()-1).appendChild(resultNode);      
                                    }     
                                    if (counter == 5)      
                                    {      
                                            Node Name6Node = dom.createElement("Set6Code");	      
                                            Name6Node.appendChild(dom.createTextNode(Name.toString()));      
                                            resultNode.appendChild(Name6Node);      
                                            Node Value6Node = dom.createElement("Set6Value");	      
                                            Value6Node.appendChild(dom.createTextNode(Value.toString()));      
                                            resultNode.appendChild(Value6Node);  
                                             
                                            counter =-1;      
                                            ResultsNodeList.item(ResultsNodeList.getLength()-1).appendChild(resultNode);      
                                    }     
                                    ++ counter;      
                                    if ( v+1 == nodeList.getLength() )      
                                    {      
                                        addAuditTrailEntry("ResultNode: " + resultNode.getChildNodes().getLength());   
                                        ResultsNodeList.item(ResultsNodeList.getLength()-1).appendChild(resultNode);     
addAuditTrailEntry("Here1:"  );    
                                    }      
                    }	      
}      
     addAuditTrailEntry("Here2:"  );    
                NodeList resultNL = results.getElementsByTagNameNS("TestResults","MillCertPhysicalProperties");      
                addAuditTrailEntry("resultNL.getLength():" + resultNL.item(0).getChildNodes().item(0).getChildNodes().item(0).getNodeName() );]]>
      </bpelx:exec>
    </extensionActivity-->
    <invoke name="Invoke_FTP_WriteTestResults" partnerLink="FTP_WriteTestResults"
            portType="ns7:Put_ptt" operation="Put" inputVariable="Invoke_FTP_WriteTestResults_Put_InputVariable"
            bpelx:invokeAsDetail="no">
      <bpelx:toProperties>
        <bpelx:toProperty name="jca.ftp.FileName">concat($gFileName,substring-after($Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns6:GmdResultsPub/ns6:GmdResultPub[1]/ns6:BolNo,'-'),'.txt')</bpelx:toProperty>
      </bpelx:toProperties>
    </invoke>
    <scope name="Scope_EndLogging">
      <variables>
        <variable name="Invoke_CommonLogging_process_InputVariable" messageType="ns2:CommonLoggingRequestMessage"/>
      </variables>
      <faultHandlers>
        <catchAll>
          <empty name="DoNothing"/>
        </catchAll>
      </faultHandlers>
      <sequence name="Sequence4">
        <assign name="Assign_EndLogging">
          <copy>
            <from>$Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns4:HeaderRs/ns4:RequestDetails/ns4:TransactionIDREF</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TransactionId</to>
          </copy>
          <copy>
            <from>'NextGen'</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:ProjectName</to>
          </copy>
          <copy>
            <from>$Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns4:HeaderRs/ns4:RequestDetails/ns4:ComponentID</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:ComponentId</to>
          </copy>
          <copy>
            <from>$Receive_JMSConsumeTestResults_Consume_Message_InputVariable.body/ns4:HeaderRs/ns4:RequestDetails/ns4:TransactionName</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TransactionName</to>
          </copy>
          <copy>
            <from>ora:getCompositeName()</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:ProcessName</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:LoggingSystem</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:SourceSystem</to>
          </copy>
          <copy>
            <from>37</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TargetSystem</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:LogType</to>
          </copy>
          <copy>
            <from>'BMG-002'</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:MessageCode</to>
          </copy>
          <copy>
            <from>2</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:TransactionStatus</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:CreatedBy</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_CommonLogging_process_InputVariable.CommonLogging/ns2:UpdatedBy</to>
          </copy>
        </assign>
        <invoke name="Invoke_CommonLogging" partnerLink="CommonLogging"
                portType="ns2:CommonLogging" operation="process"
                inputVariable="Invoke_CommonLogging_process_InputVariable" bpelx:invokeAsDetail="no">
          <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
      </sequence>
    </scope>
  </sequence>
</process>