<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ns0="http://xmlns.eia.com/AO/Ebiz/D2S/QualityResultsAM/1.0"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="TestResults"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                exclude-result-prefixes="xsi oracle-xsl-mapper xsl xsd ns0 tns xp20 oraxsl mhdr oraext dvm xref socket"
                xmlns:pc="http://xmlns.oracle.com/pcbpel/"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns2="http://xmlns.eia.com/AO/EBiz/common/OperationResultAO/1.0"
                xmlns:ns3="http://xmlns.eia.com/EO/common/Common/1.0"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/jms/DV1Application/NUC_SubscribeEBizTestResults_JMS_File_ABF/JMSConsumeTestResults"
                xmlns:ns6="http://xmlns.eia.com/EO/Standard/External/ISO/Country/3166-1/2006/Country"
                xmlns:ns9="http://xmlns.eia.com/EO/common/Header/1.0"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ns7="http://xmlns.eia.com/AO/EBiz/common/AppsContextAO/1.0"
                xmlns:ns4="http://xmlns.eia.com/AO/Ebiz/D2S/QualityResultsAO/1.0"
                xmlns:ns5="http://xmlns.eia.com/EO/Standard/External/ISO/Language/639-3/2007/Language"
                xmlns:ns8="http://xmlns.eia.com/EO/Standard/External/ISO/Currency/4217/2001/Currency"
                xmlns:ns10="http://xmlns.oracle.com/pcbpel/adapter/ftp/DV1Application/NUC_SubscribeEBizTestResults_JMS_File_ABF/FTP_WriteTestResults"
                xmlns:saxon="http://saxon.sf.net/">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/JMSConsumeTestResults.wsdl"/>
        <oracle-xsl-mapper:rootElement name="QueryQAResultsByBolNoRs"
                                       namespace="http://xmlns.eia.com/AO/Ebiz/D2S/QualityResultsAM/1.0"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/FTP_WriteTestResults.wsdl"/>
        <oracle-xsl-mapper:rootElement name="TestResults" namespace="TestResults"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [MON JUN 13 06:07:40 CDT 2016].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:TestResults>
      <xsl:for-each select="/ns0:QueryQAResultsByBolNoRs/ns4:GmdResultsPub/ns4:GmdResultPub">
        <tns:MillCertHeaderRecord>
          <tns:ReheatLot>
            <xsl:value-of select="ns4:ParentLotNO"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="position ( )"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>1</tns:RecordType>
          <tns:BillOfLadingNumber>
            <xsl:value-of select="substring-after (ns4:BolNo, '-' )"/>
          </tns:BillOfLadingNumber>
          <tns:RollDate>
            <xsl:value-of select="concat(substring (ns4:RollDate,1,4),substring (ns4:RollDate,6,2),substring (ns4:RollDate,9,2))"/>
          </tns:RollDate>
          <tns:CustomerNumber>
            <xsl:value-of select="ns4:CustNo"/>
          </tns:CustomerNumber>
          <tns:SalesOfficeNumber></tns:SalesOfficeNumber>
          <tns:CustomerPONumber>
            <xsl:value-of select="concat(ns4:PoNumber,'-',ns4:PoLineNO)"/>
          </tns:CustomerPONumber>
          <tns:Size>
            <xsl:value-of select="ns4:SizeH"/>
          </tns:Size>
          <tns:SalesDivision>
            <xsl:value-of select="ns4:SalesDiv"/>
          </tns:SalesDivision>
          <!-- Defect# 2429 START-->
          <xsl:choose>
            <xsl:when test="contains (ns4:NumSize, '.' )">
              <tns:NumericSize>
                <xsl:value-of select="substring-before (ns4:NumSize, '.' )"/>
              </tns:NumericSize>
            </xsl:when>
            <xsl:otherwise>
              <tns:NumericSize>
                <xsl:value-of select="ns4:NumSize"/>
              </tns:NumericSize>
            </xsl:otherwise>
          </xsl:choose>
          <!--tns:NumericSize>
            <xsl:value-of select="substring-before (ns4:NumSize, '.' )"/>
          </tns:NumericSize-->
          <xsl:choose>
            <xsl:when test="contains (ns4:NumSize, '.' )">
              <tns:NumericSizeDecimal>
                <xsl:value-of select="substring-after (ns4:NumSize, '.' )"/>
              </tns:NumericSizeDecimal>
            </xsl:when>
            <xsl:otherwise>
              <tns:NumericSizeDecimal>0</tns:NumericSizeDecimal>
            </xsl:otherwise>
          </xsl:choose>
          <!--tns:NumericSizeDecimal>
            <xsl:value-of select="substring-after (ns4:NumSize, '.' )"/>
          </tns:NumericSizeDecimal-->
          <xsl:choose>
            <xsl:when test="contains (ns4:FlatSize, '.' )">
              <tns:FlatSize>
                <xsl:value-of select="substring-before (ns4:FlatSize, '.' )"/>
              </tns:FlatSize>
            </xsl:when>
            <xsl:otherwise>
              <tns:FlatSize>
                <xsl:value-of select="ns4:FlatSize"/>
              </tns:FlatSize>
            </xsl:otherwise>
          </xsl:choose>
          <!--tns:FlatSize>
            <xsl:value-of select="substring-before (ns4:FlatSize, '.' )"/>
          </tns:FlatSize-->
          <xsl:choose>
            <xsl:when test="contains (ns4:FlatSize, '.' )">
              <tns:FlatSizeDecimal>
                <xsl:value-of select="substring-after (ns4:FlatSize, '.' )"/>
              </tns:FlatSizeDecimal>
            </xsl:when>
            <xsl:otherwise>
              <tns:FlatSizeDecimal>0</tns:FlatSizeDecimal>
            </xsl:otherwise>
          </xsl:choose>
          <!--tns:FlatSizeDecimal>
            <xsl:value-of select="substring-after (ns4:FlatSize, '.' )"/>
          </tns:FlatSizeDecimal-->
          <!-- Defect# 2429 START-->
          <xsl:choose>
            <xsl:when test="(ns4:OrderType) and (ns4:OrderType = 'NSNE OSP Ship Only Order' or ns4:OrderType = 'NCFWI OSP Ship Only Order')">
              <tns:OSP>OSP</tns:OSP>
            </xsl:when>
            <xsl:otherwise>
              <tns:OSP></tns:OSP>
            </xsl:otherwise>
          </xsl:choose>
          <tns:MillCertGradeSpecInstruc>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>
              <xsl:value-of select="position ( )"/>
            </tns:HeatSequenceNumber>
            <tns:RecordType>2</tns:RecordType>
            <tns:Grade1Certification>
              <xsl:value-of select="ns4:GradeCode"/>
            </tns:Grade1Certification>
            <tns:Grade2Certification/>
            <tns:Filler/>
          </tns:MillCertGradeSpecInstruc>
          <tns:MillCertPhysicalProperties>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>
              <xsl:value-of select="position ( )"/>
            </tns:HeatSequenceNumber>
            <tns:RecordType>3</tns:RecordType>
            <tns:ProductCode>
              <xsl:value-of select="ns4:item_no"/>
            </tns:ProductCode>
            <tns:ProductShape>
              <xsl:value-of select="ns4:ProductShape"/>
            </tns:ProductShape>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'YIELD']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'YIELD']/ns4:ResultValue, '.' )">
                    <tns:YieldPSI>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'YIELD']/ns4:ResultValue, '.' )"/>
                    </tns:YieldPSI>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:YieldPSI>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'YIELD']/ns4:ResultValue"/>
                    </tns:YieldPSI>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:YieldPSI>0</tns:YieldPSI>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'TENSIL']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'TENSIL']/ns4:ResultValue, '.' )">
                    <tns:TensilePSI>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'TENSIL']/ns4:ResultValue, '.' )"/>
                    </tns:TensilePSI>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:TensilePSI>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'TENSIL']/ns4:ResultValue"/>
                    </tns:TensilePSI>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:TensilePSI>0</tns:TensilePSI>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG8']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG8']/ns4:ResultValue, '.' )">
                    <tns:Elogation8>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG8']/ns4:ResultValue, '.' )"/>
                    </tns:Elogation8>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:Elogation8>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG8']/ns4:ResultValue"/>
                    </tns:Elogation8>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:Elogation8>0</tns:Elogation8>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG8']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG8']/ns4:ResultValue, '.' )">
                    <tns:Elogation8Decimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG8']/ns4:ResultValue, '.' )"/>
                    </tns:Elogation8Decimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:Elogation8Decimal>0</tns:Elogation8Decimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:Elogation8Decimal>0</tns:Elogation8Decimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG2']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG2']/ns4:ResultValue, '.' )">
                    <tns:Elogation2>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG2']/ns4:ResultValue, '.' )"/>
                    </tns:Elogation2>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:Elogation2>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG2']/ns4:ResultValue"/>
                    </tns:Elogation2>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:Elogation2>0</tns:Elogation2>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG2']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG2']/ns4:ResultValue, '.' )">
                    <tns:Elogation2Decimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ELONG2']/ns4:ResultValue, '.' )"/>
                    </tns:Elogation2Decimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:Elogation2Decimal>0</tns:Elogation2Decimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:Elogation2Decimal>0</tns:Elogation2Decimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ROA']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ROA']/ns4:ResultValue,'.')">
                    <tns:ReductionArea>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ROA']/ns4:ResultValue, '.' )"/>
                    </tns:ReductionArea>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:ReductionArea>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ROA']/ns4:ResultValue"/>
                    </tns:ReductionArea>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:ReductionArea>0</tns:ReductionArea>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ROA']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ROA']/ns4:ResultValue,'.')">
                    <tns:ReductionAreaDecimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'ROA']/ns4:ResultValue, '.' )"/>
                    </tns:ReductionAreaDecimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:ReductionAreaDecimal>0</tns:ReductionAreaDecimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:ReductionAreaDecimal>0</tns:ReductionAreaDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Brinell']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Brinell']/ns4:ResultValue,'.')">
                    <tns:BernellHardTest>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Brinell']/ns4:ResultValue, '.' )"/>
                    </tns:BernellHardTest>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:BernellHardTest>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Brinell']/ns4:ResultValue"/>
                    </tns:BernellHardTest>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:BernellHardTest>0</tns:BernellHardTest>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'HRB']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'HRB']/ns4:ResultValue,'.')">
                    <tns:RockwellBHardTest>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'HRB']/ns4:ResultValue, '.' )"/>
                    </tns:RockwellBHardTest>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:RockwellBHardTest>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'HRB']/ns4:ResultValue"/>
                    </tns:RockwellBHardTest>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:RockwellBHardTest>0</tns:RockwellBHardTest>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'HRC']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'HRC']/ns4:ResultValue,'.')">
                    <tns:RockwellCHardTest>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'HRC']/ns4:ResultValue, '.' )"/>
                    </tns:RockwellCHardTest>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:RockwellCHardTest>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'HRC']/ns4:ResultValue"/>
                    </tns:RockwellCHardTest>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:RockwellCHardTest>0</tns:RockwellCHardTest>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'BEND']/ns4:ResultValue != ''">
                <tns:BendTestP>
                  <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'BEND']/ns4:ResultValue"/>
                </tns:BendTestP>
              </xsl:when>
              <xsl:otherwise>
                <tns:BendTestP></tns:BendTestP>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'DI']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'DI']/ns4:ResultValue,'.')">
                    <tns:DIValue>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'DI']/ns4:ResultValue, '.' )"/>
                    </tns:DIValue>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:DIValue>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'DI']/ns4:ResultValue"/>
                    </tns:DIValue>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:DIValue>0</tns:DIValue>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'DI']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'DI']/ns4:ResultValue,'.')">
                    <tns:DIValueDecimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'DI']/ns4:ResultValue, '.' )"/>
                    </tns:DIValueDecimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:DIValueDecimal>0</tns:DIValueDecimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:DIValueDecimal>0</tns:DIValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AATW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AATW']/ns4:ResultValue,'.')">
                    <tns:InclusionSulfitesThin>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AATW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSulfitesThin>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSulfitesThin>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AATW']/ns4:ResultValue"/>
                    </tns:InclusionSulfitesThin>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSulfitesThin>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSulfitesThin>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AATW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AATW']/ns4:ResultValue,'.')">
                    <tns:InclusionSulfitesThinDecimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AATW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSulfitesThinDecimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSulfitesThinDecimal>0</tns:InclusionSulfitesThinDecimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSulfitesThinDecimal>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSulfitesThinDecimal>
                <xsl:text></xsl:text>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAHW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAHW']/ns4:ResultValue,'.')">
                    <tns:InclusionSulfitesHard>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAHW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSulfitesHard>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSulfitesHard>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAHW']/ns4:ResultValue"/>
                    </tns:InclusionSulfitesHard>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSulfitesHard>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSulfitesHard>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAHW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAHW']/ns4:ResultValue,'.')">
                    <tns:InclusionSulfitesHardDecimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAHW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSulfitesHardDecimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSulfitesHardDecimal>0</tns:InclusionSulfitesHardDecimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSulfitesHardDecimal>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSulfitesHardDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABTW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABTW']/ns4:ResultValue,'.')">
                    <tns:InclusionAluminaThin>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABTW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionAluminaThin>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionAluminaThin>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABTW']/ns4:ResultValue"/>
                    </tns:InclusionAluminaThin>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionAluminaThin>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionAluminaThin>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABTW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABTW']/ns4:ResultValue,'.')">
                    <tns:InclusionAluminaThinDecimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABTW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionAluminaThinDecimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionAluminaThinDecimal>0</tns:InclusionAluminaThinDecimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionAluminaThinDecimal>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionAluminaThinDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABHW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABHW']/ns4:ResultValue,'.')">
                    <tns:InclusionAluminaHard>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABHW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionAluminaHard>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionAluminaHard>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABHW']/ns4:ResultValue"/>
                    </tns:InclusionAluminaHard>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionAluminaHard>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionAluminaHard>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABHW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABHW']/ns4:ResultValue,'.')">
                    <tns:InclusionAluminaHardDecimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABHW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionAluminaHardDecimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionAluminaHardDecimal>0</tns:InclusionAluminaHardDecimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionAluminaHardDecimal>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionAluminaHardDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACTW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACTW']/ns4:ResultValue,'.')">
                    <tns:InclusionSilicatesThin>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACTW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSilicatesThin>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSilicatesThin>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACTW']/ns4:ResultValue"/>
                    </tns:InclusionSilicatesThin>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSilicatesThin>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSilicatesThin>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACTW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACTW']/ns4:ResultValue,'.')">
                    <tns:InclusionSilicatesThinDecimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACTW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSilicatesThinDecimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSilicatesThinDecimal>0</tns:InclusionSilicatesThinDecimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSilicatesThinDecimal>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSilicatesThinDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACHW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACHW']/ns4:ResultValue,'.')">
                    <tns:InclusionSilicatesHard>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACHW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSilicatesHard>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSilicatesHard>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACHW']/ns4:ResultValue"/>
                    </tns:InclusionSilicatesHard>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSilicatesHard>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSilicatesHard>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACHW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACHW']/ns4:ResultValue,'.')">
                    <tns:InclusionSilicatesHardDecimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACHW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSilicatesHardDecimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSilicatesHardDecimal>0</tns:InclusionSilicatesHardDecimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSilicatesHardDecimal>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSilicatesHardDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADTW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADTW']/ns4:ResultValue,'.')">
                    <tns:InclusionGlobularOXTH>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADTW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionGlobularOXTH>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionGlobularOXTH>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADTW']/ns4:ResultValue"/>
                    </tns:InclusionGlobularOXTH>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionGlobularOXTH>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionGlobularOXTH>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADTW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADTW']/ns4:ResultValue,'.')">
                    <tns:InclusionGlobularOXTHDecimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADTW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionGlobularOXTHDecimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionGlobularOXTHDecimal>0</tns:InclusionGlobularOXTHDecimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionGlobularOXTHDecimal>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionGlobularOXTHDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADHW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADHW']/ns4:ResultValue,'.')">
                    <tns:InclusionGlobularOXHD>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADHW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionGlobularOXHD>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionGlobularOXHD>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADHW']/ns4:ResultValue"/>
                    </tns:InclusionGlobularOXHD>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionGlobularOXHD>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionGlobularOXHD>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADHW']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADHW']/ns4:ResultValue,'.')">
                    <tns:InclusionGlobularOXHDDecimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADHW']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionGlobularOXHDDecimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionGlobularOXHDDecimal>0</tns:InclusionGlobularOXHDDecimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionGlobularOXHDDecimal>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionGlobularOXHDDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAT']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAT']/ns4:ResultValue,'.')">
                    <tns:InclusionSulfitesThinA>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAT']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSulfitesThinA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSulfitesThinA>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAT']/ns4:ResultValue"/>
                    </tns:InclusionSulfitesThinA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSulfitesThinA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSulfitesThinA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAT']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAT']/ns4:ResultValue,'.')">
                    <tns:InclusionSulfitesThinDecimalA>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAT']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSulfitesThinDecimalA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSulfitesThinDecimalA>0</tns:InclusionSulfitesThinDecimalA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSulfitesThinDecimalA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSulfitesThinDecimalA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAH']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAH']/ns4:ResultValue,'.')">
                    <tns:InclusionSulfitesHardA>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAH']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSulfitesHardA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSulfitesHardA>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAH']/ns4:ResultValue"/>
                    </tns:InclusionSulfitesHardA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSulfitesHardA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSulfitesHardA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAH']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAH']/ns4:ResultValue,'.')">
                    <tns:InclusionSulfitesHardDecimalA>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45AAH']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSulfitesHardDecimalA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSulfitesHardDecimalA>0</tns:InclusionSulfitesHardDecimalA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSulfitesHardDecimalA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSulfitesHardDecimalA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABT']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABT']/ns4:ResultValue,'.')">
                    <tns:InclusionAluminaThinA>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABT']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionAluminaThinA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionAluminaThinA>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABT']/ns4:ResultValue"/>
                    </tns:InclusionAluminaThinA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionAluminaThinA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionAluminaThinA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABT']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABT']/ns4:ResultValue,'.')">
                    <tns:InclusionAluminaThinDecimalA>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABT']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionAluminaThinDecimalA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionAluminaThinDecimalA>0</tns:InclusionAluminaThinDecimalA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionAluminaThinDecimalA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionAluminaThinDecimalA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABH']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABH']/ns4:ResultValue,'.')">
                    <tns:InclusionAluminaHardA>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABH']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionAluminaHardA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionAluminaHardA>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABH']/ns4:ResultValue"/>
                    </tns:InclusionAluminaHardA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionAluminaHardA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionAluminaHardA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABH']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABH']/ns4:ResultValue,'.')">
                    <tns:InclusionAluminaHardDecimalA>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ABH']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionAluminaHardDecimalA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionAluminaHardDecimalA>0</tns:InclusionAluminaHardDecimalA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionAluminaHardDecimalA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionAluminaHardDecimalA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACT']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACT']/ns4:ResultValue,'.')">
                    <tns:InclusionSilicatesThinA>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACT']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSilicatesThinA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSilicatesThinA>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACT']/ns4:ResultValue"/>
                    </tns:InclusionSilicatesThinA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSilicatesThinA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSilicatesThinA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACT']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACT']/ns4:ResultValue,'.')">
                    <tns:InclusionSilicatesThinDecimalA>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACT']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSilicatesThinDecimalA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSilicatesThinDecimalA>0</tns:InclusionSilicatesThinDecimalA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSilicatesThinDecimalA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSilicatesThinDecimalA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACH']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACH']/ns4:ResultValue,'.')">
                    <tns:InclusionSilicatesHardA>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACH']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSilicatesHardA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSilicatesHardA>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACH']/ns4:ResultValue"/>
                    </tns:InclusionSilicatesHardA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSilicatesHardA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSilicatesHardA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACH']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACH']/ns4:ResultValue,'.')">
                    <tns:InclusionSilicatesHardDecimalA>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ACH']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionSilicatesHardDecimalA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionSilicatesHardDecimalA>0</tns:InclusionSilicatesHardDecimalA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionSilicatesHardDecimalA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionSilicatesHardDecimalA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADT']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADT']/ns4:ResultValue,'.')">
                    <tns:InclusionGlobularOXTHA>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADT']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionGlobularOXTHA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionGlobularOXTHA>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADT']/ns4:ResultValue"/>
                    </tns:InclusionGlobularOXTHA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionGlobularOXTHA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionGlobularOXTHA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADT']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADT']/ns4:ResultValue,'.')">
                    <tns:InclusionGlobularOXTHDecimalA>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADT']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionGlobularOXTHDecimalA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionGlobularOXTHDecimalA>0</tns:InclusionGlobularOXTHDecimalA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionGlobularOXTHDecimalA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionGlobularOXTHDecimalA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADH']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADH']/ns4:ResultValue,'.')">
                    <tns:InclusionGlobularOXHDA>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADH']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionGlobularOXHDA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionGlobularOXHDA>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADH']/ns4:ResultValue"/>
                    </tns:InclusionGlobularOXHDA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionGlobularOXHDA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionGlobularOXHDA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADH']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADH']/ns4:ResultValue,'.')">
                    <tns:InclusionGlobularOXHDDecimalA>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E45ADH']/ns4:ResultValue, '.' )"/>
                    </tns:InclusionGlobularOXHDDecimalA>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:InclusionGlobularOXHDDecimalA>0</tns:InclusionGlobularOXHDDecimalA>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:InclusionGlobularOXHDDecimalA>
                  <xsl:value-of select="string(' ')"/>
                </tns:InclusionGlobularOXHDDecimalA>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'RedRat']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'RedRat']/ns4:ResultValue,'.')">
                    <tns:ReductionRatio>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'RedRat']/ns4:ResultValue, '.' )"/>
                    </tns:ReductionRatio>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:ReductionRatio>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'RedRat']/ns4:ResultValue"/>
                    </tns:ReductionRatio>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:ReductionRatio>0</tns:ReductionRatio>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'RedRat']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'RedRat']/ns4:ResultValue,'.')">
                    <tns:ReductionRatioDecimal>
                      <xsl:value-of select="substring-after (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'RedRat']/ns4:ResultValue, '.' )"/>
                    </tns:ReductionRatioDecimal>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:ReductionRatioDecimal>0</tns:ReductionRatioDecimal>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <tns:ReductionRatioDecimal>0</tns:ReductionRatioDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381C']/ns4:ResultValue != ''">
                <!-- Defect# 2429 START-->
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381C']/ns4:ResultValue, '.' )">
                    <tns:E81C>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381C']/ns4:ResultValue, '.' )"/>
                    </tns:E81C>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:E81C>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381C']/ns4:ResultValue"/>
                    </tns:E81C>
                  </xsl:otherwise>
                </xsl:choose>
                <!--tns:E81C>
                  <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381C']/ns4:ResultValue"/>
                </tns:E81C-->
                <!-- Defect# 2429 START-->
              </xsl:when>
              <xsl:otherwise>
                <tns:E81C>0</tns:E81C>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381R']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381R']/ns4:ResultValue, '.' )">
                    <tns:E81R>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381R']/ns4:ResultValue, '.' )"/>
                    </tns:E81R>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:E81R>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381R']/ns4:ResultValue"/>
                    </tns:E81R>
                  </xsl:otherwise>
                </xsl:choose>
                <!--tns:E81R>
                  <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381R']/ns4:ResultValue"/>
                </tns:E81R-->
              </xsl:when>
              <xsl:otherwise>
                <tns:E81R>0</tns:E81R>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381S']/ns4:ResultValue != ''">
                <xsl:choose>
                  <xsl:when test="contains (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381S']/ns4:ResultValue, '.' )">
                    <tns:E81S>
                      <xsl:value-of select="substring-before (ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381S']/ns4:ResultValue, '.' )"/>
                    </tns:E81S>
                  </xsl:when>
                  <xsl:otherwise>
                    <tns:E81S>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381S']/ns4:ResultValue"/>
                    </tns:E81S>
                  </xsl:otherwise>
                </xsl:choose>
                <!--tns:E81S>
                  <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'E381S']/ns4:ResultValue"/>
                </tns:E81S-->
              </xsl:when>
              <xsl:otherwise>
                <tns:E81S>0</tns:E81S>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler/>
            <tns:cellSeperator/>
          </tns:MillCertPhysicalProperties>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>1</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>C</tns:Set1Code>
            <xsl:variable name="varCResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'C']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'C']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'C']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'C']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varCResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varCResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varCResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varCResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varCResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>2</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>Mn</tns:Set1Code>
            <xsl:variable name="varMnResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Mn']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Mn']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Mn']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Mn']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varMnResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varMnResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varMnResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varMnResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varMnResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>3</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>P</tns:Set1Code>
            <xsl:variable name="varPResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'P']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'P']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'P']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'P']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varPResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varPResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varPResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varPResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varPResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>4</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>S</tns:Set1Code>
            <xsl:variable name="varSResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'S']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'S']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'S']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'S']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varSResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varSResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varSResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varSResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varSResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>5</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>Si</tns:Set1Code>
            <xsl:variable name="varSiResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Si']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Si']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Si']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Si']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varSiResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varSiResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varSiResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varSiResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varSiResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>6</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>Sn</tns:Set1Code>
            <xsl:variable name="varSnResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Sn']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Sn']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Sn']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Sn']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varSnResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varSnResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varSnResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varSnResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varSnResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>7</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>Cu</tns:Set1Code>
            <xsl:variable name="varCuResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Cu']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Cu']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Cu']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Cu']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varCuResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varCuResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varCuResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varCuResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varCuResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>8</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>Cr</tns:Set1Code>
            <xsl:variable name="varCrResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Cr']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Cr']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Cr']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Cr']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varCrResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varCrResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varCrResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varCrResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varCrResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>9</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>Ni</tns:Set1Code>
            <xsl:variable name="varNiResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Ni']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Ni']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Ni']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Ni']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varNiResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varNiResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varNiResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varNiResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varNiResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>10</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>Mo</tns:Set1Code>
            <xsl:variable name="varMoResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Mo']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Mo']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Mo']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Mo']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varMoResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varMoResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varMoResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varMoResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varMoResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>11</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>V</tns:Set1Code>
            <xsl:variable name="varVResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'V']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'V']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'V']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'V']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varVResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varVResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varVResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varVResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varVResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>12</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>Nb</tns:Set1Code>
            <xsl:variable name="varNbResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Nb']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Nb']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Nb']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Nb']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varNbResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varNbResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varNbResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varNbResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varNbResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <tns:MillCertChemicalAnalysis>
            <tns:ReheatLot>
              <xsl:value-of select="ns4:ParentLotNO"/>
            </tns:ReheatLot>
            <tns:HeatSequenceNumber>13</tns:HeatSequenceNumber>
            <tns:RecordType>4</tns:RecordType>
            <tns:Set1Code>Al</tns:Set1Code>
            <xsl:variable name="varAlResultValue">
              <xsl:choose>
                <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Al']/ns4:ResultValue != ''">
                  <xsl:choose>
                    <xsl:when test="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Al']/ns4:TestUnit = 'PPM'">
                      <xsl:value-of select="(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Al']/ns4:ResultValue div 1000000)*100"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Al']/ns4:ResultValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>0</xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains ($varAlResultValue,'.')">
                <tns:Set1Value>
                  <xsl:value-of select="substring-before ($varAlResultValue, '.' )"/>
                </tns:Set1Value>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1Value>
                  <xsl:value-of select="$varAlResultValue"/>
                </tns:Set1Value>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="contains ($varAlResultValue,'.')">
                <tns:Set1ValueDecimal>
                  <xsl:value-of select="substring-after ($varAlResultValue, '.' )"/>
                </tns:Set1ValueDecimal>
              </xsl:when>
              <xsl:otherwise>
                <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
              </xsl:otherwise>
            </xsl:choose>
            <tns:Filler4/>
            <tns:cellSeperator/>
          </tns:MillCertChemicalAnalysis>
          <xsl:variable name="chemicalAnalysisProps"
                        select="number(count(ns4:Test_results/ns4:Test_results[ns4:TestClass = 'CHEM' and ns4:TestCode != 'Al' and ns4:TestCode != 'Nb' and ns4:TestCode != 'V' and ns4:TestCode != 'Mo' and ns4:TestCode != 'Ni' and ns4:TestCode != 'Cr' and ns4:TestCode != 'Cu' and ns4:TestCode != 'Sn' and ns4:TestCode != 'Si' and ns4:TestCode != 'S' and ns4:TestCode != 'P' and ns4:TestCode != 'Mn' and ns4:TestCode != 'C']))"/>
          <xsl:choose>
            <xsl:when test="$chemicalAnalysisProps > 0">
              <xsl:for-each select="ns4:Test_results/ns4:Test_results[ns4:TestClass = 'CHEM' and ns4:TestCode != 'Al' and ns4:TestCode != 'Nb' and ns4:TestCode != 'V' and ns4:TestCode != 'Mo' and ns4:TestCode != 'Ni' and ns4:TestCode != 'Cr' and ns4:TestCode != 'Cu' and ns4:TestCode != 'Sn' and ns4:TestCode != 'Si' and ns4:TestCode != 'S' and ns4:TestCode != 'P' and ns4:TestCode != 'Mn' and ns4:TestCode != 'C']">
                <tns:MillCertChemicalAnalysis>
                  <tns:ReheatLot>
                    <xsl:value-of select="../../ns4:ParentLotNO"/>
                  </tns:ReheatLot>
                  <tns:HeatSequenceNumber>
                    <xsl:value-of select="position()+13"/>
                  </tns:HeatSequenceNumber>
                  <tns:RecordType>4</tns:RecordType>
                  <tns:Set1Code>
                    <xsl:value-of select="ns4:TestCode"/>
                  </tns:Set1Code>
                  <xsl:variable name="varResultValue">
                    <xsl:choose>
                      <xsl:when test="ns4:ResultValue != ''">
                        <xsl:choose>
                          <xsl:when test="ns4:TestUnit = 'PPM'">
                            <xsl:value-of select="(ns4:ResultValue div 1000000)*100"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="ns4:ResultValue"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                      <xsl:otherwise>0</xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:choose>
                    <xsl:when test="contains ($varResultValue,'.')">
                      <tns:Set1Value>
                        <xsl:value-of select="substring-before ($varResultValue, '.' )"/>
                      </tns:Set1Value>
                      <tns:Set1ValueDecimal>
                        <xsl:value-of select="substring-after ($varResultValue, '.' )"/>
                      </tns:Set1ValueDecimal>
                    </xsl:when>
                    <xsl:otherwise>
                      <tns:Set1Value>
                        <xsl:value-of select="$varResultValue"/>
                      </tns:Set1Value>
                      <tns:Set1ValueDecimal>0</tns:Set1ValueDecimal>
                    </xsl:otherwise>
                  </xsl:choose>
                  <tns:Filler4/>
                  <tns:cellSeperator/>
                </tns:MillCertChemicalAnalysis>
              </xsl:for-each>
            </xsl:when>
          </xsl:choose>
          <xsl:variable name="jominiCount"
                        select="number(count(ns4:Test_results/ns4:Test_results[ns4:TestClass = 'JOMA' and ns4:ResultValue !='']))"/>
          <!--xsl:variable name="jominiSeq" select="1"/-->
          <!--xsl:variable name="count" saxon:assignable="yes" select="1"/-->
          <xsl:choose>
            <xsl:when test="$jominiCount > 0">
              <xsl:for-each select="ns4:Test_results/ns4:Test_results[ns4:TestClass = 'JOMA' and ns4:ResultValue !='']">
                <!--xsl:if test="ns4:TestClass = 'JOMI'"-->
                <tns:MillCertHardenabilityBand>
                  <tns:ReheatLot>
                    <xsl:value-of select="../../ns4:ParentLotNO"/>
                  </tns:ReheatLot>
                  <tns:HeatSequenceNumber>
                    <xsl:value-of select="position()"/>
                  </tns:HeatSequenceNumber>
                  <!--a>
                      <xsl:value-of select="$jominiSeq"/>
                    </a-->
                  <!--xsl:variable name="jominiSeq" select="$jominiSeq+1"/-->
                  <!--b>
                      <xsl:value-of select="$jominiSeq"/>
                    </b-->
                  <!--saxon:assign name="count">
                      <xsl:value-of select="$count+1"/>
                    </saxon:assign-->
                  <tns:RecordType>5</tns:RecordType>
                  <tns:Set1Code>
                    <xsl:value-of select="substring-after (substring-before (ns4:TestCode, 'A' ), 'J' )"/>
                  </tns:Set1Code>
                  <tns:Set1Value>
                    <xsl:value-of select="ns4:ResultValue"/>
                  </tns:Set1Value>
                  <tns:Filler5/>
                  <tns:cellSeperator/>
                </tns:MillCertHardenabilityBand>
                <!--/xsl:if-->
              </xsl:for-each>
            </xsl:when>
            <!-- As per Email from John on 10/7, We do not need to prit the whole Line if Jomini Test resutls are not present in the List
            <xsl:otherwise>
              <tns:MillCertHardenabilityBand>
                <tns:ReheatLot>
                  <xsl:value-of select="ns4:LotNo"/>
                </tns:ReheatLot>
                <tns:HeatSequenceNumber>
                  <xsl:value-of select="1"/>
                </tns:HeatSequenceNumber>
                <tns:RecordType>5</tns:RecordType>
                <tns:Set1Code></tns:Set1Code>
                <tns:Set1Value>0</tns:Set1Value>
                <tns:Filler5/>
                <tns:cellSeperator/>
              </tns:MillCertHardenabilityBand>
            </xsl:otherwise -->
          </xsl:choose>
          <xsl:variable name="lot" select="ns4:ParentLotNO"/>
          <xsl:call-template name="tokenize">
            <!--xsl:with-param name="text" select="normalize-space(ns4:Comments)"/-->
            <!--xsl:with-param name="text" select="translate(ns4:Comments,'&#10;','|')"/-->
            <xsl:with-param name="text" select="ns4:Comments"/>
            <xsl:with-param name="position" select="number(1)"/>
            <xsl:with-param name="lotNo" select="$lot"/>
          </xsl:call-template>
          <xsl:variable name="grainSizeCount"
                        select="number(count(ns4:Test_results/ns4:Test_results[ns4:TestCode = 'AGS' or ns4:TestCode = 'FGS']))"/>
          <xsl:choose>
            <xsl:when test="$grainSizeCount > 0">
              <!--xsl:for-each select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'Grain Size']"-->
              <!--xsl:if test="ns4:TestCode = 'Grain Size'"-->
              <tns:MillCertGrainPerASTM>
                <tns:ReheatLot>
                  <xsl:value-of select="ns4:ParentLotNO"/>
                </tns:ReheatLot>
                <tns:HeatSequenceNumber>
                  <xsl:value-of select="position ( )"/>
                </tns:HeatSequenceNumber>
                <tns:RecordType>7</tns:RecordType>
                <tns:AGS>
                  <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'AGS']/ns4:ResultValue"/>
                </tns:AGS>
                <tns:FGS>
                  <xsl:value-of select="ns4:Test_results/ns4:Test_results[ns4:TestCode = 'FGS']/ns4:ResultValue"/>
                </tns:FGS>
                <tns:GrainSizeText/>
                <tns:Filler7/>
              </tns:MillCertGrainPerASTM>
              <!--/xsl:if-->
              <!--/xsl:for-each-->
            </xsl:when>
            <xsl:otherwise>
              <tns:MillCertGrainPerASTM>
                <tns:ReheatLot>
                  <xsl:value-of select="ns4:ParentLotNO"/>
                </tns:ReheatLot>
                <tns:HeatSequenceNumber>
                  <xsl:value-of select="position ( )"/>
                </tns:HeatSequenceNumber>
                <tns:RecordType>7</tns:RecordType>
                <tns:AGS>0</tns:AGS>
                <tns:FGS>0</tns:FGS>
                <tns:GrainSizeText>Not Available.</tns:GrainSizeText>
                <tns:Filler7/>
              </tns:MillCertGrainPerASTM>
            </xsl:otherwise>
          </xsl:choose>
        </tns:MillCertHeaderRecord>
      </xsl:for-each>
    </tns:TestResults>
  </xsl:template>
  <xsl:template name="tokenize">
    <xsl:param name="text"/>
    <xsl:param name="position"/>
    <xsl:param name="lotNo"/>
    <xsl:choose>
      <!--xsl:when test="(string-length($text) &lt;= 60) and (not(contains($text,'&#10;')))"-->
      <xsl:when test="(string-length($text) &lt;= 60) and (not(contains($text,'&#10;')))">
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="$text"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+1"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="string('All manufacturing processes of the steel materials in this ')"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+2"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="string('product, including melting, have been performed in the ')"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+3"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>United States.</tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+4"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="string('All products produced are weld free.')"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+5"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="string('Mercury, in any form, has not been used in the production or')"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+6"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="string(' testing of this material.')"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+7"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="string('Test conform to ASTM A29-15, ASTM E415 and ASTM')"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+8"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="string('E1019-resulphurized grades or applicable customer ')"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+9"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="string('requirements.')"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+10"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="string('All material melted at Nucor Steel Nebraska is produced in ')"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+11"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="string('an Electric Arc Furnace.')"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position+12"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <tns:Comments>
            <xsl:value-of select="string('Strand Cast')"/>
          </tns:Comments>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
      </xsl:when>
      <xsl:otherwise>
        <tns:MillCertCommentRecords>
          <tns:ReheatLot>
            <xsl:value-of select="$lotNo"/>
          </tns:ReheatLot>
          <tns:HeatSequenceNumber>
            <xsl:value-of select="$position"/>
          </tns:HeatSequenceNumber>
          <tns:RecordType>6</tns:RecordType>
          <xsl:choose>
            <!--xsl:when test="contains($text,'&#10;')"-->
            <xsl:when test="contains($text,'&#10;')">
              <xsl:choose>
                <xsl:when test="string-length(substring-before($text,'&#10;')) &lt;= 60">
                  <tns:Comments>
                    <!--xsl:value-of select="substring-before($text,'&#10;')"/-->
                    <xsl:value-of select="substring-before($text,'&#10;')"/>
                  </tns:Comments>
                </xsl:when>
                <xsl:otherwise>
                  <tns:Comments>
                    <xsl:value-of select="substring($text, 1, 60)"/>
                  </tns:Comments>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
              <tns:Comments>
                <xsl:value-of select="substring($text, 1, 60)"/>
              </tns:Comments>
            </xsl:otherwise>
          </xsl:choose>
          <tns:Filler6/>
          <tns:cellSeperator/>
        </tns:MillCertCommentRecords>
        <xsl:choose>
          <!--xsl:when test="contains($text,'&#10;')"-->
          <xsl:when test="contains($text,'&#10;')">
            <xsl:choose>
                <xsl:when test="string-length(substring-before($text,'&#10;')) &lt;= 60">
                  <xsl:call-template name="tokenize">
                    <!--xsl:with-param name="text" select="substring-after($text,'&#10;')"/-->
                    <xsl:with-param name="text" select="substring-after($text,'&#10;')"/>
                    <xsl:with-param name="position" select="$position + 1"/>
                    <xsl:with-param name="lotNo" select="$lotNo"/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:call-template name="tokenize">
                      <xsl:with-param name="text" select="substring($text, 61, string-length($text)-60)"/>
                      <xsl:with-param name="position" select="$position + 1"/>
                      <xsl:with-param name="lotNo" select="$lotNo"/>
                    </xsl:call-template>
                  </xsl:otherwise>
              </xsl:choose>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="tokenize">
              <xsl:with-param name="text" select="substring($text, 61, string-length($text)-60)"/>
              <xsl:with-param name="position" select="$position + 1"/>
              <xsl:with-param name="lotNo" select="$lotNo"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>
