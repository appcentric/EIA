<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_GetBundle_Details"
                xmlns:ns0="http://schemas.oracle.com/service/bpel/common"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:utl="http://www.oracle.com/XSL/Transform/java/com.eia.soa.util.Configuration"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/db/sp/DB_EBS_Bundle_PRD"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                exclude-result-prefixes="xsi oracle-xsl-mapper xsl xsd ns1 ns0 tns xp20 oraxsl mhdr oraext dvm xref utl socket"
                xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/Manish/NSNE_Bundle_EBSMTLTrxImp_ABF/DB_GetBundle_Details"
                xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:client="http://nucor.eia.com/NSNE_Bundle_EBSMTLTrxImp_ABF"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/db/Manish/NSNE_Bundle_EBSMTLTrxImp_ABF/DB_EBS_Bundle_PRD">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/NSNE_Bundle_EBSMTLTrxImp_ABF.wsdl"/>
        <oracle-xsl-mapper:rootElement name="parameters" namespace="http://schemas.oracle.com/service/bpel/common"/>
      </oracle-xsl-mapper:source>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/DB_GetBundle_Details.wsdl"/>
        <oracle-xsl-mapper:rootElement name="ApiBundleTransCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_GetBundle_Details"/>
        <oracle-xsl-mapper:param name="g_Invoke_DB_GetBundle_DetailsSelect_OutputVariable.ApiBundleTransCollection"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/DB_EBS_Bundle_PRD.wsdl"/>
        <oracle-xsl-mapper:rootElement name="InputParameters"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/sp/DB_EBS_Bundle_PRD"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [TUE APR 05 08:49:39 CDT 2016].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="g_Invoke_DB_GetBundle_DetailsSelect_OutputVariable.ApiBundleTransCollection"/>
  <xsl:template match="/">
    <tns:InputParameters>
      <tns:P_INIT_PARAMS>
        <tns:USER_NAME>SOAUSER</tns:USER_NAME>
        <tns:RESPONSIBILITY_NAME>
          <xsl:value-of select='dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_ORG_RESP_NAME.dvm", "DIVISION", "NSNE", "EBS_RESP_NAME", "Production Supervisor", "EBS_FUNCTION_AREA", "GME Batches" )'/>
        </tns:RESPONSIBILITY_NAME>
      </tns:P_INIT_PARAMS>
      <tns:P_TRX_TAB>
        <xsl:for-each select="$g_Invoke_DB_GetBundle_DetailsSelect_OutputVariable.ApiBundleTransCollection/ns1:ApiBundleTransCollection/ns1:ApiBundleTrans[/ns0:parameters/ns0:item/ns0:value]">
          <tns:P_TRX_TAB_ITEM>
            <tns:ID>
              <xsl:value-of select="ns1:id"/>
            </tns:ID>
            <tns:ORGANIZATION_CODE>100</tns:ORGANIZATION_CODE>
            <tns:TRANSACTION_TYPE>
              <xsl:value-of select="ns1:transactionType"/>
            </tns:TRANSACTION_TYPE>
            <tns:TAG_NO>
              <xsl:value-of select="ns1:tagNo"/>
            </tns:TAG_NO>
            <tns:MILL_HEAT>
              <xsl:value-of select="ns1:millHeat"/>
            </tns:MILL_HEAT>
            <tns:MELT_HEAT>
              <xsl:value-of select="ns1:meltHeat"/>
            </tns:MELT_HEAT>
            <tns:PART_CODE_FROM>
              <xsl:value-of select="ns1:partCodeFrom"/>
            </tns:PART_CODE_FROM>
            <tns:PART_CODE>
              <xsl:value-of select="ns1:partCode"/>
            </tns:PART_CODE>
            <tns:SHAPE>
              <xsl:value-of select="ns1:shape"/>
            </tns:SHAPE>
            <tns:BUNDLE_SIZE>
              <xsl:value-of select="ns1:bundleSize"/>
            </tns:BUNDLE_SIZE>
            <tns:GRADE>
              <xsl:value-of select="ns1:grade"/>
            </tns:GRADE>
            <tns:MELT_PRACTICE>
              <xsl:value-of select="ns1:meltPractice"/>
            </tns:MELT_PRACTICE>
            <tns:LENGTH_INCHES>
              <xsl:value-of select="ns1:lengthInches"/>
            </tns:LENGTH_INCHES>
            <tns:SUBINVENTORY_CODE>PROD</tns:SUBINVENTORY_CODE>
            <tns:STACK_FROM>
              <xsl:value-of select="ns1:stackFrom"/>
            </tns:STACK_FROM>
            <tns:STACK>
              <xsl:value-of select="ns1:stack"/>
            </tns:STACK>
            <tns:DISPOSITION_FROM>
              <xsl:value-of select="ns1:dispositionFrom"/>
            </tns:DISPOSITION_FROM>
            <tns:DISPOSITION>
              <xsl:value-of select="ns1:disposition"/>
            </tns:DISPOSITION>
            <tns:PIECE_COUNT>
              <xsl:value-of select="ns1:pieceCount"/>
            </tns:PIECE_COUNT>
            <tns:WEIGHT_LBS>
              <xsl:value-of select="ns1:weightLbs"/>
            </tns:WEIGHT_LBS>
            <tns:CREW>
              <xsl:value-of select="ns1:crew"/>
            </tns:CREW>
            <tns:SHIFT>
              <xsl:value-of select="ns1:shift"/>
            </tns:SHIFT>
            <tns:PRODUCTION_DATE>
              <xsl:value-of select="ns1:productionDate"/>
            </tns:PRODUCTION_DATE>
            <tns:USER_ID>
              <xsl:value-of select="ns1:userId"/>
            </tns:USER_ID>
            <tns:USER_FIRST_NAME>
              <xsl:value-of select="ns1:userFirstName"/>
            </tns:USER_FIRST_NAME>
            <tns:USER_LAST_NAME>
              <xsl:value-of select="ns1:userLastName"/>
            </tns:USER_LAST_NAME>
            <tns:HOLD_CODE_1_FROM>
              <xsl:value-of select="ns1:holdCode1_From"/>
            </tns:HOLD_CODE_1_FROM>
            <tns:HOLD_CODE_2_FROM>
              <xsl:value-of select="ns1:holdCode2_From"/>
            </tns:HOLD_CODE_2_FROM>
            <tns:HOLD_CODE_3_FROM>
              <xsl:value-of select="ns1:holdCode3_From"/>
            </tns:HOLD_CODE_3_FROM>
            <tns:HOLD_CODE_4_FROM>
              <xsl:value-of select="ns1:holdCode4_From"/>
            </tns:HOLD_CODE_4_FROM>
            <tns:HOLD_CODE_5_FROM>
              <xsl:value-of select="ns1:holdCode5_From"/>
            </tns:HOLD_CODE_5_FROM>
            <tns:HOLD_CODE_1>
              <xsl:value-of select="ns1:holdCode1"/>
            </tns:HOLD_CODE_1>
            <tns:HOLD_CODE_2>
              <xsl:value-of select="ns1:holdCode2"/>
            </tns:HOLD_CODE_2>
            <tns:HOLD_CODE_3>
              <xsl:value-of select="ns1:holdCode3"/>
            </tns:HOLD_CODE_3>
            <tns:HOLD_CODE_4>
              <xsl:value-of select="ns1:holdCode4"/>
            </tns:HOLD_CODE_4>
            <tns:HOLD_CODE_5>
              <xsl:value-of select="ns1:holdCode5"/>
            </tns:HOLD_CODE_5>
            <tns:PROCESSED>
              <xsl:value-of select="ns1:processed"/>
            </tns:PROCESSED>
            <tns:PROCESS_DATE>
              <xsl:value-of select="ns1:processDate"/>
            </tns:PROCESS_DATE>
            <tns:CREATE_DATE>
              <xsl:value-of select="ns1:createDate"/>
            </tns:CREATE_DATE>
            <tns:JOB_NUMBER>
              <xsl:value-of select="ns1:jobNumber"/>
            </tns:JOB_NUMBER>
            <tns:TRANSACTION_DATE>
              <xsl:value-of select="ns1:transactionDate"/>
            </tns:TRANSACTION_DATE>
            <tns:ERROR_MESSAGE>
              <xsl:value-of select="ns1:errorMessage"/>
            </tns:ERROR_MESSAGE>
          </tns:P_TRX_TAB_ITEM>
        </xsl:for-each>
      </tns:P_TRX_TAB>
    </tns:InputParameters>
  </xsl:template>
</xsl:stylesheet>
