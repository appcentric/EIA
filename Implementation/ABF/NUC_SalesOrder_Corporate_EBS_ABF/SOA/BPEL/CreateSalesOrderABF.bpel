<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Sep 16 00:14:30 CDT 2015
  Author:  nirav.sanghavi
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="CreateSalesOrderABF"
               targetNamespace="http://xmlns.eia.com/NucorSOA/NUC_SalesOrder_Corporate_EBS_ABF/CreateSalesOrderABF/1.0"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.eia.com/NucorSOA/NUC_SalesOrder_Corporate_EBS_ABF/CreateSalesOrderABF/1.0"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:ui="http://xmlns.oracle.com/soa/designer"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         
         xmlns:ns2="http://xmlns.eia.com/Implementation/ABS/EBiz/O2C/SalesOrderABS/1.0"
         
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns7="http://xmlns.eia.com/AO/EBiz/O2C/SalesOrderAO/1.0"
         xmlns:eia="http://xmlns.eia.com/extensions/1.0"
         xmlns:ns5="http://xmlns.eia.com/AO/EBiz/O2C/SalesOrderAM/1.0"
         xmlns:ns4="http://xmlns.eia.com/ABF/CreateSalesOrder_ABF/1.0/SalesOrder"
         xmlns:ns6="http://xmlns.eia.com/EO/common/Header/1.0" xmlns:ns8="http://xmlns.eia.com/CommonLogging"
         xmlns:ns9="http://www.nucor.com/scmschemas/CorpXMLOrder.xsd">
  <import namespace="http://www.nucor.com/scmschemas/CorpXMLOrder.xsd"
          location="oramds:/apps/EIAMetadata/AO/Corporate/O2C/Orders/V1.0/Weborder.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>
  <import ui:processWSDL="true" namespace="http://xmlns.eia.com/NucorSOA/NUC_SalesOrder_Corporate_EBS_ABF/CreateSalesOrderABF/1.0" location="../WSDLs/CreateSalesOrderABF.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="createsalesorderabf_client" partnerLinkType="client:CreateSalesOrderABF" myRole="CreateSalesOrderABFProvider"/>
    <partnerLink name="CreateSalesOrderABS" partnerLinkType="ns2:CreateSalesOrderABS"
                 partnerRole="CreateSalesOrderABSProvider"/>
    <partnerLink name="CommonLoggingPL" partnerLinkType="ns8:CommonLogging" partnerRole="CommonLoggingProvider"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:CreateSalesOrderABFRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:CreateSalesOrderABFResponseMessage"/>
    <variable name="g_Invoke_CreateSalesOrderABS_process_InputVariable"
              messageType="ns2:CreateSalesOrderABSRequestMessage"/>
    <variable name="g_Invoke_CreateSalesOrderABS_process_OutputVariable"
              messageType="ns2:CreateSalesOrderABSResponseMessage"/>
    <variable name="g_ParsedXMLOrder" element="ns9:orders"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence1">
        <scope name="ScopeCommonLog">
          <variables>
            <variable name="Invoke_CommonLoggingPL_process_InputVariable"
                      messageType="ns8:CommonLoggingRequestMessage"/>
          </variables>
          <sequence name="Sequence2">
            <assign name="Assign_Error">
              <copy>
                <from>ora:getComponentInstanceId()</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionId</to>
              </copy>
              <copy>
                <from>'NextGen'</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:ProjectName</to>
              </copy>
              <copy>
                <from>'I038'</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:ComponentId</to>
              </copy>
              <copy>
                <from>'SalesOrder'</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionName</to>
              </copy>
              <copy>
                <from>ora:getCompositeName()</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:ProcessName</to>
              </copy>
              <copy>
                <from>1</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:LoggingSystem</to>
              </copy>
              <copy>
                <from>26</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:SourceSystem</to>
              </copy>
              <copy>
                <from>2</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TargetSystem</to>
              </copy>
              <copy>
                <from>4</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:LogType</to>
              </copy>
              <copy>
                <from>concat('FlowId:',ora:getFlowId(),':',ora:getFaultAsString())</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:MessageDescription</to>
              </copy>
              <copy>
                <from>2</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionStatus</to>
              </copy>
              <copy>
                <from>'SOA'</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:CreatedBy</to>
              </copy>
              <copy>
                <from>'SOA'</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:UpdatedBy</to>
              </copy>
            </assign>
            <invoke name="Invoke_CommonLoggingPL" partnerLink="CommonLoggingPL"
                    portType="ns8:CommonLogging" operation="process"
                    inputVariable="Invoke_CommonLoggingPL_process_InputVariable" bpelx:invokeAsDetail="no">
              <bpelx:toProperties>
                <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
              </bpelx:toProperties>
            </invoke>
          </sequence>
        </scope>
        <assign name="Assign_Response_CatchAll">
          <copy>
            <from>concat('ERROR :: ',ora:getFaultAsString())</from>
            <to>$outputVariable.payload</to>
          </copy>
        </assign>
        <reply name="Reply_CatchAll" variable="outputVariable" partnerLink="createsalesorderabf_client"
               portType="client:CreateSalesOrderABF" operation="process"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in CreateSalesOrderABF.wsdl) -->
    <receive name="receiveInput" partnerLink="createsalesorderabf_client" portType="client:CreateSalesOrderABF" operation="process" variable="inputVariable" createInstance="yes"/>
    <scope name="Scope_StartLog">
      <variables>
        <variable name="Invoke_CommonLoggingPL_process_InputVariable" messageType="ns8:CommonLoggingRequestMessage"/>
      </variables>
      <faultHandlers>
        <catchAll>
          <empty name="DoNothing"/>
        </catchAll>
      </faultHandlers>
      <sequence name="Sequence3">
        <assign name="Assign_StartLog">
          <copy>
            <from>ora:getComponentInstanceId()</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionId</to>
          </copy>
          <copy>
            <from>oraext:setFlowInstanceTitle(string($Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionId))</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionId</to>
          </copy>
          <copy>
            <from>'NextGen'</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:ProjectName</to>
          </copy>
          <copy>
            <from>'I038'</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:ComponentId</to>
          </copy>
          <copy>
            <from>'SalesOrder'</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionName</to>
          </copy>
          <copy>
            <from>ora:getCompositeName()</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:ProcessName</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:LoggingSystem</to>
          </copy>
          <copy>
            <from>26</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:SourceSystem</to>
          </copy>
          <copy>
            <from>2</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TargetSystem</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:LogType</to>
          </copy>
          <copy>
            <from>'BMG-003'</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:MessageCode</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionStatus</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:CreatedBy</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:UpdatedBy</to>
          </copy>
        </assign>
        <invoke name="Invoke_CommonLoggingPL" partnerLink="CommonLoggingPL"
                portType="ns8:CommonLogging" operation="process"
                inputVariable="Invoke_CommonLoggingPL_process_InputVariable" bpelx:invokeAsDetail="no">
          <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
      </sequence>
    </scope>
    <assign name="Assign_Inputstring">
      <copy>
        <from>oraext:parseXML($inputVariable.payload)</from>
        <to>$g_ParsedXMLOrder</to>
      </copy>
    </assign>
    <assign name="Transform_Input_To_Canonical">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from>ora:doXSLTransformForDoc("../Transformations/Transformation_Input_To_Canonical.xsl", $g_ParsedXMLOrder)</from>
        <to variable="g_Invoke_CreateSalesOrderABS_process_InputVariable" part="payload"/>
      </copy>
    </assign>
    <!--assign name="Assign_Inputstring">
      <copy>
        <from>oraext:parseXML($inputVariable.payload)</from>
        <to>$g_ParsedXML</to>
      </copy>
    </assign-->
    <!--assign name="Transformation_Web_To_Canonical">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from>ora:doXSLTransformForDoc("../Transformations/Transformation_Input_To_Canonical.xsl", $g_ParsedXML)</from>
        <to variable="g_Invoke_CreateSalesOrderABS_process_InputVariable" part="payload"/>
      </copy>
    </assign-->
    <assign name="Assign_Header">
      <copy>
        <from>ora:getCompositeName()</from>
        <to>$g_Invoke_CreateSalesOrderABS_process_InputVariable.payload/ns6:HeaderRq/ns6:ServiceName</to>
      </copy>
      <copy>
        <from>ora:getComponentInstanceId()</from>
        <to>$g_Invoke_CreateSalesOrderABS_process_InputVariable.payload/ns6:HeaderRq/ns6:TransactionIDREF</to>
      </copy>
      <copy>
        <from>$g_ParsedXMLOrder/order/@scporderid</from>
        <to>$g_Invoke_CreateSalesOrderABS_process_InputVariable.payload/ns6:HeaderRq/ns6:TransactionRequestID</to>
      </copy>
    </assign>
    <invoke name="Invoke_CreateSalesOrderABS" partnerLink="CreateSalesOrderABS"
            portType="ns2:CreateSalesOrderABS" operation="process"
            inputVariable="g_Invoke_CreateSalesOrderABS_process_InputVariable"
            outputVariable="g_Invoke_CreateSalesOrderABS_process_OutputVariable" bpelx:invokeAsDetail="no">
      <bpelx:toProperties>
        <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("NUC_EbizCreateSalesOrder_ABS","endpointURI")</bpelx:toProperty>
      </bpelx:toProperties>
    </invoke>
    <assign name="Assign_Response">
      <copy>
        <from>concat($g_Invoke_CreateSalesOrderABS_process_OutputVariable.payload/ns7:SalesOrderResponse/ns7:Result,' :: ',$g_Invoke_CreateSalesOrderABS_process_OutputVariable.payload/ns7:SalesOrderResponse/ns7:ErrorMsg)</from>
        <to>$outputVariable.payload</to>
      </copy>
    </assign>
    <scope name="Scope_EndLog">
      <variables>
        <variable name="Invoke_CommonLoggingPL_process_InputVariable" messageType="ns8:CommonLoggingRequestMessage"/>
      </variables>
      <faultHandlers>
        <catchAll>
          <empty name="DoNothing"/>
        </catchAll>
      </faultHandlers>
      <sequence name="Sequence4">
        <assign name="Assign_EndLog">
          <copy>
            <from>ora:getComponentInstanceId()</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionId</to>
          </copy>
          <copy>
            <from>'NextGen'</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:ProjectName</to>
          </copy>
          <copy>
            <from>'I038'</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:ComponentId</to>
          </copy>
          <copy>
            <from>'SalesOrder'</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionName</to>
          </copy>
          <copy>
            <from>ora:getCompositeName()</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:ProcessName</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:LoggingSystem</to>
          </copy>
          <copy>
            <from>26</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:SourceSystem</to>
          </copy>
          <copy>
            <from>2</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TargetSystem</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:CreatedBy</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:UpdatedBy</to>
          </copy>
        </assign>
        <if name="If_Status">
          <documentation>
            <![CDATA[SUCCESS]]>
          </documentation>
          <condition>$g_Invoke_CreateSalesOrderABS_process_OutputVariable.payload/ns6:HeaderRs/ns6:Status/ns6:Status = 'SUCCESS'</condition>
          <assign name="Assign_Success">
            <copy>
              <from>'BMG-003'</from>
              <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:MessageCode</to>
            </copy>
            <copy>
              <from>1</from>
              <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:LogType</to>
            </copy>
            <copy>
              <from>1</from>
              <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionStatus</to>
            </copy>
          </assign>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <assign name="Assign_Error">
              <copy>
                <from>4</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:LogType</to>
              </copy>
              <copy>
                <from>'BMG-022'</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:MessageCode</to>
              </copy>
              <copy>
                <from>$g_ParsedXMLOrder/order/@scporderid</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:MessageDescription</to>
              </copy>
              <copy>
                <from>2</from>
                <to>$Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:TransactionStatus</to>
              </copy>
            </assign>
          </else>
        </if>
        <invoke name="Invoke_CommonLoggingPL" partnerLink="CommonLoggingPL"
                portType="ns8:CommonLogging" operation="process"
                inputVariable="Invoke_CommonLoggingPL_process_InputVariable" bpelx:invokeAsDetail="no">
          <bpelx:skipCondition>(eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false") and ($Invoke_CommonLoggingPL_process_InputVariable.CommonLogging/ns8:LogType != "4")</bpelx:skipCondition>
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
      </sequence>
    </scope>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="createsalesorderabf_client" portType="client:CreateSalesOrderABF" operation="process" variable="outputVariable"/>
  </sequence>
</process>