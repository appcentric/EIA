<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:ns0="http://xmlns.eia.com/AO/Ebiz/D2S/InventoryTransactionAM/1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Insert_BUNDLE"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                exclude-result-prefixes="xsi oracle-xsl-mapper xsl xsd ns0 tns xp20 oraxsl mhdr oraext dvm xref socket"
                xmlns:ns2="http://xmlns.eia.com/EO/common/Common/1.0"
                xmlns:ns4="http://xmlns.eia.com/EO/Standard/External/ISO/Country/3166-1/2006/Country"
                xmlns:pc="http://xmlns.oracle.com/pcbpel/" xmlns:ns6="http://xmlns.eia.com/EO/common/Header/1.0"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ns7="http://xmlns.eia.com/AO/Ebiz/D2S/InventoryTransactionAO/1.0"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:ns3="http://xmlns.eia.com/EO/Standard/External/ISO/Language/639-3/2007/Language"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/jms/Manish/NSUT_SubscribeInventory_EBiz_QMOS_ABF/JMS_DEQ_NextGenDistributedTopic"
                xmlns:ns5="http://xmlns.eia.com/EO/Standard/External/ISO/Currency/4217/2001/Currency"
                xmlns:ns8="http://xmlns.oracle.com/pcbpel/adapter/db/Manish/NSUT_SubscribeInventory_EBiz_QMOS_ABF/DB_Insert_BUNDLE">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/JMS_DEQ_NextGenDistributedTopic.wsdl"/>
        <oracle-xsl-mapper:rootElement name="InventoryTransactionAddRq"
                                       namespace="http://xmlns.eia.com/AO/Ebiz/D2S/InventoryTransactionAM/1.0"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/DB_Insert_BUNDLE.wsdl"/>
        <oracle-xsl-mapper:rootElement name="ApiBundleTransExtCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Insert_BUNDLE"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [FRI FEB 17 04:41:16 CST 2017].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:ApiBundleTransExtCollection>
      <xsl:for-each select="/ns0:InventoryTransactionAddRq/ns7:InventoryTransactionDetails">
        <xsl:if test='ns7:ListOfInvTrx/ns7:TrxSourceName != concat (ns7:ListOfInvTrx/ns7:OrgCode, "_QMOS" )'>
          <xsl:for-each select="ns7:ListOfInvTrx/ns7:ListOfInvTrxDetails/ns7:InvTrxDetails">
            <xsl:if test=' dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_QMOS_NSNE_ITEM_TYPE_MAP.dvm", "ITEMTYPE", ../../ns7:ItemType, "BUNDLE", "" ) = "Y" '>
              <xsl:if test='dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_QMOS_TRANSACTION_TYPE_NAME_MAP.dvm", "TRANSACTION_TYPE_NAME", ../../ns7:TransactionType, "QMOS_BUNDLE", "" ) != "" and (not(../../ns7:TransactionType="WIP Completion" and ../../ns7:SubinventoryCode!="OSP"))'>
                <!--xsl:if test='(../../ns7:LPN != "") and ((substring(../../ns7:LPN, 1.0, 2.0) = "NF") and (substring(../../ns7:LPN, 5.0, 1.0) = "1") or substring (../../ns7:LPN, 1, 4 ) = "1001" or not (substring (../../ns7:LPN, 1, 2 ) = "NF" and substring (../../ns7:LPN, 5, 1 ) = "2" or substring (../../ns7:LPN, 1, 4 ) = "1002" ))'-->
                <xsl:if test=' (../../ns7:ItemType = "NUC_HWY PROD") or  ((../../ns7:LPN != "") and ( substring (../../ns7:LPN, 1, 4 ) = "1201" or substring (../../ns7:LPN, 1, 4 ) = "1202" ))'>
                  <tns:ApiBundleTransExt>
                    <tns:id>
                      <xsl:value-of select='oraext:sequence-next-val ("SEQ_API_BUNDLE_TRANS_EXT_ID", "jdbc/nsutqmos" )'/>
                    </tns:id>
                    <xsl:choose>
                      <xsl:when test="../../ns7:TransactionType='Account alias recipt' and ../../ns7:TransactionReason='PRO'">
                        <tns:transactionType>PRD</tns:transactionType>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:choose>
                          <xsl:when test="../../ns7:TransactionType='Account alias issue' and ../../ns7:TransactionReason='VOID'">
                            <tns:transactionType>VOID</tns:transactionType>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:choose>
                              <xsl:when test="../../ns7:TransactionType='Account alias issue' and ../../ns7:TransactionReason='Return Scrap'">
                                <tns:transactionType>SCP</tns:transactionType>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:choose>
                                  <xsl:when test="../../ns7:TransactionType='WIP Completion' and ../../ns7:SubinventoryCode='OSP'">
                                    <tns:transactionType>PUK</tns:transactionType>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <tns:transactionType>
                                      <xsl:value-of select='dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_QMOS_TRANSACTION_TYPE_NAME_MAP.dvm", "TRANSACTION_TYPE_NAME", ../../ns7:TransactionType, "QMOS_BUNDLE", "" )'/>
                                    </tns:transactionType>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:otherwise>
                    </xsl:choose>
                    <tns:tagNo>
                      <xsl:value-of select="../../ns7:LPN"/>
                    </tns:tagNo>
                    <xsl:if test="../../ns7:ListOfInvTrxSrcDetails/ns7:InvTrxSrcDetails/ns7:TrxSourceInfo5">
                      <tns:bolSlipNo>
                        <xsl:value-of select="substring(../../ns7:ListOfInvTrxSrcDetails/ns7:InvTrxSrcDetails/ns7:TrxSourceInfo6,1,10)"/>
                      </tns:bolSlipNo>
                    </xsl:if>
                    <tns:cusCustomerId>
                      <xsl:value-of select="../../ns7:ListOfInvTrxSrcDetails/ns7:InvTrxSrcDetails/ns7:TrxSourceInfo1"/>
                    </tns:cusCustomerId>
                    <tns:cusCustomerName>
                      <xsl:value-of select="../../ns7:ListOfInvTrxSrcDetails/ns7:InvTrxSrcDetails/ns7:TrxSourceInfo2"/>
                    </tns:cusCustomerName>
                    <tns:bolCarrierName>
                      <xsl:value-of select="substring (../../ns7:ListOfInvTrxSrcDetails/ns7:InvTrxSrcDetails/ns7:TrxSourceInfo5,1,30)"/>
                    </tns:bolCarrierName>
                    <tns:bolTruckPlateNo>
                      <xsl:value-of select="../../ns7:ListOfInvTrxSrcDetails/ns7:InvTrxSrcDetails/ns7:TrxSourceInfo3"/>
                    </tns:bolTruckPlateNo>
                    <tns:bolShipDate>
                      <xsl:value-of select="../../ns7:ListOfInvTrxSrcDetails/ns7:InvTrxSrcDetails/ns7:TrxSourceInfo4"/>
                    </tns:bolShipDate>
                    <tns:binFrom>
                      <xsl:value-of select="../../ns7:XferLocator"/>
                    </tns:binFrom>
                    <tns:binTo>
                      <xsl:value-of select="../../ns7:Locator"/>
                    </tns:binTo>
                    <tns:userId>SOAUSER</tns:userId>
                    <tns:processed>N</tns:processed>
                    <tns:processDate/>
                    <tns:createDate>
                      <xsl:value-of select="xp20:current-dateTime ( )"/>
                    </tns:createDate>
                    <tns:partCode>
                      <xsl:value-of select="../../ns7:ItemNumber"/>
                    </tns:partCode>
                    <xsl:choose>
                      <xsl:when test="xp20:compare (ns7:LotStatus, 'Active' ) = 0">
                        <tns:disposition>Prime</tns:disposition>
                      </xsl:when>
                      <xsl:otherwise>
                        <tns:disposition>Hold</tns:disposition>
                      </xsl:otherwise>
                    </xsl:choose>
                    <tns:millHeat>
                      <xsl:value-of select="ns7:LotNumber"/>
                    </tns:millHeat>
                    <tns:meltHeat>
                      <xsl:value-of select="ns7:PrimaryLot"/>
                    </tns:meltHeat>
                    <xsl:choose>
                      <xsl:when test="ns7:TrxLotQuantity and ns7:TrxLotQuantity != ''">
                        <tns:weightLbs>
                          <xsl:value-of select="oraext:query-database (concat (&quot;SELECT  inv_convert.inv_um_convert_new (&quot;, ../../ns7:ItemID, &quot;,null,&quot;, ../../ns7:OrgID, &quot;,null,&quot;, ns7:TrxLotQuantity, &quot;,'&quot;, ../../ns7:TrxUOMCode, &quot;','LBS',null,null, 'W') result from dual&quot; ), false(), false(), &quot;jdbc/ebsapps&quot; )"/>
                        </tns:weightLbs>
                      </xsl:when>
                      <xsl:otherwise>
                        <tns:weightLbs>
                          <xsl:value-of select="oraext:query-database (concat (&quot;SELECT  inv_convert.inv_um_convert_new (&quot;, ../../ns7:ItemID, &quot;,null,&quot;, ../../ns7:OrgID, &quot;,null,&quot;, 0, &quot;,'&quot;, ../../ns7:TrxUOMCode, &quot;','LBS',null,null, 'W') result from dual&quot; ), false(), false(), &quot;jdbc/ebsapps&quot; )"/>
                        </tns:weightLbs>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                      <xsl:when test="../../ns7:ItemType = 'NUC_HWY PROD'">
                        <tns:millId>PA</tns:millId>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:choose>
                          <xsl:when test="substring (../../ns7:LPN, 1, 4 ) = '1201'">
                            <tns:millId>PA</tns:millId>
                          </xsl:when>
                          <xsl:otherwise>
                            <tns:millId>PB</tns:millId>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:otherwise>
                    </xsl:choose>
                  </tns:ApiBundleTransExt>
                </xsl:if>
              </xsl:if>
            </xsl:if>
          </xsl:for-each>
        </xsl:if>
      </xsl:for-each>
    </tns:ApiBundleTransExtCollection>
  </xsl:template>
</xsl:stylesheet>
