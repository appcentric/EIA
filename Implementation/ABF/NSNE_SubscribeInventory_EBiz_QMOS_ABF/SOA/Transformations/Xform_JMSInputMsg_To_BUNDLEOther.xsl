<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:utl="http://www.oracle.com/XSL/Transform/java/com.eia.soa.util.Configuration"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Insert_API_BUNDLE_TRANS"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns0 oraxsl xp20 xref mhdr oraext utl dvm socket"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/db/Manish/NSNE_SubscribeInventory_EBiz_QMOS_ABF/DB_Insert_API_BUNDLE_TRANS"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/DB_Insert_API_BUNDLE_TRANS.wsdl"/>
        <oracle-xsl-mapper:rootElement name="ApiBundleTransExtCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Insert_API_BUNDLE_TRANS"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/DB_Insert_API_BUNDLE_TRANS.wsdl"/>
        <oracle-xsl-mapper:rootElement name="ApiBundleTransExtCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Insert_API_BUNDLE_TRANS"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [FRI JUL 22 10:14:13 CDT 2016].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <ns0:ApiBundleTransExtCollection>
      <xsl:for-each select="/ns0:ApiBundleTransExtCollection/ns0:ApiBundleTransExt">
        <xsl:if test='substring(ns0:tagNo, 1.0, 4.0) != "1001" and substring (ns0:tagNo, 1, 4 ) != "1002"'>
          <ns0:ApiBundleTransExt>
            <ns0:id>
              <xsl:value-of select='oraext:sequence-next-val ("SEQ_API_BUNDLE_TRANS_EXT_ID", "jdbc/nsneqmos1" )'/>
            </ns0:id>
            <xsl:if test="ns0:transactionType">
              <ns0:transactionType>
                <xsl:value-of select="ns0:transactionType"/>
              </ns0:transactionType>
            </xsl:if>
            <xsl:if test="ns0:tagNo">
              <ns0:tagNo>
                <xsl:value-of select="ns0:tagNo"/>
              </ns0:tagNo>
            </xsl:if>
            <xsl:if test="ns0:bolSlipNo">
              <ns0:bolSlipNo>
                <xsl:if test="ns0:bolSlipNo/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:bolSlipNo/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:bolSlipNo"/>
              </ns0:bolSlipNo>
            </xsl:if>
            <xsl:if test="ns0:cusCustomerId">
              <ns0:cusCustomerId>
                <xsl:if test="ns0:cusCustomerId/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:cusCustomerId/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:cusCustomerId"/>
              </ns0:cusCustomerId>
            </xsl:if>
            <xsl:if test="ns0:cusCustomerName">
              <ns0:cusCustomerName>
                <xsl:if test="ns0:cusCustomerName/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:cusCustomerName/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:cusCustomerName"/>
              </ns0:cusCustomerName>
            </xsl:if>
            <xsl:if test="ns0:bolCarrierName">
              <ns0:bolCarrierName>
                <xsl:if test="ns0:bolCarrierName/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:bolCarrierName/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:bolCarrierName"/>
              </ns0:bolCarrierName>
            </xsl:if>
            <xsl:if test="ns0:bolTruckPlateNo">
              <ns0:bolTruckPlateNo>
                <xsl:if test="ns0:bolTruckPlateNo/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:bolTruckPlateNo/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:bolTruckPlateNo"/>
              </ns0:bolTruckPlateNo>
            </xsl:if>
            <xsl:if test="ns0:bolShipDate">
              <ns0:bolShipDate>
                <xsl:if test="ns0:bolShipDate/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:bolShipDate/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:bolShipDate"/>
              </ns0:bolShipDate>
            </xsl:if>
            <xsl:if test="ns0:binFrom">
              <ns0:binFrom>
                <xsl:if test="ns0:binFrom/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:binFrom/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:binFrom"/>
              </ns0:binFrom>
            </xsl:if>
            <xsl:if test="ns0:binTo">
              <ns0:binTo>
                <xsl:if test="ns0:binTo/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:binTo/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:binTo"/>
              </ns0:binTo>
            </xsl:if>
            <xsl:if test="ns0:userId">
              <ns0:userId>
                <xsl:if test="ns0:userId/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:userId/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:userId"/>
              </ns0:userId>
            </xsl:if>
            <xsl:if test="ns0:processed">
              <ns0:processed>
                <xsl:value-of select="ns0:processed"/>
              </ns0:processed>
            </xsl:if>
            <xsl:if test="ns0:processDate">
              <ns0:processDate>
                <xsl:if test="ns0:processDate/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:processDate/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:processDate"/>
              </ns0:processDate>
            </xsl:if>
            <xsl:if test="ns0:createDate">
              <ns0:createDate>
                <xsl:value-of select="ns0:createDate"/>
              </ns0:createDate>
            </xsl:if>
            <xsl:if test="ns0:partCode">
              <ns0:partCode>
                <xsl:if test="ns0:partCode/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:partCode/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:partCode"/>
              </ns0:partCode>
            </xsl:if>
            <xsl:if test="ns0:disposition">
              <ns0:disposition>
                <xsl:if test="ns0:disposition/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:disposition/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:disposition"/>
              </ns0:disposition>
            </xsl:if>
            <xsl:if test="ns0:millHeat">
              <ns0:millHeat>
                <xsl:if test="ns0:millHeat/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:millHeat/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:millHeat"/>
              </ns0:millHeat>
            </xsl:if>
            <xsl:if test="ns0:meltHeat">
              <ns0:meltHeat>
                <xsl:if test="ns0:meltHeat/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:meltHeat/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:meltHeat"/>
              </ns0:meltHeat>
            </xsl:if>
            <xsl:if test="ns0:weightLbs">
              <ns0:weightLbs>
                <xsl:if test="ns0:weightLbs/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:weightLbs/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:weightLbs"/>
              </ns0:weightLbs>
            </xsl:if>
            <xsl:if test="ns0:millId">
              <ns0:millId>
                <xsl:if test="ns0:millId/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:millId/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:millId"/>
              </ns0:millId>
            </xsl:if>
            <xsl:if test="ns0:errorMessage">
              <ns0:errorMessage>
                <xsl:if test="ns0:errorMessage/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                    <xsl:value-of select="ns0:errorMessage/@xsi:nil"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="ns0:errorMessage"/>
              </ns0:errorMessage>
            </xsl:if>
          </ns0:ApiBundleTransExt>
        </xsl:if>
      </xsl:for-each>
    </ns0:ApiBundleTransExtCollection>
  </xsl:template>
</xsl:stylesheet>
