<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet exclude-result-prefixes="xsi oracle-xsl-mapper xsl xsd ns0 tns xp20 oraxsl mhdr oraext dvm xref socket"
                version="1.0" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:ns0="http://xmlns.eia.com/AO/Ebiz/D2S/InventoryTransactionAM/1.0"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/jms/Manish/NSNE_SubscribeInventory_EBiz_QMOS_ABF/JMS_DEQ_NextGenDistributedTopic"
                xmlns:ns2="http://schemas.oracle.com/service/bpel/common"
                xmlns:ns3="http://xmlns.eia.com/EO/common/Common/1.0"
                xmlns:ns4="http://xmlns.eia.com/EO/Standard/External/ISO/Language/639-3/2007/Language"
                xmlns:ns5="http://xmlns.eia.com/EO/Standard/External/ISO/Country/3166-1/2006/Country"
                xmlns:ns6="http://xmlns.eia.com/EO/Standard/External/ISO/Currency/4217/2001/Currency"
                xmlns:ns7="http://xmlns.eia.com/EO/common/Header/1.0"
                xmlns:ns8="http://xmlns.eia.com/AO/Ebiz/D2S/InventoryTransactionAO/1.0"
                xmlns:ns9="http://xmlns.oracle.com/pcbpel/adapter/db/Manish/NSNE_SubscribeInventory_EBiz_QMOS_ABF/DB_Insert_API_BILLET_TRANS"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:pc="http://xmlns.oracle.com/pcbpel/"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Insert_API_BILLET_TRANS"
                xmlns:utl="http://www.oracle.com/XSL/Transform/java/com.eia.soa.util.Configuration"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/JMS_DEQ_NextGenDistributedTopic.wsdl"/>
        <oracle-xsl-mapper:rootElement name="InventoryTransactionAddRq"
                                       namespace="http://xmlns.eia.com/AO/Ebiz/D2S/InventoryTransactionAM/1.0"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/DB_Insert_API_BILLET_TRANS.wsdl"/>
        <oracle-xsl-mapper:rootElement name="ApiBilletTransExtCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Insert_API_BILLET_TRANS"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [WED JUL 27 07:35:17 CDT 2016].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:ApiBilletTransExtCollection>
      <xsl:for-each select="/ns0:InventoryTransactionAddRq/ns8:InventoryTransactionDetails">
        <xsl:if test='ns8:ListOfInvTrx/ns8:TrxSourceName != concat (ns8:ListOfInvTrx/ns8:OrgCode, "_QMOS" )'>
          <xsl:for-each select="ns8:ListOfInvTrx/ns8:ListOfInvTrxDetails/ns8:InvTrxDetails">
            <xsl:sort select="ns8:LotNumber" order="descending"/>
            <xsl:variable name="varMillId">
              <xsl:choose>
                <xsl:when test="not(preceding-sibling::ns7:InvTrxDetails[1]/ns7:LotNumber = ns7:LotNumber)">
                  <tns:varMillIdLocal>
                    <xsl:value-of select="oraext:query-database (concat (&quot;select mill_id from (SELECT mill_id, 1 ord FROM v_cast_lot_mill WHERE bli_billet_batch ='&quot;,ns8:LotNumber,&quot;' and mill_id = 2 UNION ALL select 1 mill_id, 999 ord from dual order by 2 asc) where rownum &lt; 2&quot;), false ( ), false ( ), &quot;jdbc/nsneqmos1_nonxa&quot; )"/>
                  </tns:varMillIdLocal>
                </xsl:when>
                <xsl:otherwise>
                  <tns:varMillIdLocal>
                    <xsl:value-of select="2"/>
                  </tns:varMillIdLocal>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <!--   <xsl:variable name="varMillId" select="oraext:query-database (concat (&quot;select mill_id from (SELECT mill_id, 1 ord FROM v_cast_lot_mill WHERE bli_billet_batch =&quot;,../../ns8:LotNumber,&quot; and mill_id = 2 UNION ALL select 1 mill_id, 999 ord from dual order by 2 asc) where rownum &lt; 2&quot; ), false ( ), false ( ), &quot;jdbc/nsneqmos2&quot; )"/>-->
            <xsl:if test='dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_QMOS_NSNE_ITEM_TYPE_MAP.dvm", "ITEMTYPE", ../../ns8:ItemType, "BILLET", "" ) = "Y" '>
              <xsl:if test='dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_QMOS_TRANSACTION_TYPE_NAME_MAP.dvm", "TRANSACTION_TYPE_NAME", ../../ns8:TransactionType, "QMOS_BILLET", "" ) != ""'>
                <!--xsl:if test=' contains(../../ns8:ResourceName,"RM1") or  contains(../../ns8:ResourceName,"RM2") ' # Defect#2294-->
                <xsl:if test='$varMillId=2'>
                  <xsl:if test='((dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_QMOS_TRANSACTION_TYPE_NAME_MAP.dvm", "TRANSACTION_TYPE_NAME", ../../ns8:TransactionType, "QMOS_BILLET", "" ) = "PRO" and (../../ns8:SubinventoryCode="TOLLING" and starts-with (../../ns8:Locator, "NN2.TOLL" )))
                                                     or ../../ns8:SubinventoryCode !="TOLLING")'>
                    <xsl:choose>
                      <xsl:when test='ns8:TrxLotQuantity and ns8:TrxLotQuantity &lt; 0 and dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_QMOS_TRANSACTION_TYPE_NAME_MAP.dvm", "TRANSACTION_TYPE_NAME", ../../ns8:TransactionType, "QMOS_BILLET", "" ) = "MOVEMENT"'/>
                      <xsl:otherwise>
                        <tns:ApiBilletTransExt>
                          <tns:id>
                            <xsl:value-of select='oraext:sequence-next-val ("SEQ_API_BILLET_TRANS_EXT_ID", "jdbc/nsneqmos2" )'/>
                          </tns:id>
                          <tns:receiptDate>
                            <xsl:value-of select="xp20:current-dateTime ( )"/>
                          </tns:receiptDate>
                          <tns:meltHeat>
                            <xsl:value-of select="ns8:PrimaryLot"/>
                          </tns:meltHeat>
                          <xsl:choose>
                            <!--<xsl:when test="../../ns8:TransactionType='Account alias recipt' and ../../ns8:TransactionReason='PRO'">
                        <tns:transactionType>PRO</tns:transactionType>
                      </xsl:when>
                      <xsl:when test="../../ns8:TransactionType='Account alias issue' and ../../ns8:TransactionReason='VOID'">
                        <tns:transactionType>VOID</tns:transactionType>
                      </xsl:when>
                      <xsl:when test="../../ns8:TransactionType='Account alias issue' and ../../ns8:TransactionReason='Return Scrap'">
                        <tns:transactionType>SCP</tns:transactionType>
                      </xsl:when>  -->
                            <xsl:when test="../../ns8:TransactionType='Account alias issue'">
                              <xsl:choose>
                               <xsl:when test="../../ns8:TransactionReason='VOID'">  
								
                                  <tns:transactionType>VOID</tns:transactionType>
                                </xsl:when>
                                <xsl:when test="../../ns8:TransactionReason='Return Scrap'">
                                  <tns:transactionType>SCP</tns:transactionType>
                                </xsl:when>
                               <!-- <xsl:otherwise>
                                  <tns:transactionType>SCP</tns:transactionType>
                                </xsl:otherwise>  -->
                              </xsl:choose>
                            </xsl:when>
                            <xsl:when test="../../ns8:TransactionType='MTL Status Change' and ns8:LotStatus='QC Hot Ship'">
                              <tns:transactionType>LOAD</tns:transactionType>
                            </xsl:when>
                            <xsl:otherwise>
                              <tns:transactionType>
                                <xsl:value-of select='dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_QMOS_TRANSACTION_TYPE_NAME_MAP.dvm", "TRANSACTION_TYPE_NAME", ../../ns8:TransactionType, "QMOS_BILLET", "" )'/>
                              </tns:transactionType>
                            </xsl:otherwise>
                          </xsl:choose>
                          <tns:billetCreateDate>
                            <xsl:value-of select="../../ns8:TransactionDate"/>
                          </tns:billetCreateDate>
                          <tns:poLine>
                            <xsl:value-of select="../../ns8:ListOfInvTrxSrcDetails/ns8:InvTrxSrcDetails/ns8:TrxSourceNumber"/>
                          </tns:poLine>
                          <tns:billetProductCode>
                            <xsl:value-of select="../../ns8:ItemNumber"/>
                          </tns:billetProductCode>
                          <tns:count>1</tns:count>
                          <xsl:choose>
                            <xsl:when test='xp20:compare (ns8:LotStatus, "Active" ) = 0'>
                              <tns:disposition>1</tns:disposition>
                            </xsl:when>
                            <xsl:otherwise>
                              <tns:disposition>2</tns:disposition>
                            </xsl:otherwise>
                          </xsl:choose>
                          <tns:location>
                            <xsl:value-of select="../../ns8:Locator"/>
                          </tns:location>
                          <xsl:choose>
                            <xsl:when test='xp20:compare (../../ns8:TransactionType, "Lot Status Change" ) = 0'>
                              <xsl:choose>
                                <xsl:when test='xp20:compare (ns8:LotStatus, "Active" ) = 0'>
                                  <tns:dispositionFrom>2</tns:dispositionFrom>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:if test='xp20:compare (ns8:LotStatus, "Pending" ) = 0'>
                                    <tns:dispositionFrom>1</tns:dispositionFrom>
                                  </xsl:if>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:when>
                          </xsl:choose>
                          <tns:userId>SOAUSER</tns:userId>
                          <tns:billetBatch>
                            <xsl:value-of select="ns8:LotNumber"/>
                          </tns:billetBatch>
                          <xsl:choose>
                            <xsl:when test="../../ns8:Attribute/ns8:ATTRIBUTE2 and ../../ns8:Attribute/ns8:ATTRIBUTE2 != ''">
                              <tns:crew>
                                <xsl:value-of select="../../ns8:Attribute/ns8:ATTRIBUTE2"/>
                              </tns:crew>
                            </xsl:when>
                            <xsl:otherwise>
                              <tns:crew>Z</tns:crew>
                            </xsl:otherwise>
                          </xsl:choose>
                          <xsl:choose>
                            <xsl:when test="../../ns8:Attribute/ns8:ATTRIBUTE1 and ../../ns8:Attribute/ns8:ATTRIBUTE1 != ''">
                              <tns:shift>
                                <xsl:value-of select="../../ns8:Attribute/ns8:ATTRIBUTE1"/>
                              </tns:shift>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:choose>
                                <xsl:when test="  (  (7 &lt;= xp20:hours-from-dateTime (../../ns8:TransactionDate )) and ( xp20:hours-from-dateTime (../../ns8:TransactionDate )     &lt;= 18)  )   ">
                                  <tns:shift>1</tns:shift>
                                </xsl:when>
                                <xsl:otherwise>
                                  <tns:shift>2</tns:shift>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:otherwise>
                          </xsl:choose>
                          <tns:apiBilletTransExtDtlsCollection>
                            <tns:ApiBilletTransExtDtls>
                              <tns:id>
                                <xsl:value-of select='oraext:sequence-next-val ("SEQ_BILLET_TRANS_EXT_DTLS_ID", "jdbc/nsneqmos2" )'/>
                              </tns:id>
                              <tns:billetId>
                                <xsl:value-of select="../../ns8:LPN"/>
                              </tns:billetId>
                              <tns:strand>
                                <xsl:value-of select="../../ns8:LPNAttribute/ns8:ATTRIBUTE1"/>
                              </tns:strand>
                              <tns:cut>
                                <xsl:value-of select="../../ns8:LPNAttribute/ns8:ATTRIBUTE2"/>
                              </tns:cut>
                            </tns:ApiBilletTransExtDtls>
                          </tns:apiBilletTransExtDtlsCollection>
                        </tns:ApiBilletTransExt>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:if>
                </xsl:if>
              </xsl:if>
              <!--/xsl:if-->
            </xsl:if>
          </xsl:for-each>
        </xsl:if>
      </xsl:for-each>
    </tns:ApiBilletTransExtCollection>
  </xsl:template>
</xsl:stylesheet>