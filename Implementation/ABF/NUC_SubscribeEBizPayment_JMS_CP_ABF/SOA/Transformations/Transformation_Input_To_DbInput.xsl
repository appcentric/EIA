<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:ns0="http://xmlns.eia.com/AO/EBiz/P2P/PaymentAM/1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/db/top/DbInsert_Operation_OMSI"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns0 tns oraxsl xp20 xref mhdr oraext dvm socket"
                xmlns:ns6="http://xmlns.eia.com/AO/EBiz/common/UomAO/1.0"
                xmlns:ns7="http://xmlns.eia.com/AO/EBiz/P2P/ReceiptAO/1.0"
                xmlns:ns8="http://xmlns.eia.com/AO/EBiz/P2P/PaymentAO/1.0"
                xmlns:ns11="http://xmlns.eia.com/AO/EBiz/common/WhoAO/1.0" xmlns:pc="http://xmlns.oracle.com/pcbpel/"
                xmlns:ns15="http://xmlns.eia.com/AO/EBiz/common/ItemAO/1.0"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns22="http://xmlns.eia.com/AO/EBiz/common/CategoryAO/1.0"
                xmlns:ns3="http://xmlns.eia.com/AO/EBiz/common/OperationResultAO/1.0"
                xmlns:ns4="http://xmlns.eia.com/AO/EBiz/P2P/OrganizationAO/1.0"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/jms/DV1Application/NUC_SubscribeEBizPayment_JMS_CP_ABF/JMSConsumePayment"
                xmlns:ns5="http://xmlns.eia.com/EO/common/Common/1.0"
                xmlns:ns2="http://schemas.oracle.com/service/bpel/common"
                xmlns:ns10="http://xmlns.eia.com/AO/EBiz/P2P/InvoiceAO/1.0"
                xmlns:ns9="http://xmlns.eia.com/EO/Standard/External/ISO/Country/3166-1/2006/Country"
                xmlns:ns12="http://xmlns.eia.com/AO/EBiz/common/AmountAO/1.0"
                xmlns:ns14="http://xmlns.eia.com/AO/EBiz/common/AppsContextAO/1.0"
                xmlns:ns13="http://xmlns.eia.com/EO/common/Header/1.0"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ns18="http://xmlns.eia.com/AO/EBiz/common/CommonAO/1.0"
                xmlns:ns17="http://xmlns.eia.com/AO/EBiz/P2P/SupplierSiteAO/1.0"
                xmlns:ns16="http://xmlns.eia.com/AO/EBiz/P2P/SupplierAO/1.0"
                xmlns:ns20="http://xmlns.eia.com/AO/EBiz/P2P/PurchaseOrderAO/1.0"
                xmlns:ns19="http://xmlns.eia.com/EO/Standard/External/ISO/Language/639-3/2007/Language"
                xmlns:ns21="http://xmlns.eia.com/EO/Standard/External/ISO/Currency/4217/2001/Currency"
                xmlns:ns23="http://xmlns.oracle.com/pcbpel/adapter/db/DV1Application/NUC_SubscribeEBizPayment_JMS_CP_ABF/DbInsert_Operation_OMSI">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/JMSConsumePayment.wsdl"/>
        <oracle-xsl-mapper:rootElement name="QueryListOfPaymentResponseMessage"
                                       namespace="http://xmlns.eia.com/AO/EBiz/P2P/PaymentAM/1.0"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/DbInsert_Operation_OMSI.wsdl"/>
        <oracle-xsl-mapper:rootElement name="OperationCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/DbInsert_Operation_OMSI"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [TUE JAN 17 16:05:08 IST 2017].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:OperationCollection>
      <xsl:variable name="varOrgName"
                    select="oraext:query-database (concat (&quot;SELECT flv.lookup_code FROM hr_organization_units_v houv, fnd_lookup_values flv WHERE houv.organization_id = &quot;, /ns0:QueryListOfPaymentResponseMessage/ns0:Payment/ns0:Payment/ns8:Orgid, &quot; AND flv.lookup_type = 'XXNUC_CP_DIVISION_LOCATION' AND flv.meaning = houv.location_code AND flv.enabled_flag = 'Y' AND ROWNUM &lt;= 1 &quot; ), false ( ), false ( ), &quot;jdbc/ebsapps&quot; )"/>
      <xsl:for-each select="/ns0:QueryListOfPaymentResponseMessage/ns0:Payment/ns0:ListOfInvoices/ns10:Invoice[ns10:Source = 'CARRIERPOINT']">
        <xsl:choose>
          <xsl:when test="/ns0:QueryListOfPaymentResponseMessage/ns0:Payment/ns0:Payment/ns8:Paymentstatus = 'VOID'">
            <xsl:if test="number(ns10:AmountPaid) &lt; 0.0">
              <tns:Operation>
                <tns:operation>5800</tns:operation>
                <tns:isReady>1</tns:isReady>
                <tns:isRead>0</tns:isRead>
                <tns:creationTimestamp>
                  <xsl:value-of select="xp20:current-dateTime ( )"/>
                </tns:creationTimestamp>
                <tns:freightPaymentCollection>
                  <tns:FreightPayment>
                    <tns:clientKey1>
                      <xsl:value-of select="$varOrgName"/>
                    </tns:clientKey1>
                    <!--tns:clientKey1>
                                            <xsl:value-of select="oraext:query-database(concat(&quot;SELECT houv.location_code retvalue FROM apps.wsh_trip_deliveries_v wtd, apps.hr_organization_units_v houv WHERE wtd.organization_id = houv.organization_id AND ROWNUM &lt;= 1 AND wtd.trip_id = '&quot;,ns10:HeaderDFF/ns18:Attribute3,&quot;'&quot;),false(),false(),&quot;jdbc/ebsapps&quot;)"/>
                                        </tns:clientKey1-->
                    <xsl:if test="ns10:HeaderDFF/ns18:Attribute3">
                      <tns:clientKey2>
                        <xsl:value-of select="ns10:HeaderDFF/ns18:Attribute3"/>
                      </tns:clientKey2>
                    </xsl:if>
                    <xsl:if test="ns10:HeaderDFF/ns18:Attribute15">
                      <tns:clientKey3>
                        <xsl:value-of select="ns10:HeaderDFF/ns18:Attribute15"/>
                        <!--xsl:value-of select="oraext:query-database(concat(&quot;select name retvalue from APPS.wsh_trips where rownum &lt;= 1 and trip_id = '&quot;,ns10:HeaderDFF/ns18:Attribute3,&quot;'&quot;),false(),false(),&quot;jdbc/ebsapps&quot;)"/-->
                      </tns:clientKey3>
                    </xsl:if>
                    <tns:clientKey4>EBS</tns:clientKey4>
                    <tns:payOnDate>
                      <xsl:value-of select="/ns0:QueryListOfPaymentResponseMessage/ns0:Payment/ns0:Payment/ns8:BasicPayment/ns8:PaymentDate"/>
                    </tns:payOnDate>
                    <xsl:choose>
                      <xsl:when test='/ns0:QueryListOfPaymentResponseMessage/ns0:Payment/ns0:Payment/ns8:BasicPayment/ns8:PaymentMethodCode = "CHECK"'>
                        <tns:payMethod>100</tns:payMethod>
                      </xsl:when>
                      <xsl:otherwise>
                        <tns:payMethod>200</tns:payMethod>
                      </xsl:otherwise>
                    </xsl:choose>
                    <tns:remittanceBatch>
                      <xsl:value-of select="/ns0:QueryListOfPaymentResponseMessage/ns0:Payment/ns0:Payment/ns8:BasicPayment/ns8:PaperDocumentNumber"/>
                    </tns:remittanceBatch>
                    <tns:paymentReference/>
                    <tns:invoiceReference>
                      <xsl:value-of select="ns10:BasicInvoice/ns10:InvoiceNumber"/>
                    </tns:invoiceReference>
                    <xsl:if test="ns10:AmountPaid">
                      <tns:amount>
                        <xsl:value-of select="ns10:AmountPaid"/>
                      </tns:amount>
                    </xsl:if>
                  </tns:FreightPayment>
                </tns:freightPaymentCollection>
              </tns:Operation>
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <tns:Operation>
              <tns:operation>5800</tns:operation>
              <tns:isReady>1</tns:isReady>
              <tns:isRead>0</tns:isRead>
              <tns:creationTimestamp>
                <xsl:value-of select="xp20:current-dateTime ( )"/>
              </tns:creationTimestamp>
              <tns:freightPaymentCollection>
                <tns:FreightPayment>
                  <tns:clientKey1>
                    <xsl:value-of select="$varOrgName"/>
                  </tns:clientKey1>
                  <!--tns:clientKey1>
                                            <xsl:value-of select="oraext:query-database (concat (&quot;SELECT flv.lookup_code FROM wsh_trip_deliveries_v wtd,hr_organization_units_v houv,fnd_lookup_values flv WHERE wtd.organization_id = houv.organization_id AND flv.lookup_type = 'XXNUC_CP_DIVISION_LOCATION' AND flv.meaning = houv.location_code AND flv.enabled_flag = 'Y' AND ROWNUM &lt;= 1 AND wtd.trip_id = TO_NUMBER (TRIM ('&quot;, ns10:HeaderDFF/ns18:Attribute3, &quot;'))&quot; ), false ( ), false ( ), &quot;jdbc/ebsapps&quot; )"/>
                                        </tns:clientKey1-->
                  <xsl:if test="ns10:HeaderDFF/ns18:Attribute3">
                    <tns:clientKey2>
                      <xsl:value-of select="ns10:HeaderDFF/ns18:Attribute3"/>
                    </tns:clientKey2>
                  </xsl:if>
                  <xsl:if test="ns10:HeaderDFF/ns18:Attribute15">
                    <tns:clientKey3>
                      <xsl:value-of select="ns10:HeaderDFF/ns18:Attribute15"/>
                    </tns:clientKey3>
                  </xsl:if>
                  <tns:clientKey4>EBS</tns:clientKey4>
                  <tns:payOnDate>
                    <xsl:value-of select="/ns0:QueryListOfPaymentResponseMessage/ns0:Payment/ns0:Payment/ns8:BasicPayment/ns8:PaymentDate"/>
                  </tns:payOnDate>
                  <xsl:choose>
                    <xsl:when test='/ns0:QueryListOfPaymentResponseMessage/ns0:Payment/ns0:Payment/ns8:BasicPayment/ns8:PaymentMethodCode = "CHECK"'>
                      <tns:payMethod>100</tns:payMethod>
                    </xsl:when>
                    <xsl:otherwise>
                      <tns:payMethod>200</tns:payMethod>
                    </xsl:otherwise>
                  </xsl:choose>
                  <tns:remittanceBatch>
                    <xsl:value-of select="/ns0:QueryListOfPaymentResponseMessage/ns0:Payment/ns0:Payment/ns8:BasicPayment/ns8:PaperDocumentNumber"/>
                  </tns:remittanceBatch>
                  <tns:paymentReference/>
                  <tns:invoiceReference>
                    <xsl:value-of select="ns10:BasicInvoice/ns10:InvoiceNumber"/>
                  </tns:invoiceReference>
                  <xsl:if test="ns10:AmountPaid">
                    <tns:amount>
                      <xsl:value-of select="ns10:AmountPaid"/>
                    </tns:amount>
                  </xsl:if>
                </tns:FreightPayment>
              </tns:freightPaymentCollection>
            </tns:Operation>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </tns:OperationCollection>
  </xsl:template>
</xsl:stylesheet>
