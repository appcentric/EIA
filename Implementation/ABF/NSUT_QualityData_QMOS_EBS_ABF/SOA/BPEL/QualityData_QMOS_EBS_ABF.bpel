<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Aug 23 12:55:37 PDT 2017
  Author:  nirav.sanghavi
  Type: BPEL 2.0 Process
  Purpose: One Way BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="QualityData_QMOS_EBS_ABF"
               targetNamespace="http://xmlns.eia.com/ABF/NSUT_QualityData_QMOS_EBS_ABF/QualityData_QMOS_EBS_ABF"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.eia.com/ABF/NSUT_QualityData_QMOS_EBS_ABF/QualityData_QMOS_EBS_ABF"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:ui="http://xmlns.oracle.com/soa/designer"
               xmlns:eia="http://xmlns.eia.com/extensions/1.0"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/DV1_Application/NSUT_QualityData_QMOS_EBS_ABF/DB_Select_API_MET_TRANS"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Select_API_MET_TRANS"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/db/DV1_Application/NSUT_QualityData_QMOS_EBS_ABF/DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/db/sp/DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG"
         xmlns:ns5="http://xmlns.oracle.com/pcbpel/adapter/db/DV1_Application/NSUT_QualityData_QMOS_EBS_ABF/DB_Update_API_MET_TRANS"
         xmlns:ns6="http://schemas.oracle.com/service/bpel/common" xmlns:ns7="http://xmlns.eia.com/CommonLogging"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns8="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Update_API_MET_TRANS">
  <import namespace="http://schemas.oracle.com/service/bpel/common"
          location="oramds:/apps/EIAMetadata/EO/common/V1.0/XSLParameters.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>
  <import ui:processWSDL="true" namespace="http://xmlns.eia.com/ABF/NSUT_QualityData_QMOS_EBS_ABF/QualityData_QMOS_EBS_ABF" location="../WSDLs/QualityData_QMOS_EBS_ABF.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="qualitydata_qmos_ebs_abf_client" partnerLinkType="client:QualityData_QMOS_EBS_ABF" myRole="QualityData_QMOS_EBS_ABFProvider"/>
    <partnerLink name="DB_Select_API_MET_TRANS" partnerLinkType="ns1:DB_Select_API_MET_TRANS_plt"
                 partnerRole="DB_Select_API_MET_TRANS_role"/>
    <partnerLink name="DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG" partnerLinkType="ns3:DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_plt"
                 partnerRole="DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_role"/>
    <partnerLink name="DB_Update_API_MET_TRANS" partnerLinkType="ns5:DB_Update_API_MET_TRANS_plt"
                 partnerRole="DB_Update_API_MET_TRANS_role"/>
    <partnerLink name="CommonLogging_PL" partnerLinkType="ns7:CommonLogging" partnerRole="CommonLoggingProvider"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:QualityData_QMOS_EBS_ABFRequestMessage"/>
    <variable name="Invoke_DB_Select_API_MET_TRANSSelect_Input"
              messageType="ns1:DB_Select_API_MET_TRANSSelect_inputParameters"/>
    <variable name="Invoke_DB_Select_API_MET_TRANSSelect_Output" messageType="ns1:ApiMetTransCollection_msg"/>
    <variable name="Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Input" messageType="ns3:args_in_msg"/>
    <variable name="Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Output" messageType="ns3:args_out_msg"/>
    <variable name="Invoke_DB_Update_API_MET_TRANS_update_Input" messageType="ns5:ApiMetTransCollection_msg"/>
    <variable name="Invoke_CommonLogging_PL_process_Input" messageType="ns7:CommonLoggingRequestMessage"/>
    <variable name="setTitleVar" type="xsd:string"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence3">
        <scope name="Scope2">
          <variables>
            <variable name="tmp_NVPair_Error" element="ns6:parameters"/>
          </variables>
          <faultHandlers>
            <catchAll>
              <empty name="DoNothing"/>
            </catchAll>
          </faultHandlers>
          <sequence>
            <assign name="Assign_CommonLogging_Error">
              <copy>
                <from>'FaultString'</from>
                <to>$tmp_NVPair_Error/ns6:item/ns6:name</to>
              </copy>
              <copy>
                <from>ora:getFaultAsString()</from>
                <to>$tmp_NVPair_Error/ns6:item/ns6:value</to>
              </copy>
              <copy>
                <from>4</from>
                <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:LogType</to>
              </copy>
              <copy>
                <from>''</from>
                <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageCode</to>
              </copy>
              <copy>
                <from>$tmp_NVPair_Error/ns6:item/ns6:value</from>
                <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageDescription</to>
              </copy>
              <copy>
                <from>2</from>
                <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:TransactionStatus</to>
              </copy>
            </assign>
            <assign name="Xform_UpdateMetTrans_Error_CatchAll">
              <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
              </bpelx:annotation>
              <copy>
                <from>ora:doXSLTransformForDoc("../Transformations/Xform_UpdateMetTrans_Error_CatchAll.xsl", $Invoke_DB_Select_API_MET_TRANSSelect_Output.ApiMetTransCollection, "tmp_NVPair_Error", $tmp_NVPair_Error)</from>
                <to variable="Invoke_DB_Update_API_MET_TRANS_update_Input" part="ApiMetTransCollection"/>
              </copy>
            </assign>
            <invoke name="Invoke_DB_Update_API_MET_TRANS_CatchAll" bpelx:invokeAsDetail="no"
                    partnerLink="DB_Update_API_MET_TRANS" portType="ns5:DB_Update_API_MET_TRANS_ptt" operation="update"
                    inputVariable="Invoke_DB_Update_API_MET_TRANS_update_Input"/>
            <invoke name="Invoke_CommonLogging_PL" partnerLink="CommonLogging_PL"
                    portType="ns7:CommonLogging" operation="process"
                    inputVariable="Invoke_CommonLogging_PL_process_Input" bpelx:invokeAsDetail="no">
              <bpelx:toProperties>
                <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
              </bpelx:toProperties>
            </invoke>
          </sequence>
        </scope>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in QualityData_QMOS_EBS_ABF.wsdl) -->
    <receive name="receiveInput" partnerLink="qualitydata_qmos_ebs_abf_client" portType="client:QualityData_QMOS_EBS_ABF" operation="process" variable="inputVariable" createInstance="yes"/>
    <scope name="CommonLogging_Start">
      <faultHandlers>
        <catchAll>
          <empty name="DoNothing"/>
        </catchAll>
      </faultHandlers>
      <sequence name="Sequence4">
        <assign name="Assign_StartLogging">
          <copy>
            <from>ora:getComponentInstanceId()</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:TransactionId</to>
          </copy>
          <copy>
            <from>'NextGen'</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:ProjectName</to>
          </copy>
          <copy>
            <from>'I112'</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:ComponentId</to>
          </copy>
          <copy>
            <from>'QualityResults'</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:TransactionName</to>
          </copy>
          <copy>
            <from>ora:getCompositeName()</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:ProcessName</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:LoggingSystem</to>
          </copy>
          <copy>
            <from>21</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:SourceSystem</to>
          </copy>
          <copy>
            <from>2</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:TargetSystem</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:LogType</to>
          </copy>
          <copy>
            <from>'BMG-003'</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageCode</to>
          </copy>
          <copy>
            <from>''</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageDescription</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:TransactionStatus</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:CreatedBy</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:UpdatedBy</to>
          </copy>
          <copy>
            <from>oraext:setFlowInstanceTitle(string($Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:TransactionId))</from>
            <to>$setTitleVar</to>
          </copy>
        </assign>
        <invoke name="Invoke_CommonLogging_PL" partnerLink="CommonLogging_PL"
                portType="ns7:CommonLogging" operation="process" inputVariable="Invoke_CommonLogging_PL_process_Input"
                bpelx:invokeAsDetail="no">
          <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
      </sequence>
    </scope>
    <assign name="Assign_RowNum">
      <copy>
        <from>number(ora:getPreference("rowNumValue"))</from>
        <to>$Invoke_DB_Select_API_MET_TRANSSelect_Input.DB_Select_API_MET_TRANSSelect_inputParameters/ns2:rowNum</to>
      </copy>
    </assign>
    <invoke name="Invoke_DB_Select_API_MET_TRANS" bpelx:invokeAsDetail="no" partnerLink="DB_Select_API_MET_TRANS"
            portType="ns1:DB_Select_API_MET_TRANS_ptt" operation="DB_Select_API_MET_TRANSSelect"
            inputVariable="Invoke_DB_Select_API_MET_TRANSSelect_Input"
            outputVariable="Invoke_DB_Select_API_MET_TRANSSelect_Output"/>
    <if name="IfData_Found">
      <documentation>
        <![CDATA[Yes]]>
      </documentation>
      <condition>count($Invoke_DB_Select_API_MET_TRANSSelect_Output.ApiMetTransCollection/ns2:ApiMetTrans) &gt; 0</condition>
      <sequence name="Sequence1">
        <assign name="Xform_UpdateMetTrans_Read">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from>ora:doXSLTransformForDoc("../Transformations/Xform_UpdateMetTrans_Read.xsl", $Invoke_DB_Select_API_MET_TRANSSelect_Output.ApiMetTransCollection)</from>
            <to variable="Invoke_DB_Update_API_MET_TRANS_update_Input" part="ApiMetTransCollection"/>
          </copy>
        </assign>
        <invoke name="Invoke_DB_Update_API_MET_TRANS" bpelx:invokeAsDetail="no" partnerLink="DB_Update_API_MET_TRANS"
                portType="ns5:DB_Update_API_MET_TRANS_ptt" operation="update"
                inputVariable="Invoke_DB_Update_API_MET_TRANS_update_Input"/>
        <assign name="Xform_APImetTrans_To_DbProcInput">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from>ora:doXSLTransformForDoc("../Transformations/Xform_APImetTrans_To_DbProcInput.xsl", $Invoke_DB_Select_API_MET_TRANSSelect_Output.ApiMetTransCollection)</from>
            <to variable="Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Input" part="InputParameters"/>
          </copy>
        </assign>
        <invoke name="Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG"
                partnerLink="DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG" portType="ns3:DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_ptt"
                operation="DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG"
                inputVariable="Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Input"
                outputVariable="Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Output" bpelx:invokeAsDetail="no"/>
        <if name="IfDBResponse">
          <documentation>
            <![CDATA[Success]]>
          </documentation>
          <condition>$Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Output.OutputParameters/ns4:P_O_PROCESS_FLAG = 'S'</condition>
          <sequence name="Sequence2">
            <assign name="Xform_DbProcOutput_To_APIMetTransStatusUpdate">
              <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
              </bpelx:annotation>
              <copy>
                <from>ora:doXSLTransformForDoc("../Transformations/Xform_DbProcOutput_To_APIMetTransStatusUpdate.xsl", $Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Output.OutputParameters)</from>
                <to variable="Invoke_DB_Update_API_MET_TRANS_update_Input" part="ApiMetTransCollection"/>
              </copy>
            </assign>
            <forEach parallel="no" counterName="apiMetTransCount" name="ForEachAPIMetTrans">
              <startCounterValue>1</startCounterValue>
              <finalCounterValue>count($Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Output.OutputParameters/ns4:P_MET_TRANS_TBL/ns4:P_MET_TRANS_TBL_ITEM)</finalCounterValue>
              <scope name="Scope1">
                <faultHandlers>
                  <catchAll>
                    <empty name="DoNothing"/>
                  </catchAll>
                </faultHandlers>
                <sequence>
                  <if name="IfResponse">
                    <documentation>
                      <![CDATA[Success]]>
                    </documentation>
                    <condition>$Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Output.OutputParameters/ns4:P_MET_TRANS_TBL/ns4:P_MET_TRANS_TBL_ITEM[$apiMetTransCount]/ns4:PROCESSED = 'S'</condition>
                    <assign name="Assign_SuccessLogType">
                      <copy>
                        <from>1</from>
                        <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:LogType</to>
                      </copy>
                    </assign>
                    <else>
                      <documentation>
                        <![CDATA[Error]]>
                      </documentation>
                      <assign name="Assign_ErrorLogtype">
                        <copy>
                          <from>4</from>
                          <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:LogType</to>
                        </copy>
                      </assign>
                    </else>
                  </if>
                  <assign name="Assign_Logging_Response">
                    <copy>
                      <from>''</from>
                      <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageCode</to>
                    </copy>
                    <copy>
                      <from>$Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Output.OutputParameters/ns4:P_MET_TRANS_TBL/ns4:P_MET_TRANS_TBL_ITEM[$apiMetTransCount]/ns4:ERROR_MESSAGE</from>
                      <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageDescription</to>
                    </copy>
                    <copy>
                      <from>1</from>
                      <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:TransactionStatus</to>
                    </copy>
                  </assign>
                  <invoke name="Invoke_CommonLogging_PL" partnerLink="CommonLogging_PL"
                          portType="ns7:CommonLogging" operation="process"
                          inputVariable="Invoke_CommonLogging_PL_process_Input" bpelx:invokeAsDetail="no">
                    <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
                    <bpelx:toProperties>
                      <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
                    </bpelx:toProperties>
                  </invoke>
                </sequence>
              </scope>
            </forEach>
          </sequence>
          <else>
            <documentation>
              <![CDATA[Error]]>
            </documentation>
            <sequence name="Sequence6">
              <assign name="Xform_DbProcOutput_To_APIMetTransStatusUpdateError">
                <bpelx:annotation>
                  <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                </bpelx:annotation>
                <copy>
                  <from>ora:doXSLTransformForDoc("../Transformations/Xform_DbProcOutput_To_APIMetTransStatusUpdateError.xsl", $Invoke_DB_Select_API_MET_TRANSSelect_Output.ApiMetTransCollection, "Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Output.OutputParameters", $Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Output.OutputParameters)</from>
                  <to variable="Invoke_DB_Update_API_MET_TRANS_update_Input" part="ApiMetTransCollection"/>
                </copy>
              </assign>
              <scope name="Scope_CommonLoggingDbResponseError">
                <faultHandlers>
                  <catchAll>
                    <empty name="DoNothing"/>
                  </catchAll>
                </faultHandlers>
                <sequence>
                  <assign name="Assign_Logging_DbError">
                    <copy>
                      <from>4</from>
                      <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:LogType</to>
                    </copy>
                    <copy>
                      <from>''</from>
                      <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageCode</to>
                    </copy>
                    <copy>
                      <from>$Invoke_DB_Call_XXNUC_GMD_QMOS_QRSLT_PKG_Output.OutputParameters/ns4:P_O_ERR_MSG</from>
                      <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageDescription</to>
                    </copy>
                    <copy>
                      <from>1</from>
                      <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:TransactionStatus</to>
                    </copy>
                  </assign>
                  <invoke name="Invoke_CommonLogging_PL" partnerLink="CommonLogging_PL" portType="ns7:CommonLogging"
                          operation="process" inputVariable="Invoke_CommonLogging_PL_process_Input"
                          bpelx:invokeAsDetail="no">
                    <bpelx:toProperties>
                      <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
                    </bpelx:toProperties>
                  </invoke>
                </sequence>
              </scope>
            </sequence>
          </else>
        </if>
        <invoke name="Invoke_DB_Update_API_MET_TRANS_Status" bpelx:invokeAsDetail="no"
                partnerLink="DB_Update_API_MET_TRANS" portType="ns5:DB_Update_API_MET_TRANS_ptt" operation="update"
                inputVariable="Invoke_DB_Update_API_MET_TRANS_update_Input"/>
      </sequence>
      <else>
        <documentation>
          <![CDATA[No]]>
        </documentation>
        <sequence name="Sequence7">
          <scope name="Scope_Logging_NoDataFound">
            <sequence name="Sequence8">
              <assign name="Assign_Logging_NoData">
                <copy>
                  <from>1</from>
                  <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:LogType</to>
                </copy>
                <copy>
                  <from>'BMG-177'</from>
                  <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageCode</to>
                </copy>
                <copy>
                  <from>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:TransactionId</from>
                  <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageDescription</to>
                </copy>
                <copy>
                  <from>1</from>
                  <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:TransactionStatus</to>
                </copy>
              </assign>
              <invoke name="Invoke_CommonLogging_PL" partnerLink="CommonLogging_PL"
                      portType="ns7:CommonLogging" operation="process"
                      inputVariable="Invoke_CommonLogging_PL_process_Input" bpelx:invokeAsDetail="no">
                <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
                <bpelx:toProperties>
                  <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
                </bpelx:toProperties>
              </invoke>
            </sequence>
          </scope>
        </sequence>
      </else>
    </if>
    <scope name="Scope_EndLogging">
      <faultHandlers>
        <catchAll>
          <empty name="DoNothing"/>
        </catchAll>
      </faultHandlers>
      <sequence name="Sequence5">
        <assign name="Assign_EndLogging">
          <copy>
            <from>1</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:LogType</to>
          </copy>
          <copy>
            <from>'BMG-002'</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageCode</to>
          </copy>
          <copy>
            <from>''</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:MessageDescription</to>
          </copy>
          <copy>
            <from>2</from>
            <to>$Invoke_CommonLogging_PL_process_Input.CommonLogging/ns7:TransactionStatus</to>
          </copy>
        </assign>
        <invoke name="Invoke_CommonLogging_PL" partnerLink="CommonLogging_PL" portType="ns7:CommonLogging"
                operation="process" inputVariable="Invoke_CommonLogging_PL_process_Input" bpelx:invokeAsDetail="no">
          <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
      </sequence>
    </scope>
  </sequence>
</process>