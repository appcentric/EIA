<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:ns1="http://schemas.oracle.com/service/bpel/common"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:ns2="http://xmlns.eia.com/AM/EBiz/P2P/LotAM/1.0" xmlns:ns0="http://www.example.org"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns1 ns2 ns0 oraxsl xp20 xref mhdr oraext dvm socket"
                xmlns:ns3="http://xmlns.eia.com/ABS/EBiz/PurchaseOrderABS/1.0"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/ftp/109/NUC_ASNQualityResults_Suppliers_Ross_ABF/FTP_ReadASNSupplier_Ross"
                xmlns:pc="http://xmlns.oracle.com/pcbpel/"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns11="http://xmlns.eia.com/AO/EBiz/P2P/LotAO/1.0"
                xmlns:ns4="http:/xmlns.eia.com/Implementation/ABS/NUC_EBizLot_ABS/EBizLotABS/1.0"
                xmlns:core="http://xmlns.eia.com/EO/Common/1.0" xmlns:ns5="http://xmlns.eia.com/EO/common/Common/1.0"
                xmlns:ns7="http://xmlns.eia.com/EO/Standard/External/ISO/Country/3166-1/2006/Country"
                xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
                xmlns:ns9="http://xmlns.eia.com/EO/common/Header/1.0"
                xmlns:ns8="http://xmlns.eia.com/AO/EBiz/common/AppsContextAO/1.0"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ns6="http://xmlns.eia.com/EO/Standard/External/ISO/Language/639-3/2007/Language"
                xmlns:ns10="http://xmlns.eia.com/EO/Standard/External/ISO/Currency/4217/2001/Currency"
                xmlns:ns12="http://xmlns.eia.com/AO/EBiz/P2P/LpnAO/1.0"
                xmlns:client="http:/xmlns.eia.com/Implementation/ABS/NUC_EBizLPN_ABS/EBizLPNABS/1.0"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:ns="http://xmlns.eia.com/ABS/EBiz/ReceiptABS/1.0"
                xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop"
                xmlns:ns13="http://xmlns.eia.com/EDN/1.0/Event"
                xmlns:cor="http:/xmlns.eia.com/Implementation/ABF/NSNE_ASNQualityResults_Suppliers_Ross_ABF/ASNQualityResults_Suppliers/1.0/correlationset">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/FTP_ReadASNSupplier_Ross.wsdl"/>
        <oracle-xsl-mapper:rootElement name="Envelope" namespace="http://www.example.org"/>
      </oracle-xsl-mapper:source>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/FTP_ReadASNSupplier_Ross.wsdl"/>
        <oracle-xsl-mapper:rootElement name="parameters" namespace="http://schemas.oracle.com/service/bpel/common"/>
        <oracle-xsl-mapper:param name="g_derivedToOrgId_Lines"/>
      </oracle-xsl-mapper:source>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="oramds:/apps/EIAMetadata/ABS/EBiz/V1.0/P2P/LotABS.wsdl"/>
        <oracle-xsl-mapper:rootElement name="CreateLotResp" namespace="http://xmlns.eia.com/AM/EBiz/P2P/LotAM/1.0"/>
        <oracle-xsl-mapper:param name="g_CreateLotABSResp_OutputVar.payload"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="oramds:/apps/EIAMetadata/ABS/EBiz/V1.0/P2P/LpnABS.wsdl"/>
        <oracle-xsl-mapper:rootElement name="CreateLpnRequest" namespace="http://xmlns.eia.com/AM/EBiz/P2P/LotAM/1.0"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [TUE AUG 23 05:48:51 PDT 2016].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="g_derivedToOrgId_Lines"/>
  <xsl:param name="g_CreateLotABSResp_OutputVar.payload"/>
  <xsl:template match="/">
    <ns2:CreateLpnRequest>
      <ns9:HeaderRq>
        <ns9:TransactionRequestID></ns9:TransactionRequestID>
        <ns9:Language></ns9:Language>
        <ns9:ComponentID></ns9:ComponentID>
        <ns9:ServiceName></ns9:ServiceName>
        <ns9:TransactionIDREF></ns9:TransactionIDREF>
        <ns9:TransactionName></ns9:TransactionName>
        <ns9:Source></ns9:Source>
        <ns9:Target></ns9:Target>
        <ns9:MillName></ns9:MillName>
      </ns9:HeaderRq>
      <ns2:AppsContext>
        <ns8:UserName>'SOAUSER'</ns8:UserName>
        <!--<ns14:UserId>2385</ns14:UserId>-->
        <ns8:ResponsibilityName>NSNE PO Superuser</ns8:ResponsibilityName>
        <ns8:OrgId>88</ns8:OrgId>
      </ns2:AppsContext>
      <ns12:CreateLpnReq>
        <ns12:TransactionID></ns12:TransactionID>
        <ns12:LpnDetails>
          <xsl:for-each select="/Envelope/Waybills/Waybill/WaybillLines/WaybillLine">
            <xsl:variable name="posVar">
              <xsl:value-of select="position()"/>
            </xsl:variable>
            <xsl:variable name="lastIndexE" select="oraext:last-index-within-string (CustPO,'-')"></xsl:variable>
            <xsl:variable name="lastIndexEHifen">
              <xsl:value-of select="number($lastIndexE)+ 2"/>
            </xsl:variable>
            <xsl:variable name="custPOTagLen" select="string-length (CustPO)"></xsl:variable>
            <xsl:variable name="CustPO">
              <xsl:value-of select="substring(CustPO,1,$lastIndexE)"/>
            </xsl:variable>
            <xsl:variable name="LineNumber">
              <xsl:value-of select="substring(CustPO,$lastIndexEHifen,$custPOTagLen)"/>
            </xsl:variable>
            <xsl:variable name="orgId">
              <xsl:value-of select="$g_derivedToOrgId_Lines/ns1:parameters/ns1:item[(ns1:name = $CustPO) and (ns1:msg = $LineNumber)]/ns1:value"/>
            </xsl:variable>
            <xsl:for-each select="Bundles/Bundle">
              <xsl:variable name="currentHeatNum" select="HeatNum"></xsl:variable>
              <xsl:variable name="statusForCurrentHeat"
                            select="$g_CreateLotABSResp_OutputVar.payload/ns2:CreateLotResp/ns11:CreateLotResp/ns11:LotStatus/ns11:LotStatusItem[(ns11:HEAT_NUMBER = $currentHeatNum) and ($currentHeatNum != ns11:LOT_NUMBER)]/ns11:STATUS"></xsl:variable>
              <xsl:if test="$statusForCurrentHeat != 'Error'">
                <ns12:P_I_LPN_ITEM>
                  <ns12:ORGANIZATION_ID>
                    <xsl:value-of select="$orgId"/>
                  </ns12:ORGANIZATION_ID>
                  <ns12:BUNDLE_NUM>
                    <xsl:value-of select="BundleNum"/>
                  </ns12:BUNDLE_NUM>
                  <ns12:LOT_NUMBER>
                    <xsl:value-of select="$g_CreateLotABSResp_OutputVar.payload/ns2:CreateLotResp/ns11:CreateLotResp/ns11:LotStatus/ns11:LotStatusItem[(ns11:HEAT_NUMBER = $currentHeatNum) and ($currentHeatNum != ns11:LOT_NUMBER)]/ns11:LOT_NUMBER"/>
                  </ns12:LOT_NUMBER>
                </ns12:P_I_LPN_ITEM>
              </xsl:if>
            </xsl:for-each>
          </xsl:for-each>
        </ns12:LpnDetails>
      </ns12:CreateLpnReq>
    </ns2:CreateLpnRequest>
  </xsl:template>
</xsl:stylesheet>
