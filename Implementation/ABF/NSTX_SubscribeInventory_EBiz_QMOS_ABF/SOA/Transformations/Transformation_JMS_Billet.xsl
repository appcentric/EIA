<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:ns0="http://xmlns.eia.com/AO/Ebiz/D2S/InventoryTransactionAM/1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Insert_BILLET"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                exclude-result-prefixes="xsi oracle-xsl-mapper xsl xsd ns0 tns xp20 oraxsl mhdr oraext dvm xref socket"
                xmlns:ns2="http://xmlns.eia.com/EO/common/Common/1.0"
                xmlns:ns4="http://xmlns.eia.com/EO/Standard/External/ISO/Country/3166-1/2006/Country"
                xmlns:pc="http://xmlns.oracle.com/pcbpel/" xmlns:ns6="http://xmlns.eia.com/EO/common/Header/1.0"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ns7="http://xmlns.eia.com/AO/Ebiz/D2S/InventoryTransactionAO/1.0"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:ns3="http://xmlns.eia.com/EO/Standard/External/ISO/Language/639-3/2007/Language"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/jms/Manish/NSUT_SubscribeInventory_EBiz_QMOS_ABF/JMS_DEQ_NextGenDistributedTopic"
                xmlns:ns5="http://xmlns.eia.com/EO/Standard/External/ISO/Currency/4217/2001/Currency"
                xmlns:ns8="http://xmlns.oracle.com/pcbpel/adapter/db/Manish/NSUT_SubscribeInventory_EBiz_QMOS_ABF/DB_Insert_BILLET">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/JMS_DEQ_NextGenDistributedTopic.wsdl"/>
        <oracle-xsl-mapper:rootElement name="InventoryTransactionAddRq"
                                       namespace="http://xmlns.eia.com/AO/Ebiz/D2S/InventoryTransactionAM/1.0"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/DB_Insert_BILLET.wsdl"/>
        <oracle-xsl-mapper:rootElement name="ApiBilletTransExtCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/DB_Insert_BILLET"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [TUE FEB 21 10:50:20 CST 2017].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:ApiBilletTransExtCollection>
      <xsl:for-each select="/ns0:InventoryTransactionAddRq/ns7:InventoryTransactionDetails">
        <xsl:if test='ns7:ListOfInvTrx/ns7:TrxSourceName != concat (ns7:ListOfInvTrx/ns7:OrgCode, "_QMOS" )'>
          <xsl:for-each select="ns7:ListOfInvTrx/ns7:ListOfInvTrxDetails/ns7:InvTrxDetails">
            <xsl:if test='dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_QMOS_NSNE_ITEM_TYPE_MAP.dvm", "ITEMTYPE", ../../ns7:ItemType, "BILLET", "" ) = "Y" '>
              <xsl:if test='dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_QMOS_TRANSACTION_TYPE_NAME_MAP.dvm", "TRANSACTION_TYPE_NAME", ../../ns7:TransactionType, "QMOS_BILLET", "" ) != ""'>
                <xsl:if test=' substring-before(../../ns7:Locator,".") = "NN1" or dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/QMOS_NSNE_COMMON_STACK_MAP.dvm", "COMMON_STACK", ../../ns7:Locator, "FLAG", "" ) != "" '>
                  <tns:ApiBilletTransExt>
                    <tns:id>
                      <xsl:value-of select='oraext:sequence-next-val ("SEQ_API_BILLET_TRANS_EXT_ID", "jdbc/nsutqmos" )'/>
                    </tns:id>
                    <tns:receiptDate>
                      <xsl:value-of select="xp20:current-dateTime ( )"/>
                    </tns:receiptDate>
                    <tns:meltHeat>
                      <xsl:value-of select="ns7:PrimaryLot"/>
                    </tns:meltHeat>
                    <xsl:choose>
                      <xsl:when test="../../ns7:TransactionType='Account alias recipt' and ../../ns7:TransactionReason='PRO'">
                        <tns:transactionType>PRO</tns:transactionType>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:choose>
                          <xsl:when test="../../ns7:TransactionType='Account alias issue' and ../../ns7:TransactionReason='VOID'">
                            <tns:transactionType>VOID</tns:transactionType>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:choose>
                              <xsl:when test="../../ns7:TransactionType='Account alias issue' and ../../ns7:TransactionReason='Return Scrap'">
                                <tns:transactionType>SCP</tns:transactionType>
                              </xsl:when>
                              <xsl:otherwise>
                                <tns:transactionType>
                                  <xsl:value-of select='dvm:lookupValue ("oramds:/apps/EIAMetadata/CommonArtifacts/dvm/EBS_QMOS_TRANSACTION_TYPE_NAME_MAP.dvm", "TRANSACTION_TYPE_NAME", ../../ns7:TransactionType, "QMOS_BUNDLE", "" )'/>
                                </tns:transactionType>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:otherwise>
                    </xsl:choose>
                    <tns:billetCreateDate>
                      <xsl:value-of select="../../ns7:TransactionDate"/>
                    </tns:billetCreateDate>
                    <tns:poLine>
                      <xsl:value-of select="../../ns7:ListOfInvTrxSrcDetails/ns7:InvTrxSrcDetails/ns7:TrxSourceNumber"/>
                    </tns:poLine>
                    <tns:billetProductCode>
                      <xsl:value-of select="../../ns7:ItemNumber"/>
                    </tns:billetProductCode>
                    <tns:count>1</tns:count>
                    <xsl:choose>
                      <xsl:when test='xp20:compare (ns7:LotStatus, "Active" ) = 0'>
                        <tns:disposition>1</tns:disposition>
                      </xsl:when>
                      <xsl:otherwise>
                        <tns:disposition>2</tns:disposition>
                      </xsl:otherwise>
                    </xsl:choose>
                    <tns:location>
                      <xsl:value-of select="../../ns7:Locator"/>
                    </tns:location>
                    <xsl:choose>
                      <xsl:when test='xp20:compare (../../ns7:TransactionType, "Lot Status Change" ) = 0'>
                        <xsl:choose>
                          <xsl:when test='xp20:compare (ns7:LotStatus, "Active" ) = 0'>
                            <tns:dispositionFrom>2</tns:dispositionFrom>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:if test='xp20:compare (ns7:LotStatus, "Pending" ) = 0'>
                              <tns:dispositionFrom>1</tns:dispositionFrom>
                            </xsl:if>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                    </xsl:choose>
                    <tns:userId>SOAUSER</tns:userId>
                    <tns:billetBatch>
                      <xsl:value-of select="ns7:LotNumber"/>
                    </tns:billetBatch>
                    <xsl:choose>
                      <xsl:when test="../../ns7:Attribute/ns7:ATTRIBUTE2 and ../../ns7:Attribute/ns7:ATTRIBUTE2 != '' ">
                        <tns:crew>
                          <xsl:value-of select="../../ns7:Attribute/ns7:ATTRIBUTE2"/>
                        </tns:crew>
                      </xsl:when>
                      <xsl:otherwise>
                        <tns:crew>Z</tns:crew>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                      <xsl:when test="../../ns7:Attribute/ns7:ATTRIBUTE1 and ../../ns7:Attribute/ns7:ATTRIBUTE1 != '' ">
                        <tns:shift>
                          <xsl:value-of select="../../ns7:Attribute/ns7:ATTRIBUTE1"/>
                        </tns:shift>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:choose>
                          <xsl:when test="  (  (7 &lt;= xp20:hours-from-dateTime (../../ns7:TransactionDate )) and ( xp20:hours-from-dateTime (../../ns7:TransactionDate )     &lt;= 18)  )   ">
                            <tns:shift>1</tns:shift>
                          </xsl:when>
                          <xsl:otherwise>
                            <tns:shift>2</tns:shift>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:otherwise>
                    </xsl:choose>
                    <tns:apiBilletTransExtDtlsCollection>
                      <tns:ApiBilletTransExtDtls>
                        <tns:id>
                          <xsl:value-of select='oraext:sequence-next-val ("SEQ_API_BILLET_TRANS_DETAIL_ID", "jdbc/nsutqmos" )'/>
                        </tns:id>
                        <tns:billetId>
                          <xsl:value-of select="../../ns7:LPN"/>
                        </tns:billetId>
                        <tns:strand>
                          <xsl:value-of select="../../ns7:LPNAttribute/ns7:ATTRIBUTE1"/>
                        </tns:strand>
                        <tns:cut>
                          <xsl:value-of select="../../ns7:LPNAttribute/ns7:ATTRIBUTE2"/>
                        </tns:cut>
                      </tns:ApiBilletTransExtDtls>
                    </tns:apiBilletTransExtDtlsCollection>
                  </tns:ApiBilletTransExt>
                </xsl:if>
              </xsl:if>
            </xsl:if>
          </xsl:for-each>
        </xsl:if>
      </xsl:for-each>
    </tns:ApiBilletTransExtCollection>
  </xsl:template>
</xsl:stylesheet>
