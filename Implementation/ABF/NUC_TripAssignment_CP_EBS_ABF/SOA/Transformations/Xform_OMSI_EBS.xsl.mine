<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:ns1="http://schemas.oracle.com/service/bpel/common"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/db/top/InsertWSH_OTRIPS_STG_DBInsertAdapter"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/sp/SelectFromOMSITables_DBAdapter"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns1 ns0 tns oraxsl xp20 xref mhdr oraext dvm socket"
                xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/I027New/NUC_TripAssignment_CP_EBS_ABF/SelectFromOMSITables_DBAdapter"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:client="http://xmlns.eia.com/ABF/NUC_TripAssignment_CP_EBS_ABF/1.0"
                xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/db/I027New/NUC_TripAssignment_CP_EBS_ABF/InsertWSH_OTRIPS_STG_DBInsertAdapter"
                xmlns:utl="http://www.oracle.com/XSL/Transform/java/com.eia.soa.util.Configuration">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/SelectFromOMSITables_DBAdapter.wsdl"/>
        <oracle-xsl-mapper:rootElement name="OutputParameters"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/sp/SelectFromOMSITables_DBAdapter"/>
      </oracle-xsl-mapper:source>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/TripAssignment.wsdl"/>
        <oracle-xsl-mapper:rootElement name="parameters" namespace="http://schemas.oracle.com/service/bpel/common"/>
        <oracle-xsl-mapper:param name="params"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/InsertWSH_OTRIPS_STG_DBInsertAdapter.wsdl"/>
        <oracle-xsl-mapper:rootElement name="XxnucWshOtripsStgCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/InsertWSH_OTRIPS_STG_DBInsertAdapter"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [WED NOV 04 04:39:55 CST 2015].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="params"/>
  <xsl:template match="/">
    <tns:XxnucWshOtripsStgCollection>
      <xsl:for-each select="/ns0:OutputParameters/ns0:P_LOG_ENTRY/ns0:P_LOG_ENTRY_ITEM">
        <xsl:variable name='logEntryId'>
          <xsl:value-of select='ns0:LOG_ENTRY_ID'/>
        </xsl:variable>
        <!-- <a>
      <xsl:value-of select="$logEntryId"/>
      </a>-->
        <tns:XxnucWshOtripsStg>
          <tns:transactionId>
            <xsl:value-of select="$params/ns1:parameters/ns1:item/ns1:value"/>
          </tns:transactionId>
          <tns:recordId>
            <xsl:value-of select="oraext:sequence-next-val('xxnuc_out_intf_rec_s','jdbc/ebsapps')"/>
          </tns:recordId>
          <tns:processFlag>NEW</tns:processFlag>
          <xsl:choose>
            <xsl:when test="ns0:OPERATION=100 or ns0:OPERATION=200 or ns0:OPERATION=300 or ns0:OPERATION=500 or ns0:OPERATION=1400 or ns0:OPERATION=2100 or ns0:OPERATION=2200">
              <tns:tripId>
                <xsl:value-of select="/ns0:OutputParameters/ns0:P_SHIPMENT_LOG_ENTRY/ns0:P_SHIPMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:CLIENT_KEY_2"/>
              </tns:tripId>
            </xsl:when>
            <xsl:when test="ns0:OPERATION=1500">
              <tns:tripId>
                <xsl:value-of select="/ns0:OutputParameters/ns0:P_POD_LOG_ENTRY/ns0:P_POD_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:CLIENT_KEY_2"/>
              </tns:tripId>
            </xsl:when>
            <xsl:otherwise>
              <tns:tripId>
                <xsl:value-of select="/ns0:OutputParameters/ns0:P_APPOINTMENT_LOG_ENTRY/ns0:P_APPOINTMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:CLIENT_KEY_2"/>
              </tns:tripId>
            </xsl:otherwise>
          </xsl:choose>
          <tns:resultCode>
            <xsl:value-of select="ns0:RESULT_CODE"/>
          </tns:resultCode>
          <tns:operation>
            <xsl:value-of select="ns0:OPERATION"/>
          </tns:operation>
          <tns:trailerNumber>
            <xsl:value-of select="/ns0:OutputParameters/ns0:P_APPOINTMENT_LOG_ENTRY/ns0:P_APPOINTMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:TRAILER_NUMBER"/>
          </tns:trailerNumber>
          <tns:resultMessage>
            <xsl:value-of select="ns0:RESULT_MESSAGE"/>
          </tns:resultMessage>
          <xsl:choose>
            <xsl:when test="ns0:OPERATION=500">
              <tns:carrierName>
                <xsl:value-of select="/ns0:OutputParameters/ns0:P_SHIPMENT_LOG_ENTRY/ns0:P_SHIPMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:CARRIER_NAME"/>
              </tns:carrierName>
              <tns:carrierComment>
                <xsl:value-of select="/ns0:OutputParameters/ns0:P_SHIPMENT_LOG_ENTRY/ns0:P_SHIPMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:CARRIER_COMMENTS"/>
              </tns:carrierComment>
              <tns:timeAwarded>
                <xsl:value-of select="substring-before(/ns0:OutputParameters/ns0:P_SHIPMENT_LOG_ENTRY/ns0:P_SHIPMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:TIME_AWARDED,'T')"/>
              </tns:timeAwarded>
              <tns:delCarrierName>
                <xsl:value-of select="/ns0:OutputParameters/ns0:P_SHIPMENT_LOG_ENTRY/ns0:P_SHIPMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:DELIVERING_CARRIER_NAME"/>
              </tns:delCarrierName>
            </xsl:when>
            <xsl:when test="((ns0:OPERATION = 600) or (ns0:OPERATION = 700) or (ns0:OPERATION = 800))">
              <tns:carrierName>
                <xsl:value-of select="/ns0:OutputParameters/ns0:P_APPOINTMENT_LOG_ENTRY/ns0:P_APPOINTMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:CARRIER_NAME"/>
              </tns:carrierName>
              <!-- <tns:carrierComment>
            <xsl:value-of select="/ns0:OutputParameters/ns0:P_APPOINTMENT_LOG_ENTRY/ns0:P_APPOINTMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:CARRIER_COMMENTS"/>
          </tns:carrierComment>
          <tns:timeAwarded>
            <xsl:value-of select="substring-before(/ns0:OutputParameters/ns0:P_APPOINTMENT_LOG_ENTRY/ns0:P_APPOINTMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:TIME_AWARDED,'T')"/>
          </tns:timeAwarded>-->
              <tns:delCarrierName>
                <xsl:value-of select="/ns0:OutputParameters/ns0:P_APPOINTMENT_LOG_ENTRY/ns0:P_APPOINTMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:DELIVERING_CARRIER_NAME"/>
              </tns:delCarrierName>
            </xsl:when>
          </xsl:choose>
          <tns:creationDate>
            <xsl:value-of select="xp20:current-dateTime ( )"/>
          </tns:creationDate>
          <tns:xxnucWshOtripStopsStgCollection>
            <xsl:choose>
              <xsl:when test="ns0:OPERATION = 600 or ns0:OPERATION = 700 or ns0:OPERATION = 800">
                <tns:XxnucWshOtripStopsStg>
                  <tns:transactionId>
                    <xsl:value-of select="$params/ns1:parameters/ns1:item/ns1:value"/>
                  </tns:transactionId>
                  <tns:tripId>
                    <xsl:value-of select="/ns0:OutputParameters/ns0:P_APPOINTMENT_LOG_ENTRY/ns0:P_APPOINTMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:CLIENT_KEY_2"/>
                  </tns:tripId>
                  <tns:stopSeqNumber>
                    <xsl:value-of select="/ns0:OutputParameters/ns0:P_APPOINTMENT_LOG_ENTRY/ns0:P_APPOINTMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:STOP_SEQUENCE_NUMBER"/>
                  </tns:stopSeqNumber>
                  <tns:startTime>
                    <xsl:value-of select="/ns0:OutputParameters/ns0:P_APPOINTMENT_LOG_ENTRY/ns0:P_APPOINTMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:START_TIME"/>
                  </tns:startTime>
                  <tns:endTime>
                    <xsl:value-of select="/ns0:OutputParameters/ns0:P_APPOINTMENT_LOG_ENTRY/ns0:P_APPOINTMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:END_TIME"/>
                  </tns:endTime>
                  <tns:doorName>
                    <xsl:value-of select="/ns0:OutputParameters/ns0:P_APPOINTMENT_LOG_ENTRY/ns0:P_APPOINTMENT_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:DOOR_NAME"/>
                  </tns:doorName>
                </tns:XxnucWshOtripStopsStg>
              </xsl:when>
              <xsl:when test="ns0:OPERATION = 1500">
                <tns:XxnucWshOtripStopsStg>
                  <tns:transactionId>
                    <xsl:value-of select="$params/ns1:parameters/ns1:item/ns1:value"/>
                  </tns:transactionId>
                  <tns:tripId>
                    <xsl:value-of select="/ns0:OutputParameters/ns0:P_POD_LOG_ENTRY/ns0:P_POD_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:CLIENT_KEY_2"/>
                  </tns:tripId>
                  <tns:stopSeqNumber>
                    <xsl:value-of select="/ns0:OutputParameters/ns0:P_POD_LOG_ENTRY/ns0:P_POD_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:STOP_SEQUENCE_NUMBER"/>
                  </tns:stopSeqNumber>
                  <tns:startTime/>
                  <tns:endTime/>
                  <tns:doorName/>
                  <tns:signer>
                    <xsl:value-of select="/ns0:OutputParameters/ns0:P_POD_LOG_ENTRY/ns0:P_POD_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:SIGNER"/>
                  </tns:signer>
                  <tns:signingDate>
                    <xsl:value-of select="/ns0:OutputParameters/ns0:P_POD_LOG_ENTRY/ns0:P_POD_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:SIGNING_DATE"/>
                  </tns:signingDate>
                  <tns:entryTime>
                    <xsl:value-of select="/ns0:OutputParameters/ns0:P_POD_LOG_ENTRY/ns0:P_POD_LOG_ENTRY_ITEM[ns0:LOG_ENTRY_ID = $logEntryId]/ns0:ENTRY_TIME"/>
                  </tns:entryTime>
                  <tns:notes>
                    <xsl:value-of select="/ns0:OutputParameters/ns0:P_POD_LOG_ENTRY/ns0:P_POD_LOG_ENTRY_ITEM/ns0:NOTES"/>
                  </tns:notes>
                </tns:XxnucWshOtripStopsStg>
              </xsl:when>
            </xsl:choose>
          </tns:xxnucWshOtripStopsStgCollection>
        </tns:XxnucWshOtripsStg>
      </xsl:for-each>
    </tns:XxnucWshOtripsStgCollection>
  </xsl:template>
</xsl:stylesheet>
