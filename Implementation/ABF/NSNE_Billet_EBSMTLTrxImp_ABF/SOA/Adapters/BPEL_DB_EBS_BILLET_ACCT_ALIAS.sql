-- Declare the SQL type for the PL/SQL type XXNUC_INV_TRX_IMPORT_PKG.RESULT_REC
CREATE OR REPLACE TYPE XXNUC_INV_TRX_IMX6875859X4X4 AS OBJECT (
      TRX_ID NUMBER,
      RESULT_CODE VARCHAR2(10),
      RESULT_MESSAGE VARCHAR2(4000)
);
/
show errors
-- Declare package containing conversion functions between SQL and PL/SQL types
CREATE OR REPLACE PACKAGE BPEL_DB_EBS_BILLET_ACCT_ALIAS AS
	-- Declare the conversion functions the PL/SQL type APPS.XXNUC_INV_TRX_IMPORT_PKG.RESULT_REC
	FUNCTION PL_TO_SQL0(aPlsqlItem APPS.XXNUC_INV_TRX_IMPORT_PKG.RESULT_REC)
 	RETURN XXNUC_INV_TRX_IMX6875859X4X4;
	FUNCTION SQL_TO_PL0(aSqlItem XXNUC_INV_TRX_IMX6875859X4X4)
	RETURN APPS.XXNUC_INV_TRX_IMPORT_PKG.RESULT_REC;
   PROCEDURE xxnuc_inv_trx_import_pkg$prc_ (P_INIT_PARAMS XXNUC_APPS_INIT_OBJ_TYPE,
	P_TRX_TAB XXNUC_BILLET_TRX_TAB_TYPE,
	P_RESULT OUT XXNUC_INV_TRX_IMX6875859X4X4
	);
END BPEL_DB_EBS_BILLET_ACCT_ALIAS;
/
show errors
CREATE OR REPLACE PACKAGE BODY BPEL_DB_EBS_BILLET_ACCT_ALIAS IS
	FUNCTION PL_TO_SQL0(aPlsqlItem APPS.XXNUC_INV_TRX_IMPORT_PKG.RESULT_REC)
 	RETURN XXNUC_INV_TRX_IMX6875859X4X4 IS 
	aSqlItem XXNUC_INV_TRX_IMX6875859X4X4; 
	loop_counter number;
	BEGIN 
		-- initialize the object
		aSqlItem := XXNUC_INV_TRX_IMX6875859X4X4(NULL, NULL, NULL);
		aSqlItem.TRX_ID := aPlsqlItem.TRX_ID;
		aSqlItem.RESULT_CODE := aPlsqlItem.RESULT_CODE;
		aSqlItem.RESULT_MESSAGE := aPlsqlItem.RESULT_MESSAGE;
		RETURN aSqlItem;
	END PL_TO_SQL0;
	FUNCTION SQL_TO_PL0(aSqlItem XXNUC_INV_TRX_IMX6875859X4X4) 
	RETURN APPS.XXNUC_INV_TRX_IMPORT_PKG.RESULT_REC IS 
	aPlsqlItem APPS.XXNUC_INV_TRX_IMPORT_PKG.RESULT_REC; 
	BEGIN 
		aPlsqlItem.TRX_ID := aSqlItem.TRX_ID;
		aPlsqlItem.RESULT_CODE := aSqlItem.RESULT_CODE;
		aPlsqlItem.RESULT_MESSAGE := aSqlItem.RESULT_MESSAGE;
		RETURN aPlsqlItem;
	END SQL_TO_PL0;

   PROCEDURE xxnuc_inv_trx_import_pkg$prc_ (P_INIT_PARAMS XXNUC_APPS_INIT_OBJ_TYPE,
	P_TRX_TAB XXNUC_BILLET_TRX_TAB_TYPE,
	P_RESULT OUT XXNUC_INV_TRX_IMX6875859X4X4
	) IS
 P_RESULT_ APPS.XXNUC_INV_TRX_IMPORT_PKG.RESULT_REC;
   BEGIN
      APPS.XXNUC_INV_TRX_IMPORT_PKG.PRC_BILLET_ACCT_ALIAS(P_INIT_PARAMS,
	P_TRX_TAB,
	P_RESULT_
	);
 P_RESULT := BPEL_DB_EBS_BILLET_ACCT_ALIAS.PL_TO_SQL0(P_RESULT_);
   END xxnuc_inv_trx_import_pkg$prc_;

END BPEL_DB_EBS_BILLET_ACCT_ALIAS;
/
show errors
exit
