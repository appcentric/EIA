<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Sep 28 07:10:05 CDT 2015
  Author:  sindhuja.reddy
  Type: BPEL 2.0 Process
  Purpose: Empty BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="GETLabel_NiceLabel_ABF"
         targetNamespace="http://xmlns.eia.com/ABF/NYS_TransferLabel_NiceLable_ABF/1.0/GETLabel_NiceLabel_ABF"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:client="http://xmlns.eia.com/ABF/NYS_TransferLabel_NiceLable_ABF/1.0/GETLabel_NiceLabel_ABF"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/ftp/Nucor/NYS_TransferLabel_NiceLable_ABF/FTP_GET_Label"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ui="http://xmlns.oracle.com/soa/designer"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/file/Nucor/NYS_TransferLabel_NiceLable_ABF/File_Write_LabelInput"
         xmlns:ns3="http://xmlns.eia.com/CommonLogging"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns4="http://www.nucor.com/scmschemas/label.xsd"
         xmlns:ns5="http://xmlns.oracle.com/pcbpel/adapter/aq/Nucor/NYS_TransferLabel_NiceLable_ABF/AQ_EBS_NiceLabel"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns6="http://xmlns.oracle.com/xdb/APPS_NE"
         xmlns:ns7="http://xmlns.oracle.com/pcbpel/adapter/aq/Nucor/NYS_TransferLabel_NiceLable_ABF/AQ_EBS_Label"
         xmlns:ns8="http://xmlns.oracle.com/pcbpel/adapter/opaque/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:eia="http://xmlns.eia.com/extensions/1.0"
         xmlns:ns9="http://xmlns.oracle.com/pcbpel/adapter/ftp/DEV1Application/NUC_TransferLabel_NiceLabel_ABF/FTP_Write_Nice_Label">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <!--<import namespace="http://xmlns.oracle.com/pcbpel/adapter/file/Nucor/NYS_TransferLabel_NiceLable_ABF/File_Write_LabelInput"
          location="../WSDLs/File_Write_LabelInput.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"
          ui:processWSDL="true"/>-->
  <import namespace="http://xmlns.eia.com/CommonLogging"
          location="oramds:/apps/EIAMetadata/Infrastracture/wsdls/V1.0/CommonLogging.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/" ui:processWSDL="true"/>
  <import namespace="http://www.nucor.com/scmschemas/label.xsd" location="../Schemas/LabelInput.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>
  <!--
  <import namespace="http://www.nucor.com/scmschemas/label.xsd" location="../LabelInput.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>-->
  <partnerLinks>
    <partnerLink name="CommonLogging_Pl" partnerLinkType="ns3:CommonLogging" partnerRole="CommonLoggingProvider"/>
    <partnerLink name="AQ_EBS_Label" partnerLinkType="ns7:Dequeue_plt" myRole="Dequeue_role"/>
    <partnerLink name="FTP_Write_Nice_Label" partnerLinkType="ns9:Put_plt" partnerRole="Put_role"/>
  </partnerLinks>
  <variables>
    <variable name="Invoke_StartLog_process_InputVariable" messageType="ns3:CommonLoggingRequestMessage"/>
    <variable name="Invoke_EndLog_process_InputVariable" messageType="ns3:CommonLoggingRequestMessage"/>
    <variable name="Invoke_ErrorLog_process_InputVariable" messageType="ns3:CommonLoggingRequestMessage"/>
    <variable name="Var_XML_EBS" element="ns4:labels"/>
    <variable name="temp" type="xsd:string"/>
    <variable name="Receive_Label_Dequeue_InputVariable" messageType="ns7:XXNUC_COMM_OUTINTF_OBJ_TYP_msg"/>
    <variable name="Invoke_FTP_Nice_Label_Put_InputVariable" messageType="ns9:Put_msg"/>
    <variable name="FileName" type="xsd:string"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence_CatchAll">
        <scope name="Scope3">
          <sequence>
            <assign name="XForm_ErrorCommonLogging">
              <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
              </bpelx:annotation>
              <copy>
                <from>ora:doXSLTransformForDoc("../Transformations/XForm_CommonLogging.xsl", $Receive_Label_Dequeue_InputVariable.XXNUC_COMM_OUTINTF_OBJ_TYP)</from>
                <to variable="Invoke_ErrorLog_process_InputVariable" part="CommonLogging"/>
              </copy>
            </assign>
            <assign name="Assign_ErrorLog">
              <copy>
                <from>'NextGen'</from>
                <to>$Invoke_ErrorLog_process_InputVariable.CommonLogging/ns3:ProjectName</to>
              </copy>
              <copy>
                <from>$Receive_Label_Dequeue_InputVariable.XXNUC_COMM_OUTINTF_OBJ_TYP/REQUEST_ID</from>
                <to>$Invoke_ErrorLog_process_InputVariable.CommonLogging/ns3:TransactionId</to>
              </copy>
              <copy>
                <from>ora:getComponentName()</from>
                <to>$Invoke_ErrorLog_process_InputVariable.CommonLogging/ns3:ProcessName</to>
              </copy>
              <copy>
                <from>'1'</from>
                <to>$Invoke_ErrorLog_process_InputVariable.CommonLogging/ns3:LoggingSystem</to>
              </copy>
              <copy>
                <from>'2'</from>
                <to>$Invoke_ErrorLog_process_InputVariable.CommonLogging/ns3:SourceSystem</to>
              </copy>
              <copy>
                <from>'27'</from>
                <to>$Invoke_ErrorLog_process_InputVariable.CommonLogging/ns3:TargetSystem</to>
              </copy>
              <copy>
                <from>'4'</from>
                <to>$Invoke_ErrorLog_process_InputVariable.CommonLogging/ns3:LogType</to>
              </copy>
              <copy>
                <from>'SOA'</from>
                <to>$Invoke_ErrorLog_process_InputVariable.CommonLogging/ns3:CreatedBy</to>
              </copy>
              <copy>
                <from>'SOA'</from>
                <to>$Invoke_ErrorLog_process_InputVariable.CommonLogging/ns3:UpdatedBy</to>
              </copy>
              <copy>
                <from>concat('FlowId:',ora:getFlowId(),' ','Error:',' ',ora:getFaultAsString())</from>
                <to>$Invoke_ErrorLog_process_InputVariable.CommonLogging/ns3:MessageDescription</to>
              </copy>
              <copy>
                <from>'2'</from>
                <to>$Invoke_ErrorLog_process_InputVariable.CommonLogging/ns3:TransactionStatus</to>
              </copy>
            </assign>
            <invoke name="Invoke_ErrorLog" partnerLink="CommonLogging_Pl" portType="ns3:CommonLogging"
                    inputVariable="Invoke_ErrorLog_process_InputVariable" operation="process" bpelx:invokeAsDetail="no">
              <bpelx:toProperties>
                <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
              </bpelx:toProperties>
            </invoke>
          </sequence>
        </scope>
      </sequence>
    </catchAll>
  </faultHandlers>
  <sequence name="main">
    <receive name="Receive_Label" createInstance="yes" partnerLink="AQ_EBS_Label" portType="ns7:Dequeue_ptt"
             operation="Dequeue" variable="Receive_Label_Dequeue_InputVariable"/>
    <scope name="Scope1">
      <faultHandlers>
        <catchAll>
          <empty name="DoNothing"/>
        </catchAll>
      </faultHandlers>
      <sequence>
        <assign name="XForm_StartCommonLogging">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from>ora:doXSLTransformForDoc("../Transformations/XForm_CommonLogging.xsl", $Receive_Label_Dequeue_InputVariable.XXNUC_COMM_OUTINTF_OBJ_TYP)</from>
            <to variable="Invoke_StartLog_process_InputVariable" part="CommonLogging"/>
          </copy>
        </assign>
        <assign name="Assign_StartLog">
         <copy>
            <from>oraext:setFlowInstanceTitle(string($Receive_Label_Dequeue_InputVariable.XXNUC_COMM_OUTINTF_OBJ_TYP/REQUEST_ID))</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:TransactionId</to>
          </copy>
          <copy>
            <from>$Receive_Label_Dequeue_InputVariable.XXNUC_COMM_OUTINTF_OBJ_TYP/REQUEST_ID</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:TransactionId</to>
          </copy>
          <copy>
            <from>'NextGen'</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:ProjectName</to>
          </copy>
          <copy>
            <from>ora:getComponentName()</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:ProcessName</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:LoggingSystem</to>
          </copy>
          <copy>
            <from>'2'</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:SourceSystem</to>
          </copy>
          <copy>
            <from>'27'</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:TargetSystem</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:LogType</to>
          </copy>
          <copy>
            <from>'BMG-003'</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:MessageCode</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:TransactionStatus</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:CreatedBy</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_StartLog_process_InputVariable.CommonLogging/ns3:UpdatedBy</to>
          </copy>
        </assign>
        <invoke name="Invoke_StartLog" partnerLink="CommonLogging_Pl" portType="ns3:CommonLogging"
                inputVariable="Invoke_StartLog_process_InputVariable" operation="process" bpelx:invokeAsDetail="no">
          <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
      </sequence>
    </scope>
    <assign name="Assign_Temp">
      <copy>
        <from>concat(substring-before($Receive_Label_Dequeue_InputVariable.XXNUC_COMM_OUTINTF_OBJ_TYP/XML_DATA,'&amp;lt;!DOCTYPE labels SYSTEM "label.dtd"&amp;gt;'),substring-after($Receive_Label_Dequeue_InputVariable.XXNUC_COMM_OUTINTF_OBJ_TYP/XML_DATA,'&amp;lt;!DOCTYPE labels SYSTEM "label.dtd"&amp;gt;'))</from>
        <to>$temp</to>
      </copy>
    </assign>
    <assign name="Assign_XML">
      <copy>
        <from>oraext:parseXML($temp)</from>
        <to>$Var_XML_EBS</to>
      </copy>
    </assign>
    <assign name="Assign_Label_Nice">
      <copy>
        <from>$Var_XML_EBS</from>
        <to>$Invoke_FTP_Nice_Label_Put_InputVariable.body</to>
      </copy>
      <copy>
        <from>concat($Var_XML_EBS/@_JOBNAME,'.xml')</from>
        <to>$FileName</to>
      </copy>
    </assign>
    <invoke name="Invoke_FTP_Nice_Label" partnerLink="FTP_Write_Nice_Label" portType="ns9:Put_ptt" operation="Put"
            inputVariable="Invoke_FTP_Nice_Label_Put_InputVariable" bpelx:invokeAsDetail="no">
      <bpelx:toProperties>
        <bpelx:toProperty name="jca.ftp.FileName" variable="FileName"/>
      </bpelx:toProperties>
    </invoke>
    <scope name="Scope2">
      <faultHandlers>
        <catchAll>
          <empty name="DoNothing"/>
        </catchAll>
      </faultHandlers>
      <sequence>
        <assign name="XForm_EndCommonLogging">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from>ora:doXSLTransformForDoc("../Transformations/XForm_CommonLogging.xsl", $Receive_Label_Dequeue_InputVariable.XXNUC_COMM_OUTINTF_OBJ_TYP)</from>
            <to variable="Invoke_EndLog_process_InputVariable" part="CommonLogging"/>
          </copy>
        </assign>
        <assign name="Assign_EndLog">
          <copy>
            <from>'NextGen'</from>
            <to>$Invoke_EndLog_process_InputVariable.CommonLogging/ns3:ProjectName</to>
          </copy>
          <copy>
            <from>$Receive_Label_Dequeue_InputVariable.XXNUC_COMM_OUTINTF_OBJ_TYP/REQUEST_ID</from>
            <to>$Invoke_EndLog_process_InputVariable.CommonLogging/ns3:TransactionId</to>
          </copy>
          <copy>
            <from>ora:getComponentName()</from>
            <to>$Invoke_EndLog_process_InputVariable.CommonLogging/ns3:ProcessName</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$Invoke_EndLog_process_InputVariable.CommonLogging/ns3:LoggingSystem</to>
          </copy>
          <copy>
            <from>'2'</from>
            <to>$Invoke_EndLog_process_InputVariable.CommonLogging/ns3:SourceSystem</to>
          </copy>
          <copy>
            <from>'27'</from>
            <to>$Invoke_EndLog_process_InputVariable.CommonLogging/ns3:TargetSystem</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$Invoke_EndLog_process_InputVariable.CommonLogging/ns3:LogType</to>
          </copy>
          <copy>
            <from>'BMG-015'</from>
            <to>$Invoke_EndLog_process_InputVariable.CommonLogging/ns3:MessageCode</to>
          </copy>
          <copy>
            <from>'2'</from>
            <to>$Invoke_EndLog_process_InputVariable.CommonLogging/ns3:TransactionStatus</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_EndLog_process_InputVariable.CommonLogging/ns3:CreatedBy</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$Invoke_EndLog_process_InputVariable.CommonLogging/ns3:UpdatedBy</to>
          </copy>
        </assign>
        <invoke name="Invoke_EndLog" partnerLink="CommonLogging_Pl" portType="ns3:CommonLogging"
                inputVariable="Invoke_EndLog_process_InputVariable" operation="process" bpelx:invokeAsDetail="no">
          <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
      </sequence>
    </scope>
  </sequence>
</process>