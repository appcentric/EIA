<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ns0="http://www.w3.org/2001/XMLSchema"
                xmlns:db="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/WSH_OTM_OUTBOUND/GET_TRIP_OBJECTS/"
                xmlns:ns1="http://xmlns.oracle.com/apps/otm"
                xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:txn="http://xmlns.oracle.com/apps/wsh/outbound/util/WshOtmGlobalOutbound"
                xmlns:client="http://xmlns.oracle.com/apps/wsh/outbound/txn/WshSendTripToOtmService"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                exclude-result-prefixes="xsl ns0 db ns1 plnk txn client ldap xp20 bpws ora orcl"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../xsd/APPS_WSH_OTM_OUTBOUND_GET_TRIP_OBJECTS.xsd"/>
        <oracle-xsl-mapper:rootElement name="OutputParameters"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/APPS/WSH_OTM_OUTBOUND/GET_TRIP_OBJECTS/"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WshSendTripToOtmService.wsdl"/>
        <oracle-xsl-mapper:rootElement name="WshSendTripToOtmServiceProcessResponse"
                                       namespace="http://xmlns.oracle.com/apps/wsh/outbound/txn/WshSendTripToOtmService"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <oracle-xsl-mapper:mapShowPrefixes type="true"/>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [FRI NOV 06 04:03:30 CST 2015].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <client:WshSendTripToOtmServiceProcessResponse>
      <client:result>
        <txn:entityidList>
          <xsl:for-each select="/db:OutputParameters/P_TRIP_ID_TAB/P_TRIP_ID_TAB_ITEM">
            <txn:entityId>
              <xsl:value-of select="."/>
            </txn:entityId>
          </xsl:for-each>
        </txn:entityidList>
        <txn:errorIdList>
          <xsl:for-each select="/db:OutputParameters/X_ERROR_TRIP_ID_TAB/P_TRIP_ID_TAB_ITEM">
            <txn:entityId>
              <xsl:value-of select="."/>
            </txn:entityId>
          </xsl:for-each>
        </txn:errorIdList>
        <ns1:Transmission>
          <ns1:TransmissionHeader>
            <ns1:UserName>
              <xsl:value-of select="/db:OutputParameters/X_OTM_USER_NAME"/>
            </ns1:UserName>
            <ns1:Password>
              <xsl:value-of select="/db:OutputParameters/X_OTM_PWD"/>
            </ns1:Password>
          </ns1:TransmissionHeader>
          <ns1:TransmissionBody>
            <xsl:for-each select="/db:OutputParameters/X_DLV_TAB/SHIPMENT_DELIVERIES_ITEM">
              <ns1:GLogXMLElement>
                <ns1:TransactionHeader>
                  <ns1:TimeZoneGid>
                    <ns1:Gid>
                      <ns1:Xid>
                        <xsl:value-of select="../../X_SERVER_TZ_CODE"/>
                      </ns1:Xid>
                    </ns1:Gid>
                  </ns1:TimeZoneGid>
                </ns1:TransactionHeader>
                <ns1:Release>
                  <ns1:ReleaseGid>
                    <ns1:Gid>
                      <ns1:DomainName>
                        <!--xsl:value-of select="../../X_DOMAIN_NAME"/-->
                        <xsl:value-of select="concat(../../X_DOMAIN_NAME,'/','BMG')"/>
                      </ns1:DomainName>
                      <ns1:Xid>
                        <xsl:value-of select="DELIVERY_ID"/>
                      </ns1:Xid>
                    </ns1:Gid>
                  </ns1:ReleaseGid>
                  <ns1:TransactionCode>
                    <xsl:value-of select="TRANSACTION_CODE"/>
                  </ns1:TransactionCode>
                  <ns1:IntCommand>
                    <ns1:IntCommandName>
                      <xsl:value-of select='"RemoveShipmentRefForRC"'/>
                    </ns1:IntCommandName>
                  </ns1:IntCommand>
                  <ns1:ReleaseHeader>
                    <ns1:ReleaseName>
                      <xsl:value-of select="NAME"/>
                    </ns1:ReleaseName>
                    <ns1:ReleaseMethodGid>
                      <ns1:Gid>
                        <ns1:Xid>
                          <xsl:value-of select='"PREPACK"'/>
                        </ns1:Xid>
                      </ns1:Gid>
                    </ns1:ReleaseMethodGid>
                    <xsl:if test="not((string-length(FREIGHT_TERMS) = 0.0)) or not((string-length(FOB_CODE) = 0.0))">
                      <ns1:CommercialTerms>
                        <xsl:if test="not(string-length(FREIGHT_TERMS) = 0.0)">
                          <ns1:PaymentMethodCodeGid>
                            <ns1:Gid>
                              <ns1:DomainName>
                                <xsl:value-of select="../../X_DOMAIN_NAME"/>
                              </ns1:DomainName>
                              <ns1:Xid>
                                <xsl:value-of select="FREIGHT_TERMS"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:PaymentMethodCodeGid>
                        </xsl:if>
                        <xsl:if test="not(string-length(FOB_CODE) = 0.0)">
                          <ns1:IncoTermGid>
                            <ns1:Gid>
                              <ns1:DomainName>
                                <xsl:value-of select="../../X_DOMAIN_NAME"/>
                              </ns1:DomainName>
                              <ns1:Xid>
                                <xsl:value-of select="FOB_CODE"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:IncoTermGid>
                        </xsl:if>
                      </ns1:CommercialTerms>
                    </xsl:if>
                    <ns1:TimeWindowEmphasisGid>
                      <ns1:Gid>
                        <ns1:Xid>
                          <xsl:value-of select='"BOTH"'/>
                        </ns1:Xid>
                      </ns1:Gid>
                    </ns1:TimeWindowEmphasisGid>
                    <!--xsl:if test="not(string-length(SERVICE_LEVEL) = 0.0)">
                      <ns1:RateServiceGid>
                        <ns1:Gid>
                          <ns1:DomainName>
                            <xsl:value-of select="../../X_DOMAIN_NAME"/>
                          </ns1:DomainName>
                          <ns1:Xid>
                            <xsl:value-of select="SERVICE_LEVEL"/>
                          </ns1:Xid>
                        </ns1:Gid>
                      </ns1:RateServiceGid>
                    </xsl:if-->
                    <xsl:if test="not(string-length(CARRIER_ID) = 0.0)">
                      <ns1:ServiceProviderGid>
                        <ns1:Gid>
                          <ns1:DomainName>
                            <xsl:value-of select="../../X_DOMAIN_NAME"/>
                          </ns1:DomainName>
                          <ns1:Xid>
                            <xsl:value-of select="CARRIER_ID"/>
                          </ns1:Xid>
                        </ns1:Gid>
                      </ns1:ServiceProviderGid>
                    </xsl:if>
                    <xsl:if test="not(string-length(MODE_OF_TRANSPORT) = 0.0)">
                      <ns1:TransportModeGid>
                        <ns1:Gid>
                          <!--ns1:DomainName>
                            <xsl:value-of select="../../X_DOMAIN_NAME"/>
                          </ns1:DomainName-->
                          <ns1:Xid>
                            <xsl:value-of select="MODE_OF_TRANSPORT"/>
                          </ns1:Xid>
                        </ns1:Gid>
                      </ns1:TransportModeGid>
                    </xsl:if>
                    <ns1:FlexFieldStrings>
                      <ns1:Attribute1>
                        <xsl:value-of select="SERVICE_LEVEL"/>
                      </ns1:Attribute1>
                    </ns1:FlexFieldStrings>
                  </ns1:ReleaseHeader>
                  <ns1:ShipFromLocationRef>
                    <ns1:LocationRef>
                      <ns1:LocationGid>
                        <ns1:Gid>
                          <ns1:DomainName>
                            <xsl:value-of select="../../X_DOMAIN_NAME"/>
                          </ns1:DomainName>
                          <ns1:Xid>
                            <xsl:value-of select="INITIAL_PICKUP_LOCATION_ID"/>
                          </ns1:Xid>
                        </ns1:Gid>
                      </ns1:LocationGid>
                    </ns1:LocationRef>
                  </ns1:ShipFromLocationRef>
                  <ns1:ShipToLocationRef>
                    <ns1:LocationRef>
                      <ns1:LocationGid>
                        <ns1:Gid>
                          <ns1:DomainName>
                            <xsl:value-of select="../../X_DOMAIN_NAME"/>
                          </ns1:DomainName>
                          <ns1:Xid>
                            <xsl:value-of select="ULTIMATE_DROPOFF_LOCATION_ID"/>
                          </ns1:Xid>
                        </ns1:Gid>
                      </ns1:LocationGid>
                    </ns1:LocationRef>
                  </ns1:ShipToLocationRef>
                  <!-- Code changes/commented done for CR#334 Start-->
                  <ns1:TimeWindow>
                    <xsl:variable name="varAttr7">
                      <xsl:value-of select="oraext:query-database(concat(&quot;select TO_CHAR (TO_DATE (attribute7,'DD-MON-YY HH24:MI:SS'),'YYYY-MM-DD') || 'T' || TO_CHAR (TO_DATE (attribute7,'DD-MON-YY HH24:MI:SS'),'HH24:MI:SS') attribute7_soa FROM wsh_new_deliveries WHERE delivery_id = '&quot;,DELIVERY_ID,&quot;'&quot;),false(),false(),&quot;jdbc/ebsapps&quot;)"/>
                    </xsl:variable>
                    
                    <xsl:variable name="varAttr8">
                      <xsl:value-of select="oraext:query-database(concat(&quot;select TO_CHAR (TO_DATE (attribute8,'DD-MON-YY HH24:MI:SS'),'YYYY-MM-DD') || 'T' || TO_CHAR (TO_DATE (attribute8,'DD-MON-YY HH24:MI:SS'),'HH24:MI:SS') attribute8_soa FROM wsh_new_deliveries WHERE delivery_id = '&quot;,DELIVERY_ID,&quot;'&quot;),false(),false(),&quot;jdbc/ebsapps&quot;)"/>
                    </xsl:variable>
                    
                    <xsl:variable name="varAttr9">
                      <xsl:value-of select="oraext:query-database(concat(&quot;select TO_CHAR (TO_DATE (attribute9,'DD-MON-YY HH24:MI:SS'),'YYYY-MM-DD') || 'T' || TO_CHAR (TO_DATE (attribute9,'DD-MON-YY HH24:MI:SS'),'HH24:MI:SS') attribute9_soa FROM wsh_new_deliveries WHERE delivery_id = '&quot;,DELIVERY_ID,&quot;'&quot;),false(),false(),&quot;jdbc/ebsapps&quot;)"/>
                    </xsl:variable>
                    
                    <xsl:variable name="varAttr10">
                      <xsl:value-of select="oraext:query-database(concat(&quot;select TO_CHAR (TO_DATE (attribute10,'DD-MON-YY HH24:MI:SS'),'YYYY-MM-DD') || 'T' || TO_CHAR (TO_DATE (attribute10,'DD-MON-YY HH24:MI:SS'),'HH24:MI:SS') attribute10_soa FROM wsh_new_deliveries WHERE delivery_id = '&quot;,DELIVERY_ID,&quot;'&quot;),false(),false(),&quot;jdbc/ebsapps&quot;)"/>
                    </xsl:variable>
                    
                    <xsl:if test="$varAttr7 != 'T'">
                      <ns1:EarlyPickupDate>
                        <xsl:value-of select='xp20:format-dateTime($varAttr7,"[Y0001][M01][D01][H01][m01][s01]")'/>
                      </ns1:EarlyPickupDate>
                    </xsl:if>
                    <xsl:if test="$varAttr8 != 'T'">
                      <ns1:LatePickupDate>
                        <xsl:value-of select='xp20:format-dateTime($varAttr8,"[Y0001][M01][D01][H01][m01][s01]")'/>
                      </ns1:LatePickupDate>
                    </xsl:if>
                    <xsl:if test="$varAttr9 != 'T'">
                      <ns1:EarlyDeliveryDate>
                        <xsl:value-of select='xp20:format-dateTime($varAttr9,"[Y0001][M01][D01][H01][m01][s01]")'/>
                      </ns1:EarlyDeliveryDate>
                    </xsl:if>
                    <xsl:if test="$varAttr10 != 'T'">
                      <ns1:LateDeliveryDate>
                        <xsl:value-of select='xp20:format-dateTime($varAttr10,"[Y0001][M01][D01][H01][m01][s01]")'/>
                      </ns1:LateDeliveryDate>
                    </xsl:if>
                  </ns1:TimeWindow>
                  <!-- Code changes/commented done for CR#334 End-->
                  <xsl:for-each select="RL_DETAILS/RL_DETAILS_ITEM">
                    <ns1:ReleaseLine>
                      <ns1:ReleaseLineGid>
                        <ns1:Gid>
                          <ns1:DomainName>
                            <!--xsl:value-of select="../../../../X_DOMAIN_NAME"/-->
                            <xsl:value-of select="concat(../../../../X_DOMAIN_NAME,'/','BMG')"/>
                          </ns1:DomainName>
                          <ns1:Xid>
                            <xsl:value-of select="DELIVERY_DETAIL_ID"/>
                          </ns1:Xid>
                        </ns1:Gid>
                      </ns1:ReleaseLineGid>
                      <ns1:PackagedItemRef>
                        <ns1:PackagedItemGid>
                          <ns1:Gid>
                            <ns1:DomainName>
                              <xsl:value-of select="../../../../X_DOMAIN_NAME"/>
                            </ns1:DomainName>
                            <ns1:Xid>
                              <xsl:value-of select="INVENTORY_ITEM_ID"/>
                            </ns1:Xid>
                          </ns1:Gid>
                        </ns1:PackagedItemGid>
                      </ns1:PackagedItemRef>
                      <ns1:ItemQuantity>
                        <xsl:if test="not(string-length(LOT_NUMBER) = 0.0)">
                          <ns1:ItemTag1>
                            <xsl:value-of select="LOT_NUMBER"/>
                          </ns1:ItemTag1>
                        </xsl:if>
                        <xsl:if test="not(string-length(SERIAL_NUMBER) = 0.0)">
                          <ns1:ItemTag2>
                            <xsl:value-of select="SERIAL_NUMBER"/>
                          </ns1:ItemTag2>
                        </xsl:if>
                        <xsl:if test="not(string-length(TO_SERIAL_NUMBER) = 0.0)">
                          <ns1:ItemTag3>
                            <xsl:value-of select="TO_SERIAL_NUMBER"/>
                          </ns1:ItemTag3>
                        </xsl:if>
                        <ns1:IsSplitAllowed>
                          <xsl:value-of select='"N"'/>
                        </ns1:IsSplitAllowed>
                        <ns1:WeightVolume>
                          <xsl:if test="not(string-length(GROSS_WEIGHT) = 0.0)">
                            <ns1:Weight>
                              <ns1:WeightValue>
                                <xsl:value-of select="GROSS_WEIGHT"/>
                              </ns1:WeightValue>
                              <ns1:WeightUOMGid>
                                <ns1:Gid>
                                  <ns1:Xid>
                                    <xsl:value-of select="WEIGHT_UOM_CODE"/>
                                  </ns1:Xid>
                                </ns1:Gid>
                              </ns1:WeightUOMGid>
                            </ns1:Weight>
                          </xsl:if>
                          <xsl:if test="not(string-length(VOLUME) = 0.0)">
                            <ns1:Volume>
                              <ns1:VolumeValue>
                                <xsl:value-of select="VOLUME"/>
                              </ns1:VolumeValue>
                              <ns1:VolumeUOMGid>
                                <ns1:Gid>
                                  <ns1:Xid>
                                    <xsl:value-of select="VOLUME_UOM_CODE"/>
                                  </ns1:Xid>
                                </ns1:Gid>
                              </ns1:VolumeUOMGid>
                            </ns1:Volume>
                          </xsl:if>
                        </ns1:WeightVolume>
                        <xsl:if test="not(string-length(SHIPPED_QUANTITY) = 0.0)">
                          <ns1:PackagedItemCount>
                            <xsl:value-of select="ceiling(SHIPPED_QUANTITY)"/>
                          </ns1:PackagedItemCount>
                        </xsl:if>
                      </ns1:ItemQuantity>
                      <xsl:for-each select="CUST_PO_NUMBER">
                        <xsl:if test="not(string-length(.) = 0.0)">
                          <ns1:Refnum>
                            <ns1:RefnumQualifierGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="../CUST_PO_NUMBER_QLFR"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:RefnumQualifierGid>
                            <ns1:RefnumValue>
                              <xsl:value-of select="."/>
                            </ns1:RefnumValue>
                          </ns1:Refnum>
                        </xsl:if>
                      </xsl:for-each>
                      <xsl:for-each select="SOURCE_HEADER_NUMBER">
                        <xsl:if test="not(string-length(.) = 0.0)">
                          <ns1:Refnum>
                            <ns1:RefnumQualifierGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="../SOURCE_HEADER_NUMBER_QLFR"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:RefnumQualifierGid>
                            <ns1:RefnumValue>
                              <xsl:value-of select="."/>
                            </ns1:RefnumValue>
                          </ns1:Refnum>
                        </xsl:if>
                      </xsl:for-each>
                    </ns1:ReleaseLine>
                  </xsl:for-each>
                  <xsl:for-each select="LPN/LPN_ITEM">
                    <ns1:ShipUnit>
                      <ns1:ShipUnitGid>
                        <ns1:Gid>
                          <ns1:DomainName>
                            <!--xsl:value-of select="../../../../X_DOMAIN_NAME"/-->
                            <xsl:value-of select="concat(../../../../X_DOMAIN_NAME,'/','BMG')"/>
                          </ns1:DomainName>
                          <ns1:Xid>
                            <xsl:value-of select="LPN_ID"/>
                          </ns1:Xid>
                        </ns1:Gid>
                      </ns1:ShipUnitGid>
                      <ns1:TransactionCode>
                        <xsl:value-of select="../../TRANSACTION_CODE"/>
                      </ns1:TransactionCode>
                      <xsl:if test="not(string-length(CONTAINER_TYPE_CODE) = 0.0)">
                        <ns1:ShipUnitSpecGid>
                          <ns1:Gid>
                            <ns1:DomainName>
                              <xsl:value-of select="../../../../X_DOMAIN_NAME"/>
                            </ns1:DomainName>
                            <ns1:Xid>
                              <xsl:value-of select="CONTAINER_TYPE_CODE"/>
                            </ns1:Xid>
                          </ns1:Gid>
                        </ns1:ShipUnitSpecGid>
                      </xsl:if>
                      <ns1:WeightVolume>
                        <xsl:if test="not(string-length(GROSS_WEIGHT) = 0.0)">
                          <ns1:Weight>
                            <ns1:WeightValue>
                              <xsl:value-of select="GROSS_WEIGHT"/>
                            </ns1:WeightValue>
                            <ns1:WeightUOMGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="WEIGHT_UOM_CODE"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:WeightUOMGid>
                          </ns1:Weight>
                        </xsl:if>
                        <xsl:if test="not(string-length(VOLUME) = 0.0)">
                          <ns1:Volume>
                            <ns1:VolumeValue>
                              <xsl:value-of select="VOLUME"/>
                            </ns1:VolumeValue>
                            <ns1:VolumeUOMGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="VOLUME_UOM_CODE"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:VolumeUOMGid>
                          </ns1:Volume>
                        </xsl:if>
                      </ns1:WeightVolume>
                      <ns1:UnitNetWeightVolume>
                        <xsl:if test="not(string-length(NET_WEIGHT) = 0.0)">
                          <ns1:Weight>
                            <ns1:WeightValue>
                              <xsl:value-of select="NET_WEIGHT"/>
                            </ns1:WeightValue>
                            <ns1:WeightUOMGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="WEIGHT_UOM_CODE"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:WeightUOMGid>
                          </ns1:Weight>
                        </xsl:if>
                      </ns1:UnitNetWeightVolume>
                      <!--ns1:LengthWidthHeight>
                        <xsl:if test="not(string-length(UNIT_LENGTH) = 0.0)">
                          <ns1:Length>
                            <ns1:LengthValue>
                              <xsl:value-of select="UNIT_LENGTH"/>
                            </ns1:LengthValue>
                            <ns1:LengthUOMGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="DIMENSION_UM_CODE"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:LengthUOMGid>
                          </ns1:Length>
                        </xsl:if>
                        <xsl:if test="not(string-length(UNIT_WIDTH) = 0.0)">
                          <ns1:Width>
                            <ns1:WidthValue>
                              <xsl:value-of select="UNIT_WIDTH"/>
                            </ns1:WidthValue>
                            <ns1:WidthUOMGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="DIMENSION_UM_CODE"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:WidthUOMGid>
                          </ns1:Width>
                        </xsl:if>
                        <xsl:if test="not(string-length(UNIT_HEIGHT) = 0.0)">
                          <ns1:Height>
                            <ns1:HeightValue>
                              <xsl:value-of select="UNIT_HEIGHT"/>
                            </ns1:HeightValue>
                            <ns1:HeightUOMGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="DIMENSION_UM_CODE"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:HeightUOMGid>
                          </ns1:Height>
                        </xsl:if>
                      </ns1:LengthWidthHeight-->
                      <ns1:ShipUnitSeal>
                        <ns1:SealNumber>
                          <xsl:value-of select="SEAL_CODE"/>
                        </ns1:SealNumber>
                      </ns1:ShipUnitSeal>
                      <xsl:for-each select="PACKED_ITEMS/PACKED_ITEMS_ITEM">
                        <ns1:ShipUnitContent>
                          <ns1:LineNumber>
                            <xsl:value-of select="LINE_NUMBER"/>
                          </ns1:LineNumber>
                          <ns1:ItemQuantity>
                            <ns1:WeightVolume>
                              <ns1:Weight>
                                <ns1:WeightValue>
                                  <xsl:value-of select="GROSS_WEIGHT"/>
                                </ns1:WeightValue>
                                <ns1:WeightUOMGid>
                                  <ns1:Gid>
                                    <ns1:Xid>
                                      <xsl:value-of select="WEIGHT_UOM_CODE"/>
                                    </ns1:Xid>
                                  </ns1:Gid>
                                </ns1:WeightUOMGid>
                              </ns1:Weight>
                              <ns1:Volume>
                                <ns1:VolumeValue>
                                  <xsl:value-of select="VOLUME"/>
                                </ns1:VolumeValue>
                                <ns1:VolumeUOMGid>
                                  <ns1:Gid>
                                    <ns1:Xid>
                                      <xsl:value-of select="VOLUME_UOM_CODE"/>
                                    </ns1:Xid>
                                  </ns1:Gid>
                                </ns1:VolumeUOMGid>
                              </ns1:Volume>
                            </ns1:WeightVolume>
                            <ns1:PackagedItemCount>
                              <xsl:value-of select="ITEM_QUANTITY"/>
                            </ns1:PackagedItemCount>
                          </ns1:ItemQuantity>
                          <ns1:ReleaseGid>
                            <ns1:Gid>
                              <ns1:DomainName>
                                <!--xsl:value-of select="../../../../../../X_DOMAIN_NAME"/-->
                                <xsl:value-of select="concat(../../../../../../X_DOMAIN_NAME,'/','BMG')"/>
                              </ns1:DomainName>
                              <ns1:Xid>
                                <xsl:value-of select="../../../../DELIVERY_ID"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:ReleaseGid>
                          <ns1:ReleaseLineGid>
                            <ns1:Gid>
                              <ns1:DomainName>
                                <!--xsl:value-of select="../../../../../../X_DOMAIN_NAME"/-->
                                <xsl:value-of select="concat(../../../../../../X_DOMAIN_NAME,'/','BMG')"/>
                              </ns1:DomainName>
                              <ns1:Xid>
                                <xsl:value-of select="CONTENT_ID"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:ReleaseLineGid>
                        </ns1:ShipUnitContent>
                      </xsl:for-each>
                      <ns1:ShipUnitCount>
                        <xsl:value-of select='"1"'/>
                      </ns1:ShipUnitCount>
                    </ns1:ShipUnit>
                  </xsl:for-each>
                  <ns1:TotalWeightVolume>
                    <ns1:WeightVolume>
                      <xsl:if test="not(string-length(GROSS_WEIGHT) = 0.0)">
                        <ns1:Weight>
                          <ns1:WeightValue>
                            <xsl:value-of select="GROSS_WEIGHT"/>
                          </ns1:WeightValue>
                          <ns1:WeightUOMGid>
                            <ns1:Gid>
                              <ns1:Xid>
                                <xsl:value-of select="WEIGHT_UOM_CODE"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:WeightUOMGid>
                        </ns1:Weight>
                      </xsl:if>
                      <xsl:if test="not(string-length(VOLUME) = 0.0)">
                        <ns1:Volume>
                          <ns1:VolumeValue>
                            <xsl:value-of select="VOLUME"/>
                          </ns1:VolumeValue>
                          <ns1:VolumeUOMGid>
                            <ns1:Gid>
                              <ns1:Xid>
                                <xsl:value-of select="VOLUME_UOM_CODE"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:VolumeUOMGid>
                        </ns1:Volume>
                      </xsl:if>
                    </ns1:WeightVolume>
                  </ns1:TotalWeightVolume>
                  <ns1:TotalNetWeightVolume>
                    <xsl:if test="not(string-length(NET_WEIGHT) = 0.0)">
                      <ns1:Weight>
                        <ns1:WeightValue>
                          <xsl:value-of select="NET_WEIGHT"/>
                        </ns1:WeightValue>
                        <ns1:WeightUOMGid>
                          <ns1:Gid>
                            <ns1:Xid>
                              <xsl:value-of select="WEIGHT_UOM_CODE"/>
                            </ns1:Xid>
                          </ns1:Gid>
                        </ns1:WeightUOMGid>
                      </ns1:Weight>
                    </xsl:if>
                  </ns1:TotalNetWeightVolume>
                  <ns1:TotalPackagedItemCount>
                    <xsl:value-of select="TOTAL_ITEM_COUNT"/>
                  </ns1:TotalPackagedItemCount>
                  <xsl:if test="not(string-length(.) = 0.0)">
                    <ns1:ReleaseRefnum>
                      <ns1:ReleaseRefnumQualifierGid>
                        <ns1:Gid>
                          <ns1:Xid>
                            <xsl:value-of select="REVISION_QLFR"/>
                          </ns1:Xid>
                        </ns1:Gid>
                      </ns1:ReleaseRefnumQualifierGid>
                      <ns1:ReleaseRefnumValue>
                        <xsl:value-of select="REVISION"/>
                      </ns1:ReleaseRefnumValue>
                    </ns1:ReleaseRefnum>
                  </xsl:if>
                  <xsl:for-each select="REASON_OF_TRANSPORT">
                    <xsl:if test="not(string-length(.) = 0.0)">
                      <ns1:Remark>
                        <ns1:RemarkQualifierGid>
                          <ns1:Gid>
                            <ns1:Xid>
                              <xsl:value-of select="../REASON_OF_TRANSPORT_QLFR"/>
                            </ns1:Xid>
                          </ns1:Gid>
                        </ns1:RemarkQualifierGid>
                        <ns1:RemarkText>
                          <xsl:value-of select="."/>
                        </ns1:RemarkText>
                      </ns1:Remark>
                    </xsl:if>
                  </xsl:for-each>
                  <xsl:for-each select="DESCRIPTION">
                    <xsl:if test="not(string-length(.) = 0.0)">
                      <ns1:Remark>
                        <ns1:RemarkQualifierGid>
                          <ns1:Gid>
                            <ns1:Xid>
                              <xsl:value-of select="../DESCRIPTION_QLFR"/>
                            </ns1:Xid>
                          </ns1:Gid>
                        </ns1:RemarkQualifierGid>
                        <ns1:RemarkText>
                          <xsl:value-of select="."/>
                        </ns1:RemarkText>
                      </ns1:Remark>
                    </xsl:if>
                  </xsl:for-each>
                  <xsl:for-each select="ADDITIONAL_SHIPMENT_INFO">
                    <xsl:if test="not(string-length(.) = 0.0)">
                      <ns1:Remark>
                        <ns1:RemarkQualifierGid>
                          <ns1:Gid>
                            <ns1:Xid>
                              <xsl:value-of select="../ADDITIONAL_SHIPMENT_INFO_QLFR"/>
                            </ns1:Xid>
                          </ns1:Gid>
                        </ns1:RemarkQualifierGid>
                        <ns1:RemarkText>
                          <xsl:value-of select="."/>
                        </ns1:RemarkText>
                      </ns1:Remark>
                    </xsl:if>
                  </xsl:for-each>
                  <xsl:for-each select="ROUTING_INSTRUCTIONS">
                    <xsl:if test="not(string-length(.) = 0.0)">
                      <ns1:Remark>
                        <ns1:RemarkQualifierGid>
                          <ns1:Gid>
                            <ns1:Xid>
                              <xsl:value-of select="../ROUTING_INSTRUCTIONS_QLFR"/>
                            </ns1:Xid>
                          </ns1:Gid>
                        </ns1:RemarkQualifierGid>
                        <ns1:RemarkText>
                          <xsl:value-of select="."/>
                        </ns1:RemarkText>
                      </ns1:Remark>
                    </xsl:if>
                  </xsl:for-each>
                  <xsl:for-each select="DELIVERY_ID">
                    <ns1:Remark>
                      <ns1:RemarkQualifierGid>
                        <ns1:Gid>
                          <ns1:Xid>
                            <xsl:value-of select='"ACTUALS_RECEIVED"'/>
                          </ns1:Xid>
                        </ns1:Gid>
                      </ns1:RemarkQualifierGid>
                      <ns1:RemarkText>
                        <xsl:value-of select='"Y"'/>
                      </ns1:RemarkText>
                    </ns1:Remark>
                  </xsl:for-each>
                </ns1:Release>
              </ns1:GLogXMLElement>
            </xsl:for-each>
            <xsl:for-each select="/db:OutputParameters/X_TRIP_TAB/X_TRIP_TAB_ITEM">
              <!--xsl:variable name="tempSHIPMENT_XID" select="SHIPMENT_XID"/-->
              <xsl:variable name="tempIGNORE_FOR_PLANNING" select="IGNORE_FOR_PLANNING"/>
              <ns1:GLogXMLElement>
                <ns1:TransactionHeader>
                  <ns1:TimeZoneGid>
                    <ns1:Gid>
                      <ns1:Xid>
                        <xsl:value-of select="../../X_SERVER_TZ_CODE"/>
                      </ns1:Xid>
                    </ns1:Gid>
                  </ns1:TimeZoneGid>
                </ns1:TransactionHeader>
                <ns1:ActualShipment>
                  <ns1:Shipment>
                    <ns1:ShipmentHeader>
                      <ns1:ShipmentGid>
                        <ns1:Gid>
                          <ns1:DomainName>
                            <xsl:value-of select="concat(../../X_DOMAIN_NAME,'/','BMG')"/>
                          </ns1:DomainName>
                          <!--ns1:Xid>
                            <xsl:value-of select="SHIPMENT_XID"/>
                          </ns1:Xid-->
                          <xsl:choose>
                            <xsl:when test='orcl:compare-ignore-case($tempIGNORE_FOR_PLANNING,"N") = 0.0'>
                              <ns1:Xid>
                                <xsl:value-of select="SHIPMENT_XID"/>
                              </ns1:Xid>
                            </xsl:when>
                            <xsl:otherwise>
                              <ns1:Xid>
                                <xsl:value-of select='substring(SHIPMENT_XID,5)'/>
                              </ns1:Xid>
                            </xsl:otherwise>
                          </xsl:choose>
                        </ns1:Gid>
                      </ns1:ShipmentGid>
                      <ns1:ShipmentName>
                        <xsl:value-of select="SHIPMENT_NAME"/>
                      </ns1:ShipmentName>
                      <xsl:for-each select="TRIP_ID">
                        <ns1:ShipmentRefnum>
                          <ns1:ShipmentRefnumQualifierGid>
                            <ns1:Gid>
                              <ns1:Xid>
                                <xsl:value-of select="../TRIP_ID_QLFR"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:ShipmentRefnumQualifierGid>
                          <ns1:ShipmentRefnumValue>
                            <xsl:value-of select="."/>
                          </ns1:ShipmentRefnumValue>
                        </ns1:ShipmentRefnum>
                      </xsl:for-each>
                      <xsl:for-each select="MASTER_BOL_NUMBER">
                        <xsl:if test="not(string-length(.) = 0.0)">
                          <ns1:ShipmentRefnum>
                            <ns1:ShipmentRefnumQualifierGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="../MBOL_NUMBER_QLFR"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:ShipmentRefnumQualifierGid>
                            <ns1:ShipmentRefnumValue>
                              <xsl:value-of select="."/>
                            </ns1:ShipmentRefnumValue>
                          </ns1:ShipmentRefnum>
                        </xsl:if>
                      </xsl:for-each>
                      <xsl:for-each select="PLANNED_FLAG">
                        <ns1:ShipmentRefnum>
                          <ns1:ShipmentRefnumQualifierGid>
                            <ns1:Gid>
                              <ns1:Xid>
                                <xsl:value-of select="../PLANNED_TRIP_QLFR"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:ShipmentRefnumQualifierGid>
                          <ns1:ShipmentRefnumValue>
                            <xsl:value-of select="."/>
                          </ns1:ShipmentRefnumValue>
                        </ns1:ShipmentRefnum>
                      </xsl:for-each>
                      <xsl:for-each select="MANUAL_FREIGHT_COSTS">
                        <xsl:if test="not(string-length(.) = 0.0)">
                          <ns1:ShipmentRefnum>
                            <ns1:ShipmentRefnumQualifierGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="../MANUAL_FREIGHT_COSTS_QLFR"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:ShipmentRefnumQualifierGid>
                            <ns1:ShipmentRefnumValue>
                              <xsl:value-of select="."/>
                            </ns1:ShipmentRefnumValue>
                          </ns1:ShipmentRefnum>
                        </xsl:if>
                      </xsl:for-each>
                      <xsl:for-each select="CURRENCY_CODE">
                        <xsl:if test="not(string-length(.) = 0.0)">
                          <ns1:ShipmentRefnum>
                            <ns1:ShipmentRefnumQualifierGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="../MAN_FREIGHT_COST_CUR_QLFR"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:ShipmentRefnumQualifierGid>
                            <ns1:ShipmentRefnumValue>
                              <xsl:value-of select="."/>
                            </ns1:ShipmentRefnumValue>
                          </ns1:ShipmentRefnum>
                        </xsl:if>
                      </xsl:for-each>
                      <xsl:for-each select="OPERATOR">
                        <xsl:if test="not(string-length(.) = 0.0)">
                          <ns1:ShipmentRefnum>
                            <ns1:ShipmentRefnumQualifierGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="../OPERATOR_QLFR"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:ShipmentRefnumQualifierGid>
                            <ns1:ShipmentRefnumValue>
                              <xsl:value-of select="."/>
                            </ns1:ShipmentRefnumValue>
                          </ns1:ShipmentRefnum>
                        </xsl:if>
                      </xsl:for-each>
                      <ns1:TransactionCode>
                        <xsl:value-of select="TRANSACTION_CODE"/>
                      </ns1:TransactionCode>
                      <ns1:ReplaceChildren>
                        <xsl:for-each select="TRANSACTION_CODE">
                          <ns1:ManagedChild>
                            <xsl:value-of select='"ShipmentStopDetail"'/>
                          </ns1:ManagedChild>
                        </xsl:for-each>
                        <xsl:for-each select="TRANSACTION_CODE">
                          <ns1:ManagedChild>
                            <xsl:value-of select='"ShipUnitContent"'/>
                          </ns1:ManagedChild>
                        </xsl:for-each>
                      </ns1:ReplaceChildren>
                      <ns1:IntCommand>
                        <ns1:IntCommandName>
                          <xsl:value-of select='"MapTempReferences"'/>
                        </ns1:IntCommandName>
                      </ns1:IntCommand>
                      <ns1:InternalShipmentStatus>
                        <ns1:StatusTypeGid>
                          <ns1:Gid>
                            <ns1:DomainName>SMG/BMG</ns1:DomainName>
                            <ns1:Xid>CONFIRMED</ns1:Xid>
                          </ns1:Gid>
                        </ns1:StatusTypeGid>
                        <ns1:StatusValueGid>
                          <ns1:Gid>
                            <ns1:DomainName>SMG/BMG</ns1:DomainName>
                            <ns1:Xid>CONFIRMED_UPDATED</ns1:Xid>
                          </ns1:Gid>
                        </ns1:StatusValueGid>
                      </ns1:InternalShipmentStatus>
                      <xsl:if test="not(string-length(SERVICE_PROVIDER_XID) = 0.0)">
                        <ns1:ServiceProviderGid>
                          <ns1:Gid>
                            <ns1:DomainName>
                              <xsl:value-of select="../../X_DOMAIN_NAME"/>
                            </ns1:DomainName>
                            <ns1:Xid>
                              <xsl:value-of select="SERVICE_PROVIDER_XID"/>
                            </ns1:Xid>
                          </ns1:Gid>
                        </ns1:ServiceProviderGid>
                      </xsl:if>
                      <ns1:IsServiceProviderFixed>
                        <xsl:value-of select="IGNORE_FOR_PLANNING"/>
                      </ns1:IsServiceProviderFixed>
                      <xsl:if test="not(string-length(TRANSPORT_MODE_XID) = 0.0)">
                        <ns1:TransportModeGid>
                          <ns1:Gid>
                            <!--ns1:DomainName>
                              <xsl:value-of select="../../X_DOMAIN_NAME"/>
                            </ns1:DomainName-->
                            <ns1:Xid>
                              <xsl:value-of select="TRANSPORT_MODE_XID"/>
                            </ns1:Xid>
                          </ns1:Gid>
                        </ns1:TransportModeGid>
                      </xsl:if>
                      <xsl:if test="not((string-length(GROSS_WEIGHT) = 0.0)) or not((string-length(VOLUME) = 0.0))">
                        <ns1:TotalWeightVolume>
                          <ns1:WeightVolume>
                            <xsl:if test="not(string-length(GROSS_WEIGHT) = 0.0)">
                              <ns1:Weight>
                                <ns1:WeightValue>
                                  <xsl:value-of select="GROSS_WEIGHT"/>
                                </ns1:WeightValue>
                                <ns1:WeightUOMGid>
                                  <ns1:Gid>
                                    <ns1:Xid>
                                      <xsl:value-of select="WEIGHT_UOM_XID"/>
                                    </ns1:Xid>
                                  </ns1:Gid>
                                </ns1:WeightUOMGid>
                              </ns1:Weight>
                            </xsl:if>
                            <xsl:if test="not(string-length(VOLUME) = 0.0)">
                              <ns1:Volume>
                                <ns1:VolumeValue>
                                  <xsl:value-of select="VOLUME"/>
                                </ns1:VolumeValue>
                                <ns1:VolumeUOMGid>
                                  <ns1:Gid>
                                    <ns1:Xid>
                                      <xsl:value-of select="VOLUME_UOM_XID"/>
                                    </ns1:Xid>
                                  </ns1:Gid>
                                </ns1:VolumeUOMGid>
                              </ns1:Volume>
                            </xsl:if>
                          </ns1:WeightVolume>
                        </ns1:TotalWeightVolume>
                      </xsl:if>
                      <xsl:if test="not(string-length(NET_WEIGHT) = 0.0)">
                        <ns1:TotalNetWeightVolume>
                          <ns1:Weight>
                            <ns1:WeightValue>
                              <xsl:value-of select="NET_WEIGHT"/>
                            </ns1:WeightValue>
                            <ns1:WeightUOMGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="WEIGHT_UOM_XID"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:WeightUOMGid>
                          </ns1:Weight>
                        </ns1:TotalNetWeightVolume>
                      </xsl:if>
                      <ns1:TotalShipUnitCount>
                        <xsl:value-of select="SHIPUNIT_COUNT"/>
                      </ns1:TotalShipUnitCount>
                      <ns1:TotalPackagedItemCount>
                        <xsl:value-of select="PACKED_ITEM_COUNT"/>
                      </ns1:TotalPackagedItemCount>
                      <xsl:if test="not(string-length(PAYMENT_CODE_XID) = 0.0)">
                        <ns1:CommercialTerms>
                          <ns1:PaymentMethodCodeGid>
                            <ns1:Gid>
                              <ns1:DomainName>
                                <xsl:value-of select="../../X_DOMAIN_NAME"/>
                              </ns1:DomainName>
                              <ns1:Xid>
                                <xsl:value-of select="PAYMENT_CODE_XID"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:PaymentMethodCodeGid>
                        </ns1:CommercialTerms>
                      </xsl:if>
                      <xsl:if test="not(string-length(ROUTING_INSTRUCTIONS) = 0.0)">
                        <ns1:Remark>
                          <ns1:RemarkQualifierGid>
                            <ns1:Gid>
                              <ns1:Xid>
                                <xsl:value-of select="ROUTING_INSTR_QLFR"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:RemarkQualifierGid>
                          <ns1:RemarkText>
                            <xsl:value-of select="ROUTING_INSTRUCTIONS"/>
                          </ns1:RemarkText>
                        </ns1:Remark>
                      </xsl:if>
                      <ns1:StopCount>
                        <xsl:value-of select="STOP_COUNT"/>
                      </ns1:StopCount>
                    </ns1:ShipmentHeader>
                    <ns1:ShipmentHeader2>
                      <ns1:ShipmentAsWork>
                        <xsl:value-of select="IGNORE_FOR_PLANNING"/>
                      </ns1:ShipmentAsWork>
                    </ns1:ShipmentHeader2>
                    <ns1:SEquipment>
                      <xsl:if test='orcl:compare-ignore-case(IGNORE_FOR_PLANNING,"N") = 0.0'>
                        <ns1:IntSavedQuery>
                          <ns1:IntSavedQueryGid>
                            <ns1:Gid>
                              <ns1:Xid>
                                <xsl:value-of select='"S_EQUIPMENT_1"'/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:IntSavedQueryGid>
                          <ns1:IntSavedQueryArg>
                            <ns1:ArgName>
                              <xsl:value-of select='"SHIPMENT_GID"'/>
                            </ns1:ArgName>
                            <ns1:ArgValue>
                              <!--xsl:value-of select='concat(concat(../../X_DOMAIN_NAME,"."),SHIPMENT_XID)'/-->
                              <xsl:value-of select='concat(concat(../../X_DOMAIN_NAME,"/BMG."),SHIPMENT_XID)'/>
                            </ns1:ArgValue>
                          </ns1:IntSavedQueryArg>
                        </ns1:IntSavedQuery>
                      </xsl:if>
                      <xsl:if test='orcl:compare-ignore-case(IGNORE_FOR_PLANNING,"Y") = 0.0'>
                        <ns1:SEquipmentGid>
                          <ns1:Gid>
                            <ns1:DomainName>
                              <!--xsl:value-of select="../../X_DOMAIN_NAME"/-->
                              <xsl:value-of select="concat(../../X_DOMAIN_NAME,'/','BMG')"/>
                            </ns1:DomainName>
                            <ns1:Xid>
                              <xsl:value-of select="SHIPMENT_XID"/>
                            </ns1:Xid>
                          </ns1:Gid>
                        </ns1:SEquipmentGid>
                      </xsl:if>
                      <xsl:choose>
                        <xsl:when test="not(string-length(EQUIPMENT_NUMBER) = 0.0)">
                          <ns1:EquipmentInitial>
                            <xsl:value-of select="translate(translate(EQUIPMENT_NUMBER, '. ', ''), '0123456789', '')"/>
                          </ns1:EquipmentInitial>
                          <ns1:EquipmentNumber>
                            <xsl:value-of select="substring(concat('0000000000',translate(translate(EQUIPMENT_NUMBER, '. ', ''), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', '')),string-length(translate(translate(EQUIPMENT_NUMBER, '. ', ''),'ABCDEFGHIJKLMNOPQRSTUVWXYZ', ''))+1,10)"/>
                          </ns1:EquipmentNumber>
                        </xsl:when>
                        <xsl:otherwise>
                          <ns1:EquipmentNumber>
                            <xsl:value-of select="'~'"/>
                          </ns1:EquipmentNumber>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="not(string-length(EQUIPMENT_XID) = 0.0)">
                          <ns1:EquipmentGroupGid>
                            <ns1:Gid>
                              <ns1:DomainName>
                                <xsl:value-of select="../../X_DOMAIN_NAME"/>
                              </ns1:DomainName>
                              <ns1:Xid>
                                <xsl:value-of select="EQUIPMENT_XID"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:EquipmentGroupGid>
                        </xsl:when>
                        <xsl:otherwise>
                          <ns1:EquipmentGroupGid>
                            <ns1:Gid>
                              <ns1:Xid>
                                <xsl:value-of select="'~'"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:EquipmentGroupGid>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:if test="not(string-length(EQUIPMENT_SEAL) = 0.0)">
                        <ns1:SEquipmentSeal>
                          <ns1:SequenceNumber>
                            <xsl:value-of select='"1"'/>
                          </ns1:SequenceNumber>
                          <ns1:SealNumber>
                            <xsl:value-of select="EQUIPMENT_SEAL"/>
                          </ns1:SealNumber>
                        </ns1:SEquipmentSeal>
                      </xsl:if>
                    </ns1:SEquipment>
                    <xsl:for-each select="SHIPMENT_STOPS/SHIPMENT_STOPS_ITEM">
                      <ns1:ShipmentStop>
                        <xsl:choose>
                          <!--xsl:when test="contains($tempSHIPMENT_XID , 'BMG')"-->
                          <xsl:when test='orcl:compare-ignore-case($tempIGNORE_FOR_PLANNING,"N") = 0.0'>
                            <ns1:StopSequence>
                              <!--xsl:value-of select="STOP_SEQUENCE_NUMBER"/-->
                              <xsl:value-of select='substring(STOP_SEQUENCE_NUMBER,2)'/>
                            </ns1:StopSequence>
                          </xsl:when>
                          <xsl:otherwise>
                            <ns1:StopSequence>
                              <xsl:value-of select="STOP_SEQUENCE_NUMBER"/>
                            </ns1:StopSequence>
                          </xsl:otherwise>
                        </xsl:choose>
                        <ns1:TransactionCode>
                          <xsl:value-of select="TRANSACTION_CODE"/>
                        </ns1:TransactionCode>
                        <ns1:LocationRef>
                          <ns1:LocationGid>
                            <ns1:Gid>
                              <ns1:DomainName>
                                <xsl:value-of select="../../../../X_DOMAIN_NAME"/>
                              </ns1:DomainName>
                              <ns1:Xid>
                                <xsl:value-of select="STOP_LOCATION_XID"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:LocationGid>
                        </ns1:LocationRef>
                        <ns1:ArrivalTime>
                          <ns1:EventTime>
                            <ns1:ActualTime>
                              <ns1:GLogDate>
                                <xsl:value-of select="ACTUAL_ARRIVAL_TIME"/>
                              </ns1:GLogDate>
                            </ns1:ActualTime>
                          </ns1:EventTime>
                        </ns1:ArrivalTime>
                        <ns1:DepartureTime>
                          <ns1:EventTime>
                            <ns1:ActualTime>
                              <ns1:GLogDate>
                                <xsl:value-of select="ACTUAL_DEPARTURE_TIME"/>
                              </ns1:GLogDate>
                            </ns1:ActualTime>
                          </ns1:EventTime>
                        </ns1:DepartureTime>
                        <xsl:for-each select="STOP_DETAILS/STOP_DETAILS_ITEM">
                          <ns1:ShipmentStopDetail>
                            <ns1:Activity>
                              <xsl:value-of select="ACTIVITY"/>
                            </ns1:Activity>
                            <xsl:if test="not(string-length(LPN_ID) = 0.0)">
                              <ns1:ShipUnitGid>
                                <ns1:Gid>
                                  <ns1:DomainName>
                                    <!--xsl:value-of select="../../../../../../X_DOMAIN_NAME"/-->
                                    <xsl:value-of select="concat(../../../../../../X_DOMAIN_NAME,'/','BMG')"/>
                                  </ns1:DomainName>
                                  <ns1:Xid>
                                    <xsl:value-of select="LPN_ID"/>
                                  </ns1:Xid>
                                </ns1:Gid>
                              </ns1:ShipUnitGid>
                            </xsl:if>
                          </ns1:ShipmentStopDetail>
                        </xsl:for-each>
                        <xsl:if test="not(string-length(DEPARTURE_SEAL_CODE) = 0.0)">
                          <ns1:Refnum>
                            <ns1:RefnumQualifierGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="DEPARTURE_SEAL_CODE_QLFR"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:RefnumQualifierGid>
                            <ns1:RefnumValue>
                              <xsl:value-of select="DEPARTURE_SEAL_CODE"/>
                            </ns1:RefnumValue>
                          </ns1:Refnum>
                        </xsl:if>
                      </ns1:ShipmentStop>
                    </xsl:for-each>
                    <xsl:for-each select="LPNS/LPN_ITEM">
                      <ns1:ShipUnit>
                        <ns1:ShipUnitGid>
                          <ns1:Gid>
                            <ns1:DomainName>
                              <!--xsl:value-of select="../../../../X_DOMAIN_NAME"/-->
                              <xsl:value-of select="concat(../../../../X_DOMAIN_NAME,'/','BMG')"/>
                            </ns1:DomainName>
                            <ns1:Xid>
                              <xsl:value-of select="LPN_ID"/>
                            </ns1:Xid>
                          </ns1:Gid>
                        </ns1:ShipUnitGid>
                        <xsl:if test="not(string-length(CONTAINER_TYPE_CODE) = 0.0)">
                          <ns1:ShipUnitSpecGid>
                            <ns1:Gid>
                              <ns1:DomainName>
                                <xsl:value-of select="../../../../X_DOMAIN_NAME"/>
                              </ns1:DomainName>
                              <ns1:Xid>
                                <xsl:value-of select="CONTAINER_TYPE_CODE"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:ShipUnitSpecGid>
                        </xsl:if>
                        <ns1:WeightVolume>
                          <xsl:if test="not(string-length(GROSS_WEIGHT) = 0.0)">
                            <ns1:Weight>
                              <ns1:WeightValue>
                                <xsl:value-of select="GROSS_WEIGHT"/>
                              </ns1:WeightValue>
                              <ns1:WeightUOMGid>
                                <ns1:Gid>
                                  <ns1:Xid>
                                    <xsl:value-of select="WEIGHT_UOM_CODE"/>
                                  </ns1:Xid>
                                </ns1:Gid>
                              </ns1:WeightUOMGid>
                            </ns1:Weight>
                          </xsl:if>
                          <xsl:if test="not(string-length(VOLUME) = 0.0)">
                            <ns1:Volume>
                              <ns1:VolumeValue>
                                <xsl:value-of select="VOLUME"/>
                              </ns1:VolumeValue>
                              <ns1:VolumeUOMGid>
                                <ns1:Gid>
                                  <ns1:Xid>
                                    <xsl:value-of select="VOLUME_UOM_CODE"/>
                                  </ns1:Xid>
                                </ns1:Gid>
                              </ns1:VolumeUOMGid>
                            </ns1:Volume>
                          </xsl:if>
                        </ns1:WeightVolume>
                        <ns1:UnitNetWeightVolume>
                          <ns1:Weight>
                            <ns1:WeightValue>
                              <xsl:value-of select="NET_WEIGHT"/>
                            </ns1:WeightValue>
                            <ns1:WeightUOMGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="WEIGHT_UOM_CODE"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:WeightUOMGid>
                          </ns1:Weight>
                        </ns1:UnitNetWeightVolume>
                        <!--ns1:LengthWidthHeight>
                          <ns1:Length>
                            <ns1:LengthValue>
                              <xsl:value-of select="UNIT_LENGTH"/>
                            </ns1:LengthValue>
                            <ns1:LengthUOMGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="DIMENSION_UM_CODE"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:LengthUOMGid>
                          </ns1:Length>
                          <ns1:Width>
                            <ns1:WidthValue>
                              <xsl:value-of select="UNIT_WIDTH"/>
                            </ns1:WidthValue>
                            <ns1:WidthUOMGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="DIMENSION_UM_CODE"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:WidthUOMGid>
                          </ns1:Width>
                          <ns1:Height>
                            <ns1:HeightValue>
                              <xsl:value-of select="UNIT_HEIGHT"/>
                            </ns1:HeightValue>
                            <ns1:HeightUOMGid>
                              <ns1:Gid>
                                <ns1:Xid>
                                  <xsl:value-of select="DIMENSION_UM_CODE"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:HeightUOMGid>
                          </ns1:Height>
                        </ns1:LengthWidthHeight-->
                        <ns1:ShipUnitSeal>
                          <ns1:SealNumber>
                            <xsl:value-of select="SEAL_CODE"/>
                          </ns1:SealNumber>
                        </ns1:ShipUnitSeal>
                        <xsl:for-each select="PACKED_ITEMS/PACKED_ITEMS_ITEM">
                          <ns1:ShipUnitContent>
                            <ns1:PackagedItemRef>
                              <ns1:PackagedItemGid>
                                <ns1:Gid>
                                  <ns1:DomainName>
                                    <xsl:value-of select="../../../../../../X_DOMAIN_NAME"/>
                                  </ns1:DomainName>
                                  <ns1:Xid>
                                    <xsl:value-of select="ITEM_REF"/>
                                  </ns1:Xid>
                                </ns1:Gid>
                              </ns1:PackagedItemGid>
                            </ns1:PackagedItemRef>
                            <ns1:LineNumber>
                              <xsl:value-of select="LINE_NUMBER"/>
                            </ns1:LineNumber>
                            <ns1:ItemQuantity>
                              <ns1:WeightVolume>
                                <ns1:Weight>
                                  <ns1:WeightValue>
                                    <xsl:value-of select="GROSS_WEIGHT"/>
                                  </ns1:WeightValue>
                                  <ns1:WeightUOMGid>
                                    <ns1:Gid>
                                      <ns1:Xid>
                                        <xsl:value-of select="WEIGHT_UOM_CODE"/>
                                      </ns1:Xid>
                                    </ns1:Gid>
                                  </ns1:WeightUOMGid>
                                </ns1:Weight>
                                <ns1:Volume>
                                  <ns1:VolumeValue>
                                    <xsl:value-of select="VOLUME"/>
                                  </ns1:VolumeValue>
                                  <ns1:VolumeUOMGid>
                                    <ns1:Gid>
                                      <ns1:Xid>
                                        <xsl:value-of select="VOLUME_UOM_CODE"/>
                                      </ns1:Xid>
                                    </ns1:Gid>
                                  </ns1:VolumeUOMGid>
                                </ns1:Volume>
                              </ns1:WeightVolume>
                              <ns1:PackagedItemCount>
                                <xsl:value-of select="ITEM_QUANTITY"/>
                              </ns1:PackagedItemCount>
                            </ns1:ItemQuantity>
                            <ns1:ReleaseGid>
                              <ns1:Gid>
                                <ns1:DomainName>
                                  <!--xsl:value-of select="../../../../../../X_DOMAIN_NAME"/-->
                                  <xsl:value-of select="concat(../../../../../../X_DOMAIN_NAME,'/','BMG')"/>
                                </ns1:DomainName>
                                <ns1:Xid>
                                  <xsl:value-of select="DELIVERY_ID"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:ReleaseGid>
                            <ns1:ReleaseLineGid>
                              <ns1:Gid>
                                <ns1:DomainName>
                                  <!--xsl:value-of select="../../../../../../X_DOMAIN_NAME"/-->
                                  <xsl:value-of select="concat(../../../../../../X_DOMAIN_NAME,'/','BMG')"/>
                                </ns1:DomainName>
                                <ns1:Xid>
                                  <xsl:value-of select="CONTENT_ID"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:ReleaseLineGid>
                            <ns1:ReleaseShipUnitGid>
                              <ns1:Gid>
                                <ns1:DomainName>
                                  <!--xsl:value-of select="../../../../../../X_DOMAIN_NAME"/-->
                                  <xsl:value-of select="concat(../../../../../../X_DOMAIN_NAME,'/','BMG')"/>
                                </ns1:DomainName>
                                <ns1:Xid>
                                  <xsl:value-of select="SHIP_UNIT_GID"/>
                                </ns1:Xid>
                              </ns1:Gid>
                            </ns1:ReleaseShipUnitGid>
                            <ns1:ReleaseShipUnitLineNumber>
                              <xsl:value-of select="LINE_NUMBER"/>
                            </ns1:ReleaseShipUnitLineNumber>
                          </ns1:ShipUnitContent>
                          <!--Added for ER bug 9442404  -->
                          <ns1:ReleaseShipUnitGid>
                            <ns1:Gid>
                              <ns1:DomainName>
                                <!--xsl:value-of select="../../../../../../X_DOMAIN_NAME"/-->
                                <xsl:value-of select="concat(../../../../../../X_DOMAIN_NAME,'/','BMG')"/>
                              </ns1:DomainName>
                              <ns1:Xid>
                                <xsl:value-of select="SHIP_UNIT_GID"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:ReleaseShipUnitGid>
                          <!-- End Addition  -->
                        </xsl:for-each>
                        <xsl:if test='orcl:compare-ignore-case(../../IGNORE_FOR_PLANNING,"Y") = 0.0'>
                          <ns1:SEquipmentGid>
                            <ns1:Gid>
                              <ns1:DomainName>
                                <!--xsl:value-of select="../../../../X_DOMAIN_NAME"/-->
                                <xsl:value-of select="concat(../../../../X_DOMAIN_NAME,'/','BMG')"/>
                              </ns1:DomainName>
                              <ns1:Xid>
                                <xsl:value-of select="../../SHIPMENT_XID"/>
                              </ns1:Xid>
                            </ns1:Gid>
                          </ns1:SEquipmentGid>
                        </xsl:if>
                        <xsl:if test='orcl:compare-ignore-case(../../IGNORE_FOR_PLANNING,"N") = 0.0'>
                          <ns1:SEquipmentGidQuery>
                            <ns1:SEquipGidMatchOption>
                              <xsl:value-of select='"Any"'/>
                            </ns1:SEquipGidMatchOption>
                          </ns1:SEquipmentGidQuery>
                        </xsl:if>
                      </ns1:ShipUnit>
                    </xsl:for-each>
                  </ns1:Shipment>
                </ns1:ActualShipment>
              </ns1:GLogXMLElement>
            </xsl:for-each>
          </ns1:TransmissionBody>
        </ns1:Transmission>
        <txn:returnStatus>
          <xsl:value-of select="/db:OutputParameters/X_RETURN_STATUS"/>
        </txn:returnStatus>
      </client:result>
    </client:WshSendTripToOtmServiceProcessResponse>
  </xsl:template>
</xsl:stylesheet>