<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Dec 28 23:53:26 CST 2015
  Author:  akshat.paharia
  Type: BPEL 2.0 Process
  Purpose: Empty BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ReadBOLShipmentAck"
         targetNamespace="http:/xmlns.eia.com/Implementation/ABF/NUC_ReadBOLAck_Transentric_OTM_ABF/ReadBOLShipmentAck"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:client="http:/xmlns.eia.com/Implementation/ABF/NUC_ReadBOLAck_Transentric_OTM_ABF/ReadBOLShipmentAck"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/ftp/I135/NUC_ReadBOLAck_Transentric_OTM_ABF/FTP_ReadFile_Transentric"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns2="http://xmlns.oracle.com/apps/wsh/outbound/txn/WshSendTripToOtmService"
         xmlns:ns3="http://xmlns.oracle.com/WshSendOtmDocument" xmlns:ns4="http://xmlns.oracle.com/apps/otm"
         xmlns:eia="http://xmlns.eia.com/extensions/1.0"
         xmlns:ns5="http://xmlns.oracle.com/apps/wsh/outbound/util/WshOtmGlobalOutbound"
         xmlns:ui="http://xmlns.oracle.com/soa/designer"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns6="http://xmlns.eia.com/CommonLogging"
         xmlns:ns34="http://xmlns.eia.com/customeFault/V1.0"
         xmlns:ns7="http://xmlns.oracle.com/pcbpel/adapter/ftp/I135/NUC_ReadBOLAck_Transentric_OTM_ABF/ftpService"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://xmlns.oracle.com/apps/otm"
          location="oramds:/apps/EIAMetadata/AO/OTM/common/V1.0/GLogXML.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>
  <import namespace="http://xmlns.oracle.com/pcbpel/adapter/ftp/I135/NUC_ReadBOLAck_Transentric_OTM_ABF/FTP_ReadFile_Transentric"
          location="../WSDLs/FTP_ReadFile_Transentric.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"
          ui:processWSDL="true"/>
  <partnerLinks>
    <partnerLink name="FTP_ReadFile_Transentric" partnerLinkType="ns1:Get_plt" myRole="Get_role"/>
    <partnerLink name="WS_WshSendOTMDoc" partnerLinkType="ns3:WshSendOtmDocument"
                 partnerRole="WshSendOtmDocumentProvider"/>
    <partnerLink name="CommonLogging" partnerLinkType="ns6:CommonLogging" partnerRole="CommonLoggingProvider"/>
  </partnerLinks>
  <variables>
    <variable name="ReceiveFileFromTransentric_Get_InputVariable" messageType="ns1:Get_msg"/>
    <variable name="InvokeSendTripsToOTM_process_InputVariable" messageType="ns3:WshSendOtmDocumentRequestMessage"/>
    <variable name="InvokeSendTripsToOTM_process_OutputVariable" messageType="ns3:WshSendOtmDocumentResponseMessage"/>
    <variable name="tempVarBody" messageType="ns3:WshSendOtmDocumentRequestMessage"/>
    <variable name="tempVarHeader" messageType="ns3:WshSendOtmDocumentRequestMessage"/>
    <variable name="gLogHeader" element="ns4:TransmissionHeader"/>
    <variable name="GetFileName" type="xsd:string"/>
  </variables>
  <faultHandlers>
    <catch faultName="ns34:CustomFault">
      <scope name="Scope1">
        <variables>
          <variable name="LogVar" messageType="ns6:CommonLoggingRequestMessage"/>
        </variables>
        <sequence name="Sequence2">
          <assign name="AssignLogVar" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
            <copy>
              <from>ora:getComponentInstanceId()</from>
              <to>$LogVar.CommonLogging/ns6:TransactionId</to>
            </copy>
            <copy>
              <from>'NextGen'</from>
              <to>$LogVar.CommonLogging/ns6:ProjectName</to>
            </copy>
            <copy>
              <from>'I135'</from>
              <to>$LogVar.CommonLogging/ns6:ComponentId</to>
            </copy>
            <copy>
              <from>ora:getComponentName()</from>
              <to>$LogVar.CommonLogging/ns6:TransactionName</to>
            </copy>
            <copy>
              <from>ora:getCompositeName()</from>
              <to>$LogVar.CommonLogging/ns6:ProcessName</to>
            </copy>
            <copy>
              <from>1</from>
              <to>$LogVar.CommonLogging/ns6:LoggingSystem</to>
            </copy>
            <copy>
              <from>32</from>
              <to>$LogVar.CommonLogging/ns6:SourceSystem</to>
            </copy>
            <copy>
              <from>31</from>
              <to>$LogVar.CommonLogging/ns6:TargetSystem</to>
            </copy>
            <copy>
              <from>4</from>
              <to>$LogVar.CommonLogging/ns6:LogType</to>
            </copy>
            <copy>
              <from>concat('FlowId: ',ora:getFlowId(),' FileName: ',$GetFileName,' Error: ',$InvokeSendTripsToOTM_process_OutputVariable.payload/ns4:TransmissionAckStatus,',',$InvokeSendTripsToOTM_process_OutputVariable.payload/ns4:TransmissionAckReason,',',$InvokeSendTripsToOTM_process_OutputVariable.payload/ns4:TransmissionText)</from>
              <to>$LogVar.CommonLogging/ns6:MessageDescription</to>
            </copy>
            <copy>
              <from>2</from>
              <to>$LogVar.CommonLogging/ns6:TransactionStatus</to>
            </copy>
            <copy>
              <from>'SOA'</from>
              <to>$LogVar.CommonLogging/ns6:CreatedBy</to>
            </copy>
            <copy>
              <from>'SOA'</from>
              <to>$LogVar.CommonLogging/ns6:UpdatedBy</to>
            </copy>
          </assign>
          <invoke name="InvokeErrorLog" partnerLink="CommonLogging" portType="ns6:CommonLogging" operation="process"
                  inputVariable="LogVar" bpelx:invokeAsDetail="no"
                  xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
                  xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
            <bpelx:toProperties>
              <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
            </bpelx:toProperties>
          </invoke>
        </sequence>
      </scope>
    </catch>
    <catchAll>
      <scope name="ScopeErrorLog" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
        <variables>
          <variable name="LogVar" messageType="ns6:CommonLoggingRequestMessage"/>
        </variables>
        <sequence name="Sequence1">
          <assign name="AssignLogVar">
            <copy>
              <from>ora:getComponentInstanceId()</from>
              <to>$LogVar.CommonLogging/ns6:TransactionId</to>
            </copy>
            <copy>
              <from>'NextGen'</from>
              <to>$LogVar.CommonLogging/ns6:ProjectName</to>
            </copy>
            <copy>
              <from>'I135'</from>
              <to>$LogVar.CommonLogging/ns6:ComponentId</to>
            </copy>
            <copy>
              <from>ora:getComponentName()</from>
              <to>$LogVar.CommonLogging/ns6:TransactionName</to>
            </copy>
            <copy>
              <from>ora:getCompositeName()</from>
              <to>$LogVar.CommonLogging/ns6:ProcessName</to>
            </copy>
            <copy>
              <from>1</from>
              <to>$LogVar.CommonLogging/ns6:LoggingSystem</to>
            </copy>
            <copy>
              <from>32</from>
              <to>$LogVar.CommonLogging/ns6:SourceSystem</to>
            </copy>
            <copy>
              <from>31</from>
              <to>$LogVar.CommonLogging/ns6:TargetSystem</to>
            </copy>
            <copy>
              <from>4</from>
              <to>$LogVar.CommonLogging/ns6:LogType</to>
            </copy>
            <copy>
              <from>2</from>
              <to>$LogVar.CommonLogging/ns6:TransactionStatus</to>
            </copy>
            <copy>
              <from>concat('FlowId: ',ora:getFlowId(),' FileName: ',$GetFileName,' Error ',ora:getFaultAsString())</from>
              <to>$LogVar.CommonLogging/ns6:MessageDescription</to>
            </copy>
            <copy>
              <from>'SOA'</from>
              <to>$LogVar.CommonLogging/ns6:CreatedBy</to>
            </copy>
            <copy>
              <from>'SOA'</from>
              <to>$LogVar.CommonLogging/ns6:UpdatedBy</to>
            </copy>
          </assign>
          <invoke name="InvokeErrorLog" partnerLink="CommonLogging" portType="ns6:CommonLogging" operation="process"
                  inputVariable="LogVar" bpelx:invokeAsDetail="no"
                  xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
            <bpelx:toProperties>
              <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
            </bpelx:toProperties>
          </invoke>
        </sequence>
      </scope>
    </catchAll>
  </faultHandlers>
  <sequence name="main">
    <receive name="ReceiveFileFromTransentric" createInstance="yes" partnerLink="FTP_ReadFile_Transentric"
             portType="ns1:Get_ptt" operation="Get" variable="ReceiveFileFromTransentric_Get_InputVariable">
      <bpelx:fromProperties>
        <bpelx:fromProperty name="jca.ftp.FileName" variable="GetFileName"/>
      </bpelx:fromProperties>
    </receive>
    <scope name="ScopeStartLog">
      <variables>
        <variable name="LogVar" messageType="ns6:CommonLoggingRequestMessage"/>
      </variables>
      <faultHandlers>
        <catchAll>
          <empty name="DoNothing"/>
        </catchAll>
      </faultHandlers>
      <sequence name="Sequence1">
        <assign name="AssignLogVar">
          <copy>
            <from>oraext:setFlowInstanceTitle(string(ora:getComponentInstanceId()))</from>
            <to>$LogVar.CommonLogging/ns6:TransactionId</to>
          </copy>
          <copy>
            <from>$GetFileName</from>
            <to>$LogVar.CommonLogging/ns6:MessageDescription</to>
          </copy>
          <copy>
            <from>ora:getComponentInstanceId()</from>
            <to>$LogVar.CommonLogging/ns6:TransactionId</to>
          </copy>
          <copy>
            <from>'NextGen'</from>
            <to>$LogVar.CommonLogging/ns6:ProjectName</to>
          </copy>
          <copy>
            <from>'I135'</from>
            <to>$LogVar.CommonLogging/ns6:ComponentId</to>
          </copy>
          <copy>
            <from>ora:getComponentName()</from>
            <to>$LogVar.CommonLogging/ns6:TransactionName</to>
          </copy>
          <copy>
            <from>ora:getCompositeName()</from>
            <to>$LogVar.CommonLogging/ns6:ProcessName</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$LogVar.CommonLogging/ns6:LoggingSystem</to>
          </copy>
          <copy>
            <from>32</from>
            <to>$LogVar.CommonLogging/ns6:SourceSystem</to>
          </copy>
          <copy>
            <from>31</from>
            <to>$LogVar.CommonLogging/ns6:TargetSystem</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$LogVar.CommonLogging/ns6:LogType</to>
          </copy>
          <copy>
            <from>'BMG-180'</from>
            <to>$LogVar.CommonLogging/ns6:MessageCode</to>
          </copy>
          <copy>
            <from>1</from>
            <to>$LogVar.CommonLogging/ns6:TransactionStatus</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$LogVar.CommonLogging/ns6:CreatedBy</to>
          </copy>
          <copy>
            <from>'SOA'</from>
            <to>$LogVar.CommonLogging/ns6:UpdatedBy</to>
          </copy>
        </assign>
        <invoke name="InvokeStartLog" partnerLink="CommonLogging" portType="ns6:CommonLogging" operation="process"
                inputVariable="LogVar" bpelx:invokeAsDetail="no">
          <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
          <bpelx:toProperties>
            <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
          </bpelx:toProperties>
        </invoke>
      </sequence>
    </scope>
    <!--assign name="Assign_Body_Header">
      <copy>
        <from>$ReceiveFileFromTransentric_Get_InputVariable.body</from>
        <to>$tempVarBody.payload</to>
      </copy>
    </assign>-->
    <!--assign name="Transformation_Header">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from>ora:doXSLTransformForDoc("../Transformations/Xform_FTP_OTM.xsl", $ReceiveFileFromTransentric_Get_InputVariable.body)</from>
        <to variable="InvokeSendTripsToOTM_process_InputVariable" part="payload"/>
      </copy>
    </assign>-->
    <assign name="Assign_InvokeSendToOTM">
      <copy>
        <from>$ReceiveFileFromTransentric_Get_InputVariable.body</from>
        <to>$InvokeSendTripsToOTM_process_InputVariable.payload</to>
      </copy>
    </assign>
    <assign name="Assign_Username_Pwd">
      <copy>
        <from>eia:getEIAServiceProperty("WshSendOtmDocument","Username")</from>
        <to>$gLogHeader/ns4:UserName</to>
      </copy>
      <copy>
        <from>eia:getEIAServiceProperty("WshSendOtmDocument","Password")</from>
        <to>$gLogHeader/ns4:Password</to>
      </copy>
    </assign>
    <assign name="AssignAppendHeader">
      <extensionAssignOperation>
        <bpelx:append>
          <bpelx:from>$gLogHeader</bpelx:from>
          <bpelx:to>$InvokeSendTripsToOTM_process_InputVariable.payload</bpelx:to>
        </bpelx:append>
      </extensionAssignOperation>
    </assign>
    <invoke name="InvokeSenDocToOTM" partnerLink="WS_WshSendOTMDoc" portType="ns3:WshSendOtmDocument"
            operation="process" inputVariable="InvokeSendTripsToOTM_process_InputVariable"
            outputVariable="InvokeSendTripsToOTM_process_OutputVariable" bpelx:invokeAsDetail="no">
      <bpelx:toProperties>
        <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("WshSendOtmDocument","endpointURI")</bpelx:toProperty>
      </bpelx:toProperties>
    </invoke>
    <if name="IfStatusError">
      <documentation>
        <![CDATA[Success]]>
      </documentation>
      <condition>$InvokeSendTripsToOTM_process_OutputVariable.payload/ns4:EchoedTransmissionHeader/ns4:TransmissionHeader/ns4:ReferenceTransmissionNo</condition>
      <scope name="ScopeEndLog" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
        <variables>
          <variable name="LogVar" messageType="ns6:CommonLoggingRequestMessage"/>
        </variables>
        <faultHandlers>
          <catchAll>
            <empty name="DoNothing"/>
          </catchAll>
        </faultHandlers>
        <sequence name="Sequence1">
          <assign name="AssignLogVar">
            <copy>
              <from>ora:getComponentInstanceId()</from>
              <to>$LogVar.CommonLogging/ns6:TransactionId</to>
            </copy>
            <copy>
              <from>'NextGen'</from>
              <to>$LogVar.CommonLogging/ns6:ProjectName</to>
            </copy>
            <copy>
              <from>'I135'</from>
              <to>$LogVar.CommonLogging/ns6:ComponentId</to>
            </copy>
            <copy>
              <from>ora:getComponentName()</from>
              <to>$LogVar.CommonLogging/ns6:TransactionName</to>
            </copy>
            <copy>
              <from>ora:getCompositeName()</from>
              <to>$LogVar.CommonLogging/ns6:ProcessName</to>
            </copy>
            <copy>
              <from>$InvokeSendTripsToOTM_process_OutputVariable.payload/ns4:EchoedTransmissionHeader/ns4:TransmissionHeader/ns4:ReferenceTransmissionNo</from>
              <to>$LogVar.CommonLogging/ns6:MessageDescription</to>
            </copy>
            <copy>
              <from>1</from>
              <to>$LogVar.CommonLogging/ns6:LoggingSystem</to>
            </copy>
            <copy>
              <from>32</from>
              <to>$LogVar.CommonLogging/ns6:SourceSystem</to>
            </copy>
            <copy>
              <from>31</from>
              <to>$LogVar.CommonLogging/ns6:TargetSystem</to>
            </copy>
            <copy>
              <from>1</from>
              <to>$LogVar.CommonLogging/ns6:LogType</to>
            </copy>
            <copy>
              <from>'BMG-030'</from>
              <to>$LogVar.CommonLogging/ns6:MessageCode</to>
            </copy>
            <copy>
              <from>2</from>
              <to>$LogVar.CommonLogging/ns6:TransactionStatus</to>
            </copy>
            <copy>
              <from>'SOA'</from>
              <to>$LogVar.CommonLogging/ns6:CreatedBy</to>
            </copy>
            <copy>
              <from>'SOA'</from>
              <to>$LogVar.CommonLogging/ns6:UpdatedBy</to>
            </copy>
          </assign>
          <invoke name="InvokeEndLog" partnerLink="CommonLogging" portType="ns6:CommonLogging" operation="process"
                  inputVariable="LogVar" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
                  bpelx:invokeAsDetail="no">
            <bpelx:skipCondition>eia:getEIAServiceProperty("CommonLogging","LOGGING.ENABLED") = "false"</bpelx:skipCondition>
            <bpelx:toProperties>
              <bpelx:toProperty name="endpointURI">eia:getEIAServiceProperty("CommonLogging","endpointURI")</bpelx:toProperty>
            </bpelx:toProperties>
          </invoke>
        </sequence>
      </scope>
      <else>
        <documentation>
          <![CDATA[Error]]>
        </documentation>
        <throw name="ThrowCustomFault" faultName="ns34:CustomFault"/>
      </else>
    </if>
  </sequence>
</process>